{"mappings":"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ACJ,SAAO,CAAA,GAAA,mBAAA,AAAA;IACP,aAAW,CAAA,GAAA,2BAAA,AAAA;IACX,OAAK,CAAA,GAAA,eAAA,AAAA;AACN;;;AE1HD;;;;;;;;;;;;;;CAcG;;AASH;;;;CAIG,GACH,mDAAgB;AAMhB;;;;;CAKG,GACH,oEAAgB;AAxBhB;AACA;AACA;AAGA,IAAM,OAAO,CAAA,GAAA,aAAO,AAAP,EAAQ,QAAQ;AAOvB,SAAU,cACd,OAA0C;IAA1C,IAAA,YAAA,KAAA,GAAA,UAAA,CAAA;IAEA,OAAO,IAAI,CAAA,GAAA,wBAAW,AAAX,EAAY,IAAI,IAAI,OAAO,OAAO,CAAC;AAChD;AAQM,SAAU,+BACd,GAAW;IAEX,IAAI,OAAO,QAAQ,UAAU;QAC3B,KAAK,KAAK,CACR,uDAAqD,OAAO;QAE9D,MAAM;IACP;IAED,OAAO;QACL,UAAU,CAAA,GAAA,kCAA0B,AAA1B;QACV,UAAA;YACE,OAAO;QACT;IACD;AACH;;;AExDA;;;;;;;;;;;;;;CAcG;;A,6C;AAEH;AACA;AACA;AAOA;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAMA,IAAM,WAAW;AAEjB;;;CAGG,GACH,IAAA,UAAA,WAAA,GAAA;IAYE;;;KAGG,GACH,SAAA;QACE,SAAS,UAAU,QAA0B;YAC3C,OAAO;gBAAU,IAAA,OAAA,EAAA;gBAAA,IAAA,IAAA,KAAA,GAAA,KAAA,UAAA,MAAO,EAAP,KAAA,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA;gBACf,IAAM,SAAS,CAAA,GAAA,sBAAS,AAAT,EAAU;gBACzB,6BAA6B;gBAC7B,IAAI,CAAC,QAAQ;gBACb,OAAO,MAAM,CAAC,SAAS,CAAA,KAAA,CAAhB,QAAM,cAAA,EAAA,EAAA,OAAc,OAAI;YACjC;QACF;QAEA,mFAAmF;QACnF,IAAM,OAAO,IAAI;QAEjB,6BAA6B;QAE7B,IAAM,YAAwC,SAC5C,MAAM,EACN,iBAAmD;Y,I,I,I;YAAnD,IAAA,sBAAA,KAAA,GAAA,oBAAA;gBAAsB,UAAU,CAAA,GAAA,mBAAY,AAAZ,EAAa,IAAI;YAAA;YAEjD,IAAI,WAAW,MAAM;gBACnB,mCAAmC;gBACnC,2DAA2D;gBAC3D,qFAAqF;gBACrF,IAAM,MAAM,IAAI,MACd;gBAEF,KAAK,KAAK,CAAC,AAAA,CAAA,KAAA,IAAI,KAAK,AAAL,MAAK,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,OAAO;gBACnC,OAAO;YACR;YAED,IAAI,OAAO,sBAAsB,UAC/B,oBAAoB;gBAClB,UAAU;YACX;YAGH,IAAM,YAAY,CAAA,GAAA,sBAAS,AAAT,EAAU;YAC5B,IAAM,YAAY,CAAA,GAAA,wCAAwB,AAAxB,EAChB,AAAA,CAAA,KAAA,kBAAkB,QAAQ,AAAR,MAAQ,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,GAAA,mBAAY,AAAZ,EAAa,IAAI,EAC/C;YAEF,kFAAkF;YAClF,IAAI,aAAa,CAAC,kBAAkB,uBAAuB,EAAE;gBAC3D,IAAM,QAAQ,AAAA,CAAA,KAAA,IAAI,QAAQ,KAAK,AAAL,MAAK,QAAA,OAAA,KAAA,IAAA,KAAI;gBACnC,UAAU,IAAI,CAAC,6CAA2C;gBAC1D,UAAU,IAAI,CACZ,+DAA6D;YAEhE;YAED,OAAO,CAAA,GAAA,2BAAc,AAAd,EAAe,QAAQ,WAAW,MAAM;QACjD;QAEA,KAAK,SAAS,GAAG;QAEjB,KAAK,OAAO,GAAG;YACb,CAAA,GAAA,6BAAgB,AAAhB,EAAiB,UAAU;QAC7B;QAEA,KAAK,qBAAqB,GAAG,SAAC,OAA+B;YAC3D,OAAO,IAAI,CAAA,GAAA,oCAAmB,AAAnB,EAAoB;QACjC;QAEA,KAAK,OAAO,GAAG,UAAU;QACzB,KAAK,KAAK,GAAG,UAAU;QACvB,KAAK,IAAI,GAAG,UAAU;QACtB,KAAK,IAAI,GAAG,UAAU;QACtB,KAAK,KAAK,GAAG,UAAU;IACzB;IAjFA,kDAAA,GACc,QAAA,QAAQ,GAAtB;QACE,IAAI,CAAC,IAAI,CAAC,SAAS,EACjB,IAAI,CAAC,SAAS,GAAG,IAAI;QAGvB,OAAO,IAAI,CAAC,SAAS;IACvB;IA+FF,OAAA;AAAA;;;AE9IA;;;;;;;;;;;;;;CAcG;;A,yD;AAEH;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAGA;;;;;;;;CAQG,GACH,IAAA,sBAAA,WAAA,GAAA;IAGE,SAAA,oBAAY,KAA6B;QACvC,IAAI,CAAC,UAAU,GAAG,MAAM,SAAS,IAAI;IACvC;IAEO,oBAAA,SAAA,CAAA,KAAK,GAAZ;QAAa,IAAA,OAAA,EAAA;QAAA,IAAA,IAAA,KAAA,GAAA,KAAA,UAAA,MAAc,EAAd,KAAA,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA;QACX,OAAO,SAAS,SAAS,IAAI,CAAC,UAAU,EAAE;IAC5C;IAEO,oBAAA,SAAA,CAAA,KAAK,GAAZ;QAAa,IAAA,OAAA,EAAA;QAAA,IAAA,IAAA,KAAA,GAAA,KAAA,UAAA,MAAc,EAAd,KAAA,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA;QACX,OAAO,SAAS,SAAS,IAAI,CAAC,UAAU,EAAE;IAC5C;IAEO,oBAAA,SAAA,CAAA,IAAI,GAAX;QAAY,IAAA,OAAA,EAAA;QAAA,IAAA,I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Y,AAAZ,EAAa,KAAK;QAC9C,MAAM,YAAY,QAAQ,CAAA,GAAA,mBAAY,AAAZ,EAAa,IAAI;QAC3C,MAAM,YAAY,QAAQ,CAAA,GAAA,mBAAY,AAAZ,EAAa,IAAI;QAC3C,OAAO,YAAY,SAAS,CAAA,GAAA,mBAAY,AAAZ,EAAa,KAAK;QAC9C,SAAS,YAAY,WAAW,CAAA,GAAA,mBAAY,AAAZ,EAAa,OAAO;IACrD;AACH;;;AElDA;;;;;;;;;;;;;;CAcG,GA+CH;;;;CAIG;;kDACS;AAAZ,IAAY;AAAZ,CAAA,SAAY,YAAY;IACtB,qFAAA,GACA,YAAA,CAAA,YAAA,CAAA,OAAA,GAAA,EAAA,GAAA;IAEA,iCAAA,GACA,YAAA,CAAA,YAAA,CAAA,QAAA,GAAA,GAAA,GAAA;IAEA,kCAAA,GACA,YAAA,CAAA,YAAA,CAAA,OAAA,GAAA,GAAA,GAAA;IAEA,sCAAA,GACA,YAAA,CAAA,YAAA,CAAA,OAAA,GAAA,GAAA,GAAA;IAEA,8BAAA,GACA,YAAA,CAAA,YAAA,CAAA,QAAA,GAAA,GAAA,GAAA;IAEA;;;KAGG,GACH,YAAA,CAAA,YAAA,CAAA,UAAA,GAAA,GAAA,GAAA;IAEA,yDAAA,GACA,YAAA,CAAA,YAAA,CAAA,MAAA,GAAA,KAAA,GAAA;AACF,CAAA,EAxBY,gBAAA,CAAA,eAAY,CAAA,CAAA;;;AElExB;;;;;;;;;;;;;;CAcG;;A,iD;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;AAIH,IAAA,cAAA,WAAA,GAAA;IAGE,SAAA,YAAY,OAAmC;QAC7C,I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nB,OAAO,IAAI,CAAA,GAAA,kCAAgB,AAAhB,EAAiB;aAE5B,OAAO,IAAI,CAAA,GAAA,kCAAgB,AAAhB;IAEf;IAiBA,WAAA,SAAA,CAAA,eAAe,GAAf,SACE,IAAY,EACZ,IAAsB,EACtB,IAAkB,EAClB,IAAQ;QAER,IAAI;QACJ,IAAI;QACJ,IAAI;QAEJ,IAAI,UAAU,MAAM,GAAG,GACrB;aACK,IAAI,UAAU,MAAM,KAAK,GAC9B,KAAK;aACA,IAAI,UAAU,MAAM,KAAK,GAAG;YACjC,OAAO;YACP,KAAK;QACN,OAAM;YACL,OAAO;YACP,MAAM;YACN,KAAK;QACN;QAED,IAAM,gBAAgB,QAAG,QAAH,QAAG,KAAA,IAAH,MAAO,WAAW,MAAM;QAC9C,IAAM,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,MAAM;QACxC,IAAM,qBAAqB,CAAA,GAAA,qBAAO,AAAP,EAAQ,eAAe;QAElD,OAAO,WAAW,IAAI,CAAC,oBAAoB,IAAI,WAAW;IAC5D;IACF,OAAA;AAAA;AAEA,SAAS,cAAc,WAAgB;IACrC,OACE,OAAO,gBAAgB,YACvB,OAAO,WAAW,CAAC,SAAS,KAAK,YACjC,OAAO,WAAW,CAAC,UAAU,KAAK,YAClC,OAAO,WAAW,CAAC,aAAa,KAAK;AAEzC;;;AE5GA;;;;;;;;;;;;;;CAcG;;A,gD;AAEH;AAEA;AAKA;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAEA,IAAM,WAAW;AACjB,IAAM,uBAAuB,IAAI,CAAA,GAAA,sCAAkB,AAAlB;AAEjC;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,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;AAaA;;;;;;;CAOG,GACH,IAAA,sBAAA,WAAA,GAAA;IAIE,SAAA,oBAA6B,SAAuB;QAAvB,IAAA,CAAA,SAAS,GAAT;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA,GAAA,oBAAc,AAAd,EAAe,IAAI,CAAC,SAAS,EAAE,IAAI;QAC5D,IAAI,CAAC,kBAAkB,GAAG,IAAI;IAChC;IAEM,oBAAA,SAAA,CAAA,UAAU,GAAhB;Q,O,U,I,E,K,G,K,G;Y,O,Y,I,E,S,E;gB,O,G,K;oB,K;wBACE,8CAA8C;wBAC9C,OAAA;4BAAA,EAAA,OAAA;4BAAM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oBACzB,IAAI,OAAO,UAAU,eAAe,UAAU,MAC5C,WAAW,CAAC,IAAI,GAAG,OAAO;gBAE7B;QACJ;IACF;IAED,OAAO;AACT;;;AEnXA;;;;;;;;;;;;;;CAcG;;yDAES;AAAZ,IAAY;AAAZ,CAAA,SAAY,mBAAmB;IAC7B,mBAAA,CAAA,YAAA,GAAA;IACA,mBAAA,CAAA,WAAA,GAAA;IACA,mBAAA,CAAA,uBAAA,GAAA;IACA,mBAAA,CAAA,sBAAA,GAAA;IACA,mBAAA,CAAA,0BAAA,GAAA;IACA,mBAAA,CAAA,eAAA,GAAA;AACF,CAAA,EAPY,uBAAA,CAAA,sBAAmB,CAAA,CAAA;;;AEhB/B;;;;;;;;;;;;;;CAcG,GAEH,4EAA4E;AAE5E;;;;;;CAMG,GAEH,8DAAA,GACA,8EAA8E;;;iDACjE;;AAAN,IAAM,cACX,OAAO,eAAe,WAClB,aACA,OAAO,SAAS,WACd,OACA,OAAO,WAAW,WAChB,SACA,OAAO,WAAW,WAChB,SACC,CAAA;;;AErCb;;;;;;;;;;;;;;CAcG;;AAIH,iDAAgB;AAFhB;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAEM,SAAU,YAAY,MAAc;IACxC,OAAO,KAAK,OAAO,YAAY,CAAA,KAAA,CAAnB,QAAM,cAAA,EAAA,EAAA,OAAiB,CAAA,GAAA,wBAAW,AAAX,EAAY,UAAO;AACxD;;;AEpBA;;;;;;;;;;;;;;CAcG;;AAiBH,iDAAgB;AAfhB,SAAS,SAAS,QAAgB;IAChC,MAAM;IACN,IAAI,YAAY,MAAM,YAAY,IAChC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,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;AAZV,SAAU,WAAW,GAAW,EAAE,UAA2B;IACjE,IAAI,OAAO,eAAe,UACxB,OAAO,QAAQ;SAEf,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC;AAEvB;AAMM,SAAU,aACd,GAAW,EACX,WAAoC;I,I,K;IAEpC,IAAI,CAAC,aACH,OAAO;I,I;QAGT,IAAwB,IAAA,gBAAA,SAAA,cAAW,kBAAA,cAAA,IAAA,IAAA,CAAA,gBAAA,IAAA,EAAA,kBAAA,cAAA,IAAA,GAAE;YAAhC,IAAM,YAAS,gBAAA,KAAA;YAClB,IAAI,WAAW,KAAK,YAClB,OAAO;QAEV;I,E,O,O;Q,M;Y,O;Q;I,S;Q,I;Y,I,mB,C,gB,I,I,C,K,c,M,A,G,G,I,C;Q,S;Y,I,K,M,I,K;Q;I;IACD,OAAO;AACT;;;AEzCA;;;;;;;;;;;;;;CAcG,GAIH;;;CAGG;;AACH,+CAAgB;AAAV,SAAU,UAAU,IAAa;IACrC,OACE,OAAO,SAAS,cAChB,OAAQ,KAAqB,UAAU,KAAK,cAC5C,OAAQ,KAAqB,QAAQ,KAAK,cACzC,KAAqB,SAAS,KAAK;AAExC;;;AE7BA;;;;;;;;;;;;;;CAcG;;A,oD;AAEH;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAEA;;CAEG,GACH,IAAA,iBAAA,WAAA,GAAA;IAOE,SAAA,eACU,SAAY,EACZ,KAAW;QADX,IAAA,CAAA,SAAS,GAAT;QACA,IAAA,CAAA,KAAK,GAAL;QAJF,IAAA,CAAA,SAAS,GAAG;QACZ,IAAA,CAAA,SAAS,GAAG,IAAI,CAAA,GAAA,iBAAQ,AAAR;IAIrB;IAEH,OAAA,cAAA,CAAI,eAAA,SAAA,EAAA,YAAJ;QAAA,KAAA;YACE,OAAO,IAAI,CAAC,SAAS;QACvB;Q,Y;Q,c;IAAC;IAED,OAAA,cAAA,CAAI,eAAA,SAAA,EAAA,WAAJ;QAAA,KAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO;QAC/B;Q,Y;Q,c;IAAC;IAED,eAAA,SAAA,CAAA,IAAI,GAAJ;Q,I;QAAA,IAAA,QAAA,IAAA;QAAK,IAAA,OAAA,EAAA;QAAA,IAAA,IAAA,KAAA,GAAA,KAAA,UAAA,MAAsB,EAAtB,KAAA,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA;QACH,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG;YACjB,IAAI;gBACF,QAAQ,OAAO,CAAC,AAAA,CAAA,KAAA,IAAI,CAAC,SAAS,AAAT,EAAU,IAAI,CAAA,KAAA,CAAA,IAAA,cAAA;oBAAC,IAAI,CAAC,KAAK;iBAAA,EAAA,OAAK,OAAI,SAAG,IAAI,CAC5D,SAAA,GAAG;oBAAI,OAAA,MAAK,SAAS,CAAC,OAAO,CAAC;gBAAvB,GACP,SAAA,GAAG;oBAAI,OAAA,MAAK,SAAS,CAAC,MAAM,CAAC;gBAAtB;YAEV,EAAC,OAAO,KAAK;gBACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACvB;QACF;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO;IAC/B;IACF,OAAA;AAAA;;;AEvDA;;;;;;;;;;;;;;CAcG;;A,8C;AAEH,IAAA,WAAA,WAAA,GAAA;IAIE,SAAA;QAAA,IAAA,QAAA,IAAA;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,SAAC,OAAO,EAAE,MAAM;YAC1C,MAAK,QAAQ,GAAG;YAChB,MAAK,OAAO,GAAG;QACjB;IACF;IAEA,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,WAAJ;QAAA,KAAA;YACE,OAAO,IAAI,CAAC,QAAQ;QACtB;Q,Y;Q,c;IAAC;IAED,SAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,GAAM;QACZ,IAAI,CAAC,QAAQ,CAAC;IAChB;IAEA,SAAA,SAAA,CAAA,MAAM,GAAN,SAAO,GAAY;QACjB,IAAI,CAAC,OAAO,CAAC;IACf;IACF,OAAA;AAAA;;;AEtCA;;;;;;;;;;;;;;CAcG;;AAUH;;;CAGG,GACH,6CAAgB;AAZhB;AAEA;AAUM,SAAU,QACd,QAAqB,EACrB,GAAM;IAEN,OAAO,IAAI,QAAQ,SAAA,OAAO;QACxB,0DAA0D;QAC1D,CAAA,GAAA,YAAO,AAAP,EAAQ,IAAI,CAAC,CAAA,GAAA,gCAAe,AAAf,EAAgB,CAAA,GAAA,YAAO,AAAP,EAAQ,MAAM,KAAK;YAC9C,SAAS,MAAM,CAAC,KAAK,SAAC,MAAoB;gBACxC,QAAQ;YACV;QACF;IACF;AACF;;;AExCA;;;;;;;;;;;;;;CAcG;;A,0C;AAEH;AAeA;AAcA;AAKA;A,I,W,a,U,Q,I;I,W,O,M,I,S,C;Q,I,I,G,I,G,I,U,M,E,I,G,I;Y,I,S,C,E;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O;I;I,O,S,K,C,I,E;A;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,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AI,QAAQ,GAAG,IAAK;YAClC,uBAAuB,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;YAC9D,qDAAqD;YACrD,IAAI,uBAAuB,CAAC,EAAE,IAAI,IAChC,uBAAuB,CAAC,EAAE,IAAI;QAEjC;QACD,OAAO,OAAO,YAAY,CAAC,KAAK,CAC9B,MACA,wBAAwB,KAAK,CAAC,GAAG,QAAQ;IAE7C;AACF;;;AElDA;;;;;;;;;;;;;;CAcG;;qDA8BS;AAUC,yDAAA;AAtCb;AAQA;AAOA;AACA;AACA;AACA;AACA;AAGA;AACA;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAKA,IAAY;AAAZ,CAAA,SAAY,eAAe;IACzB,eAAA,CAAA,eAAA,CAAA,WAAA,GAAA,EAAA,GAAA;IACA,eAAA,CAAA,eAAA,CAAA,UAAA,GAAA,EAAA,GAAA;IACA,eAAA,CAAA,eAAA,CAAA,QAAA,GAAA,EAAA,GAAA;IACA,eAAA,CAAA,eAAA,CAAA,aAAA,GAAA,EAAA,GAAA;AACF,CAAA,EALY,mBAAA,CAAA,kBAAe,CAAA,CAAA;AAO3B;;CAEG,GACH,IAAA,sBAAA,WAAA,GAAA;IAqBE,SAAA,oBAAY,MAAyB;QAAzB,IAAA,WAAA,KAAA,GAAA,SAAA,CAAA;Q,I,I;QANK,IAAA,CAAA,yBAAyB,GAAoB,EAAE;QAC/C,IAAA,CAAA,QAAQ,GAAwB,IAAI;QAMnD,IAAM,eAAe,CAAA,GAAA,WAAK,AAAL,EACnB,CAAA,GACA,CAAA,GAAA,yBAAiB,AAAjB,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IAAI,MACF,KAAK,IAAI,CAAC;YAEZ,OAAO;QACT,GACA,EAAE;QAGJ,IAAI,iBAAiB,MAAM,KAAK,GAC9B;aACK,IAAI,sBAAsB,MAAM,KAAK,GAC1C,OAAO,gBAAgB,CAAC,EAAE;aAE1B,OAAO,IAAI,CAAA,GAAA,yBAAmB,AAAnB,EAAoB;YAC7B,aAAa;QACd;IAEL;IAEU,oBAAA,SAAA,CAAA,qBAAqB,GAA/B;QACE,IAAM,eAAe,CAAA,GAAA,YAAM,AAAN,IAAS,oBAAoB;QAClD,IAAI,iBAAiB,UAAU,iBAAiB,IAAI;QACpD,IAAM,WAAW,IAAI,CAAC,gBAAgB,CAAC;QACvC,IAAI,CAAC,UACH,CAAA,GAAA,SAAI,AAAJ,EAAK,KAAK,CACR,gBAAa,eAAY;QAG7B,OAAO;IACT;IAlP0B,oBAAA,sBAAsB,GAAG,IAAI,IAGrD;QACA;YAAC;YAAgB;gBAAM,OAAA,IAAI,CAAA,GAAA,+BAAyB,AAAzB;YAAJ;SAAgC;QACvD;YAAC;YAAW;gBAAM,OAAA,IAAI,CAAA,GAAA,0BAAoB,AAApB;YAAJ;SAA2B;KAC9C;IAEyB,oBAAA,oBAAoB,GAAG,IAAI;IA2OvD,OAAA;AAAC;;;AE1SD;;;;;;;;;;;;;;CAcG;;AAEH;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAlBA;AAEA;AAGA;AAaA;;;AElCA;;;;;;;;;;;;;;CAcG;;AAkBU,8CAAA;AAhBb;AACA;AAMA;AAEA;A,I,W,a,U,Q,I;I,W,O,M,I,S,C;Q,I,I,G,I,G,I,U,M,E,I,G,I;Y,I,S,C,E;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O;I;I,O,S,K,C,I,E;A;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;AAGA;;;CAGG,GACH,IAAA,WAAA,WAAA,GAAA;IAoCE,SAAA,SACE;;;;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Aa,GAAA,KAAA;gBACtB,cAAc,KAAK,CAAC;YACrB;Q,E,O,O;Y,M;gB,O;Y;Q,S;Y,I;gB,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Y,S;gB,I,K,M,I,K;Y;Q;IACH;IAEA,mBAAA,SAAA,CAAA,QAAQ,GAAR;Q,I,K;QACE,IAAM,WAA4B,EAAE;Q,I;YAEpC,IAA4B,IAAA,KAAA,SAAA,IAAI,CAAC,eAAe,GAAA,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA7C,IAAM,gBAAa,GAAA,KAAA;gBACtB,SAAS,IAAI,CAAC,cAAc,QAAQ;YACrC;Q,E,O,O;Y,M;gB,O;Y;Q,S;Y,I;gB,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Y,S;gB,I,K,M,I,K;Y;Q;QACD,OAAO,IAAI,QAAQ,SAAC,OAAO,EAAE,MAAM;YACjC,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC;gBACzB;YACF,GAAG;QACL;IACF;IACF,OAAA;AAAA;;;AEzEA;;;;;;;;;;;;;;CAcG,GAOH,0CAAA;;A,uD;AACA,IAAA,oBAAA,WAAA,GAAA;IAAA,SAAA,qBASA;IARE,kBAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,KAAW,EAAE,QAAiB,GAAS;IAC/C,kBAAA,SAAA,CAAA,KAAK,GAAL,SAAM,KAAmB,GAAS;IAClC,kBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,OAAO,QAAQ,OAAO;IACxB;IACA,kBAAA,SAAA,CAAA,UAAU,GAAV;QACE,OAAO,QAAQ,OAAO;IACxB;IACF,OAAA;AAAA;;;AE/BA;;;;;;;;;;;;;;CAcG;;A,yD;AAEH;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I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S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;AApDV,SAAU,uBACd,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B;IAE9B,IAAI;IACJ,IAAI;IACJ,IAAI;QACF,SAAS;IACV,EAAC,OA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AAAZ,CAAA,SAAY,aAAa;IACvB;;;;KAIG,GACH,aAAA,CAAA,aAAA,CAAA,YAAA,GAAA,EAAA,GAAA;IACA;;;;;KAKG,GACH,aAAA,CAAA,aAAA,CAAA,wBAAA,GAAA,EAAA,GAAA;IACA;;KAEG,GACH,aAAA,CAAA,aAAA,CAAA,QAAA,GAAA,EAAA,GAAA;IACA;;;KAGG,GACH,aAAA,CAAA,aAAA,CAAA,MAAA,GAAA,EAAA,GAAA;AACF,CAAA,EAvBY,iBAAA,CAAA,gBAAa,CAAA,CAAA;;;AErHzB;;;;;;;;;;;;;;CAcG;;A,kD;AAEH;AAIA;AAQA;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAkCA;;;CAGG,GACH,IAAA,eAAA,WAAA,GAAA;IAYE,SAAA,aAAY,OAA6B;Q,I,I,I;QAXzC,6BAA6B;QAC7B,yFAAyF;QACjF,IAAA,CAAA,SAAS,GAAG;QAUlB,IAAI,CAAC,oBAAoB,GACvB,AAAA,CAAA,KAAA,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,mBAAmB,AAAnB,MAAmB,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,GAAA,iDAA4B,AAA5B;QAClC,IAAI,CAAC,+BAA+B,GAClC,AAAA,CAAA,KAAA,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,8BAA8B,AAA9B,MAA8B,QAAA,OAAA,KAAA,IAAA,KACvC,CAAA,GAAA,6DAAwC,AAAxC;QACF,IAAI,CAAC,gBAAgB,GAAG,AAAA,CAAA,KAAA,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,eAAe,AAAf,MAAe,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE;QACtD,IAAI,CAAC,oBAAoB,GAAG,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,mBAAmB;IAC1D;IAEA;;;;;;;;;KASG,GACH,aAAA,SAAA,CAAA,iBAAiB,GAAjB,SAAkB,cAA8B;QAC9C,IAAI,IAAI,CAAC,kBAAkB,EACzB,MAAM,IAAI,MACR;QAGJ,IAAI,CAAC,kBAAkB,GAAG;QAC1B,IAAI,CAAC,aAAa;IACpB;IAEA;;;KAGG,GACH,aAAA,SAAA,CAAA,iBAAiB,GAAjB,SAAkB,cAA8B;QAC9C,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC;IAEA;;;KAGG,GACH,aAAA,SAAA,CAAA,4BAA4B,GAA5B,SACE,cAA8B;QAE9B,OAAO,IAAI,CAAC,+BAA+B,CAAC;IAC9C;IAEA;;;KAGG,GACH,aAAA,SAAA,CAAA,sBAAsB,GAAtB,SAAuB,cAA8B;QACnD,OAAO,IAAI,CAAC,oBAAoB,GAC5B,IAAI,CAAC,oBAAoB,CAAC,kBAC1B,MAAM,2CAA2C;IACvD;IAEA;;;KAGG,GACO,aAAA,SAAA,CAAA,aAAa,GAAvB;IACE,mCAAmC;IACrC;IAmBA;;KAEG,GACG,aAAA,SAAA,CAAA,OAAO,GAAb,SAAc,OAA2B;Q,O,U,I,E,K,G,K,G;Y,I,I,sB,6B,Q,U;Y,O,Y,I,E,S,E;gB,O,G,K;oB,K;wBACvC,IAAI,IAAI,CAAC,kBAAkB,KAAK,WAC9B,MAAM,IAAI,MAAM;wBAGlB,sGAAsG;wBACtG,IAAI,IAAI,CAAC,SAAS,EAChB,MAAM,IAAI,MAAM;wBAIhB,OAAA;4BAAA,EAAA,OAAA;4BAAM,QAAQ,GAAG,CAAjB,cAAA;gCACE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;oCAC9B,eAAe,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,aAAa;gCACtC;6BACE,EAAA,OAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAA,QAAQ;gCACnC,OAAA,SAAS,OAAO,CAAC;oCACf,eAAe,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,aAAa;gCACtC;4BAFD,KAGD;yBACD;oB,K;wBAVE,KAAA,OAAA,KAAA,CAAA,KAAA,GAAA;4BACJ,GAAA,IAAA;yBASE,GAVG,uBAAoB,EAAA,CAAA,EAAA,EAAK,8BAA2B,GAAA,KAAA,CAAA;wBAarD,SAAS,qBAAqB,MAAM,CAAC,MAAM,CAC/C,CAAA,GAAA,cAAO,AAAP,EAAQ,6BAA6B,SAAA,MAAM;4BAAI,OAAA,OAAO,MAAM;wBAAb;wBAE3C,WAAW,qBAAqB,eAAe,CAAC,QAAQ;wBACxD,eACJ,qBAAqB,eAAe,CAAC,YAAY,CAAC,MAAM,CACtD,CAAA,GAAA,cAAO,AAAP,EACE,6BACA,SAAA,MAAM;4BAAI,OAAA,OAAO,eAAe,CAAC,YAAY;wBAAnC;wBAGhB,OAAA;4BAAA,EAAA,QAAA;4BAAO;gCACL,iBAAiB;oCACf,UAAQ;oCACR,cAAY;gCACb;gCACD,QAAM;4BACP;yBAAA;gB;Y;Q;IACF;IAED;;;;;KAKG,GACG,aAAA,SAAA,CAAA,QAAQ,GAAd,SAAe,OAAyB;Q,O,U,I,E,K,G,K,G;Y,O,Y,I,E,S,E;gB,O,G,K;oB,K;wBACtC,4DAA4D;wBAC5D,IAAI,IAAI,CAAC,SAAS,EAAE;4BAClB,KAAI,IAAI,CAAC,KAAK,CAAC;4BACf,OAAA;gCAAA,EAAA,QAAA;6BAAA;wBACD;wBAGG,IAAA,CAAA,CAAA,AAAA,CAAA,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,aAAa,AAAb,KAAiB,IAAA,GAA1B,OAAA;4BAAA,EAAA,OAAA;4BAAA;yBAAA;wBACF,OAAA;4BAAA,EAAA,OAAA;4BAAM,IAAI,CAAC,UAAU;yBAAE;oB,K;wBAAvB,GAAA,IAAA;wB,O;4B,E,O;4B;yB;oBAEA,KAAA;wBAAA,OAAA;4BAAA,EAAA,OAAA;4BAAM,CAAA,GAAA,sBAAe,AAAf,EAAgB,IAAI,CAAC,UAAU,IAAI,QAAQ,aAAa;yBAAC;oB,K;wBAA/D,GAAA,IAAA;wB,G,K,G;oB,K;wBAGF,IAAI,CAAC,SAAS,GAAG;wB,O;4B,E,Q;yB;gB;Y;Q;IAClB;IAED;;;;;KAKG,GACG,aAAA,SAAA,CAAA,UAAU,GAAhB,SAAiB,OAA2B;Q,O,U,I,E,K,G,K,G;Y,O,Y,I,E,S,E;gB,O,G,K;oB,K;wBAC1C,IAAI,IAAI,CAAC,SAAS,EAAE;4BAClB,KAAI,IAAI,CAAC,IAAI,CAAC;4BACd,OAAA;gCAAA,EAAA,QAAA;6BAAA;wBACD;wBAGG,IAAA,CAAA,CAAA,AAAA,CAAA,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,aAAa,AAAb,KAAiB,IAAA,GAA1B,OAAA;4BAAA,EAAA,OAAA;4BAAA;yBAAA;wBACF,OAAA;4BAAA,EAAA,OAAA;4BAAM,IAAI,CAAC,YAAY;yBAAE;oB,K;wBAAzB,GAAA,IAAA;wBACA,OAAA;4BAAA,EAAA,QAAA;yBAAA;oBAGF,KAAA;wBAAA,OAAA;4BAAA,EAAA,OAAA;4BAAM,CAAA,GAAA,sBAAe,AAAf,EAAgB,IAAI,CAAC,YAAY,IAAI,QAAQ,aAAa;yBAAC;oB,K;wBAAjE,GAAA,IAAA;wB,O;4B,E,Q;yB;gB;Y;Q;IACD;IACH,OAAA;AAAA;;;AE1PA;;;;;;;;;;;;;;CAcG;;AAOH,kDAAgB;AAIhB;;;CAGG,GACH,oDAAgB;AAShB;;;CAGG,GACH,4DAAgB;A,kD;AAqBhB;;;;;;;;CAQG,GACH,qDAAgB;AAyChB;;CAEG,GACH,uDAAsB;AAqBtB,wEAAgB;AAMhB;;CAEG,GACH,6CAAgB;AAQhB,+CAAgB;AAYhB;;;;;CAKG,GACH,oDAAgB;AAkBhB,2DAAgB;A,I,Y,a,U,S,I,A;I,I,gB,S,C,E,C;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C;Y,E,S,G;Q,K,S,C,E,C;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O,c,G;I;I,O,S,C,E,C;Q,I,O,M,c,M,M,M,I,U,yB,O,K;Q,c,G;Q,S;Y,I,C,W,G;Q;Q,E,S,G,M,O,O,M,C,K,C,G,S,G,E,S,E,I,I;I;A;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;AAzKV,SAAU,aAAgB,IAAc;IAC5C,OAAO,SAAS,aAAa,SAAS;AACxC;AAMM,SAAU,eAAe,UAAsB;IACnD,IAAI,OAAO,OAAO,IAAI,CAAC;IACvB,IAAI,KAAK,MAAM,KAAK,GAAG,OAAO;IAE9B,gDAAgD;IAChD,OAAO,KAAK,IAAI;IAChB,OAAO,KAAK,SAAS,CAAC,KAAK,GAAG,CAAC,SAAA,GAAG;QAAI,OAAA;YAAC;YAAK,UAAU,CAAC,IAAI;SAAC;IAAtB;AACxC;AAMM,SAAU,uBACd,oBAA0C;I,I,I;IAE1C,OAAU,qBAAqB,IAAI,GAAA,MAAI,CAAA,AAAA,CAAA,KAAA,qBAAqB,OAAO,AAAP,MAAO,QAAA,OAAA,KAAA,IAAA,KAAI,EAAA,IAAE,MACvE,CAAA,AAAA,CAAA,KAAA,qBAAqB,SAAS,AAAT,MAAS,QAAA,OAAA,KAAA,IAAA,KAAI,EAAA;AAEtC;AAEA;;CAEG,GACH,IAAA,eAAA,WAAA,GAAA,SAAA,MAAA;IAAkC,UAAA,cAAA;IAChC,SAAA,aAAY,OAAgB;QAA5B,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,YAAQ,IAAA;QAEd,0FAA0F;QAC1F,6IAA6I;QAC7I,OAAO,cAAc,CAAC,OAAM,aAAa,SAAS;Q,O;IACpD;IACF,OAAA;AAAA,EARkC;AAmB5B,SAAU,gBACd,OAAmB,EACnB,OAAe;IAEf,IAAI;IAEJ,IAAM,iBAAiB,IAAI,QAAe,SAAS,gBACjD,QAAQ,EACR,MAAM;QAEN,gBAAgB,WAAW,SAAS;YAClC,OAAO,IAAI,aAAa;QAC1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,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AEnmBA;;;;;;;;;;;;;;CAcG,GACH,IAAA,UAAA,WAAA,GAAA;IACE;;;;;;;;;;;;;;;;KAgBG,GACH,SAAA,QACS,OAA8B,EAC9B,SAAa,EACb,UAAc,EACd,QAAY;QAHZ,IAAA,YAAA,KAAA,GAAA,UAAA,IAAc;QACd,IAAA,cAAA,KAAA,GAAA,YAAA;QACA,IAAA,eAAA,KAAA,GAAA,aAAA;QACA,IAAA,aAAA,KAAA,GAAA,WAAA;QAHA,IAAA,CAAA,OAAO,GAAP;QACA,IAAA,CAAA,SAAS,GAAT;QACA,IAAA,CAAA,UAAU,GAAV;QACA,IAAA,CAAA,QAAQ,GAAR;IACN;IAMH,OAAA,cAAA,CAAI,QAAA,SAAA,EAAA,UAAJ;QAJA;;;SAGG,GACH,KAAA;YACE,OAAO,IAAI,CAAC,UAAU;QACxB;Q,Y;Q,c;IAAC;IAMD,OAAA,cAAA,CAAI,QAAA,SAAA,EAAA,UAAJ;QAJA;;;SAGG,GACH,KAAA;YACE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,GAC1B,OAAO;YAGT,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,GACtD,OAAO;YAGT,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG;QAC3C;Q,Y;Q,c;IAAC;IAED;;;;;;KAMG,GACH,QAAA,SAAA,CAAA,MAAM,GAAN;QAAA,IAAA,QAAA,IAAA;QACE,OAAO,MAAM,IAAI,CAAC;YAAE,QAAQ,IAAI,CAAC,MAAM;QAAA,GAAI,SAAC,CAAC,EAAE,CAAC;YAAK,OA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,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;AAEM,SAAU,mBAAmB,UAAmB;I,I,K;IACpD,IAAM,MAAsB,CAAA;IAE5B,IAAI,OAAO,eAAe,YAAY,cAAc,MAClD,OAAO;I,I;QAGT,IAAyB,IAAA,KAAA,SAAA,OAAO,OAAO,CAAC,cAAW,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;YAA1C,IAAA,KAAA,OAAA,GAAA,KAAA,EAAA,IAAC,MAAG,EAAA,CAAA,EAAA,EAAE,MAAG,EAAA,CAAA,EAAA;YAClB,IAAI,CAAC,eAAe,MAAM;gBACxB,CAAA,GAAA,SAAI,AAAJ,EAAK,IAAI,CAAC,4BAA0B;gBACpC;YACD;YACD,IAAI,CAAC,iBAAiB,MAAM;gBAC1B,CAAA,GAAA,SAAI,AAAJ,EAAK,IAAI,CAAC,0CAAwC;gBAClD;YACD;YACD,IAAI,MAAM,OAAO,CAAC,MAChB,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK;iBAEpB,GAAG,CAAC,IAAI,GAAG;QAEd;I,E,O,O;Q,M;Y,O;Q;I,S;Q,I;Y,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Q,S;Y,I,K,M,I,K;Q;I;IAED,OAAO;AACT;AAEM,SAAU,eAAe,GAAY;IACzC,OAAO,OAAO,QAAQ,YAAY,IAAI,MAAM,GAAG;AACjD;AAEM,SAAU,iBAAiB,GAAY;IAC3C,IAAI,OAAO,MACT,OAAO;IAGT,IAAI,MAAM,OAAO,CAAC,MAChB,OAAO,iCAAiC;IAG1C,OAAO,+BAA+B;AACxC;AAEA,SAAS,iCAAiC,GAAc;I,I,K;IACt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,IAAM,OAAO,oBAAqB;QACrC,IAAM,MAAM;QAEZ,OAAQ;YACN,KAAK;gBACH,mBAAmB,KAAK,aAAa;gBACrC;YAEF;gBACE,IAAI,iBAAiB,MACnB,aAAa,KAAK,aAAa;qBAC1B,IAAI,gBAAgB,MACzB,YAAY,KAAK,aAAa;qBACzB,IAAI,cAAc,MACvB,gBAAgB,KAAK,aAAa;qBAC7B;oBACL,IAAM,QAAQ,MAAM,CAAC,IAAI;oBACzB,IAAI,OAAO,UAAU,eAAe,UAAU,MAC5C,WAAW,CAAC,IAAI,GAAG,OAAO;gBAE7B;QACJ;IACF;IAED,OAAO;AACT;;;AEnXA;;;;;;;;;;;;;;CAcG;;yDAES;AAAZ,IAAY;AAAZ,CAAA,SAAY,mBAAmB;IAC7B,mBAAA,CAAA,YAAA,GAAA;IACA,mBAAA,CAAA,WAAA,GAAA;IACA,mBAAA,CAAA,uBAAA,GAAA;IACA,mBAAA,CAAA,sBAAA,GAAA;IACA,mBAAA,CAAA,0BAAA,GAAA;IACA,mBAAA,CAAA,eAAA,GAAA;AACF,CAAA,EAPY,uBAAA,CAAA,sBAAmB,CAAA,CAAA;;;AEhB/B;;;;;;;;;;;;;;CAcG,GAEH,4EAA4E;AAE5E;;;;;;CAMG,GAEH,8DAAA,GACA,8EAA8E;;;iDACjE;;AAAN,IAAM,cACX,OAAO,eAAe,WAClB,aACA,OAAO,SAAS,WACd,OACA,OAAO,WAAW,WAChB,SACA,OAAO,WAAW,WAChB,SACC,CAAA;;;AErCb;;;;;;;;;;;;;;CAcG;;AAIH,iDAAgB;AAFhB;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,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CAcG,GACH,gDAAgB;AAOhB;;;;CAIG,GACH,kDAAgB;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;AAZV,SAAU,WAAW,GAAW,EAAE,UAA2B;IACjE,IAAI,OAAO,eAAe,UACxB,OAAO,QAAQ;SAEf,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC;AAEvB;AAMM,SAAU,aACd,GAAW,EACX,WAAoC;I,I,K;IAEpC,IAAI,CAAC,aACH,OAAO;I,I;QAGT,IAAwB,IAAA,gBAAA,SAAA,cAAW,kBAAA,cAAA,IAAA,IAAA,CAAA,gBAAA,IAAA,EAAA,kBAAA,cAAA,IAAA,GAAE;YAAhC,IAAM,YAAS,gBAAA,KAAA;YAClB,IAAI,WAAW,KAAK,YAClB,OAAO;QAEV;I,E,O,O;Q,M;Y,O;Q;I,S;Q,I;Y,I,mB,C,gB,I,I,C,K,c,M,A,G,G,I,C;Q,S;Y,I,K,M,I,K;Q;I;IACD,OAAO;AACT;;;AEzCA;;;;;;;;;;;;;;CAcG,GAIH;;;CAGG;;AACH,+CAAgB;AAAV,SAAU,UAAU,IAAa;IACrC,OACE,OAAO,SAAS,cAChB,OAAQ,KAAqB,UAAU,KAAK,cAC5C,OAAQ,KAAqB,QAAQ,KAAK,cACzC,KAAqB,SAAS,KAAK;AAExC;;;AE7BA;;;;;;;;;;;;;;CAcG;;A,oD;AAEH;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,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AA,EAAE,eAAY,EAAA,CAAA,EAAA;gBACjE,OAAO;oBACL,YAAU;oBACV,WAAW,aAAa,SAAS;oBACjC,SAAO;oBACP,OAAO,aAAa,YAAY;gBACjC;YACH;YACA,aAAa,IAAI,CAAC,SAAS;QAC5B;IACH;IACF,OAAA;AAAA;;;AEtIA;;;;;;;;;;;;;;CAcG;;A,mE;AAEH;AACA;AAMA;AAEA;A,I,Y,a,U,S,I,A;I,I,gB,S,C,E,C;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C;Y,E,S,G;Q,K,S,C,E,C;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O,c,G;I;I,O,S,C,E,C;Q,I,O,M,c,M,M,M,I,U,yB,O,K;Q,c,G;Q,S;Y,I,C,W,G;Q;Q,E,S,G,M,O,O,M,C,K,C,G,S,G,E,S,E,I,I;I;A;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AA0BA;;;CAGG,GACH,IAAA,gCAAA,WAAA,GAAA,SAAA,MAAA;IAAmD,UAAA,+BAAA;IAMjD,SAAA,8BAAY,OAA6C;Q,I,I,I,I;QAAzD,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM;YACJ,qBAAqB,AAAA,CAAA,KAAA,QAAQ,QAAQ,CAAC,iBAAiB,AAAjB,MAAiB,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI,CAC3D,QAAQ,QAAQ;YAElB,gCACE,AAAA,CAAA,KAAA,QAAQ,QAAQ,CAAC,4BAA4B,AAA5B,MAA4B,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,IAAI,CAAC,QAAQ,QAAQ;YACtE,iBAAiB,QAAQ,eAAe;QACzC,MAAC,IAAA;QAEF,IACE,QAAQ,oBAAoB,KAAK,aACjC,QAAQ,oBAAoB,IAAI,GAEhC,MAAM,MAAM;QAGd,IACE,QAAQ,mBAAmB,KAAK,aAChC,QAAQ,mBAAmB,IAAI,GAE/B,MAAM,MAAM;QAGd,IACE,QAAQ,mBAAmB,KAAK,aAChC,QAAQ,oBAAoB,KAAK,aACjC,QAAQ,oBAAoB,GAAG,QAAQ,mBAAmB,EAE1D,MAAM,MACJ;QAIJ,MAAK,eAAe,GAAG,AAAA,CAAA,KAAA,QAAQ,oBAAoB,AAApB,MAAoB,QAAA,OAAA,KAAA,IAAA,KAAI;QACvD,MAAK,cAAc,GAAG,AAAA,CAAA,KAAA,QAAQ,mBAAmB,AAAnB,MAAmB,QAAA,OAAA,KAAA,IAAA,KAAI;QACrD,MAAK,SAAS,GAAG,QAAQ,QAAQ;Q,O;IACnC;IAEc,8BAAA,SAAA,CAAA,QAAQ,GAAtB;Q,O,U,I,E,K,G,K,G;Y,I;Y,O,Y,I,E,S,E;gB,O,G,K;oB,K;wB,G,I,C,I,C;4B;4B;;4B;yB;wBAEI,OAAA;4BAAA,EAAA,OAAA;4BAAM,CAAA,GAAA,sBAAe,AAAf,EAAgB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc;yBAAC;oB,K;wBAAzD,GAAA,IAAA;wB,O;4B,E,O;4B;yB;oB,K;wB,Q,G,I;wBAEA,IAAI,iBAAe,CAAA,GAAA,mBAAY,AAAZ,GAAc;4BAC/B,KAAI,IAAI,CAAC,KAAK,CACZ,0DACA,IAAI,CAAC,cAAc;4BAErB,OAAA;gCAAA,EAAA,QAAA;6BAAA;wBACD;wBAED,CAAA,GAAA,wBAAkB,AAAlB,EAAmB;wB,O;4B,E,O;4B;yB;oB,K;wB,O;4B,E,Q;yB;gB;Y;Q;IAEtB;IAEa,8BAAA,SAAA,CAAA,MAAM,GAApB;Q,I,I;Q,O,U,I,E,K,G,K,G;Y,I,I,iB,Q,K;Y,I;Y,O,Y,I,E,S,E;gB,O,G,K;oBACsC,KAAA;wBAAA,OAAA;4BAAA,EAAA,OAAA;4BAAM,IAAI,CAAC,OAAO,CAAC;gCACrD,eAAe,IAAI,CAAC,cAAc;4BACnC;yBAAC;oB,K;wBAFI,KAA8B,GAAA,IAAA,IAA5B,kBAAe,GAAA,eAAA,EAAE,SAAM,GAAA,MAAA;wBAI/B,IAAI,OAAO,MAAM,GAAG,GAClB,AAAA,CAAA,KAAA,KAAI,IAAI,AAAJ,EAAK,KAAK,CAAA,KAAA,CAAA,IAAA,cAAA;4BACZ;yBAA0D,EAAA,OACvD,SAAM;wBAIT,IAAA,CAAA,gBAAgB,QAAQ,CAAC,sBAAsB,EAA/C,OAAA;4BAAA,EAAA,OAAA;4BAAA;yBAAA;wB,G,K,G;oB,K;wB,G,I,C,I,C;4B;4B;;4B;yB;wBAEA,OAAA;4BAAA,EAAA,OAAA;4BAAM,CAAA,KAAA,AAAA,CAAA,KAAA,gBAAgB,QAAQ,AAAR,EAAS,sBAAsB,AAAtB,MAAsB,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAAA;yBAAI;oB,K;wBAAzD,GAAA,IAAA;wB,O;4B,E,O;4B;yB;oB,K;wB,M,G,I;wBAEA,KAAI,IAAI,CAAC,KAAK,CAAC,qDAAqD;wBACpE,CAAA,GAAA,wBAAkB,AAAlB,EAAmB;wB,O;4B,E,O;4B;yB;oBAIR,KAAA;wBAAA,OAAA;4BAAA,EAAA,OAAA;4BAAM,CAAA,GAAA,cAAQ,AAAR,EAAS,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE;yBAAgB;oB,K;wBAAhE,SAAS,GAAA,IAAA;wBACf,IAAI,OAAO,IAAI,KAAK,CAAA,GAAA,sBAAgB,AAAhB,EAAiB,OAAO,EAC1C,MAAM,IAAI,MACR,iEAA+D,OAAO,KAAK,GAAA;wB,O;4B,E,Q;yB;gB;Y;Q;IAGhF;IAEkB,8BAAA,SAAA,CAAA,aAAa,GAAhC;QAAA,IAAA,QAAA,IAAA;QACE,iGAAiG;QACjG,IAAI,CAAC,SAAS,GAAG,YAAY;YAC3B,wGAAwG;YACnG,MAAK,QAAQ;QACpB,GAAG,IAAI,CAAC,eAAe;QACvB,CAAA,GAAA,gBAAU,AAAV,EAAW,IAAI,CAAC,SAAS;IAC3B;IAEgB,8BAAA,SAAA,CAAA,YAAY,GAA5B;Q,O,U,I,E,K,G,K,G;Y,O,Y,I,E,S,E;gB,O,G,K;oBACE,KAAA;wBAAA,OAAA;4BAAA,EAAA,OAAA;4BAAM,IAAI,CAAC,QAAQ;yBAAE;oB,K;wBAArB,GAAA,IAAA;wBACA,OAAA;4BAAA,EAAA,OAAA;4BAAM,IAAI,CAAC,SAAS,CAAC,UAAU;yBAAE;oB,K;wBAAjC,GAAA,IAAA;wB,O;4B,E,Q;yB;gB;Y;Q;IACD;IAEe,8BAAA,SAAA,CAAA,UAAU,GAA1B;Q,O,U,I,E,K,G,K,G;Y,O,Y,I,E,S,E;gB,O,G,K;oB,K;wBACE,IAAI,IAAI,CAAC,SAAS,EAChB,cAAc,IAAI,CAAC,SAAS;wBAG9B,OAAA;4BAAA,EAAA,OAAA;4BAAM,IAAI,CAAC,SAAS,CAAC,QAAQ;yBAAE;oB,K;wBAA/B,GAAA,IAAA;wB,O;4B,E,Q;yB;gB;Y;Q;IACD;IACH,OAAA;AAAA,EA/GmD,CAAA,GAAA,0BAAY,AAAZ;;;AEvDnD;;;;;;;;;;;;;;CAcG;;A,4D;AAEH;AAOA;;;;CAIG,GACH,IAAA,yBAAA,WAAA,GAAA;IAKE,SAAA,uBAAY,sBAA8C;QAJhD,IAAA,CAAA,SAAS,GAAG;QAEd,IAAA,CAAA,QAAQ,GAAsB,EAAE;QAGtC,IAAI,CAAC,uBAAuB,GAAG;IACjC;IAEA;;KAEG,GACH,uBAAA,SAAA,CAAA,MAAM,GAAN,SACE,OAAwB,EACxB,cAA8C;QAE9C,kDAAkD;QAClD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,WAAW;gBAAM,OAAA,eAAe;oBAAE,MAAM,CAAA,GAAA,sBAAgB,AAAhB,EAAiB,MAAM;gBAAA;YAA9C,GAAmD;YACpE;QACD;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QACnB,WAAW;YAAM,OAAA,eAAe;gBAAE,MAAM,CAAA,GAAA,sBAAgB,AAAhB,EAAiB,OAAO;YAAA;QAA/C,GAAoD;IACvE;IAEA;;;KAGG,GACI,uBAAA,SAAA,CAAA,UAAU,GAAjB;QACE,OAAO,IAAI,CAAC,QAAQ;IACtB;IAEA,uBAAA,SAAA,CAAA,UAAU,GAAV;QACE,OAAO,QAAQ,OAAO;IACxB;IAEA,uBAAA,SAAA,CAAA,KAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE;IACpB;IAEA,uBAAA,SAAA,CAAA,4BAA4B,GAA5B,SACE,eAA+B;QAE/B,OAAO,IAAI,CAAC,uBAAuB;IACrC;IAEA,uBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG;QACjB,OAAO,QAAQ,OAAO;IACxB;IACF,OAAA;AAAA;;;;;A,2D;AEhFA;;;;;;;;;;;;;;CAcG,GACH;AAKA;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;AASA;;;;;CAKG,GAEH,6BAAA,GACA,IAAA,wBAAA,WAAA,GAAA;IAIE,SAAA,sBAAY,OAAsC;Q,I;QAHxC,IAAA,CAAA,SAAS,GAAG;QAIpB,IAAI,CAAC,oBAAoB,GACvB,AAAA,CAAA,KAAA,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,mBAAmB,AAAnB,MAAmB,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,GAAA,6DAAwC,AAAxC;IACpC;IAEA,sBAAA,SAAA,CAAA,MAAM,GAAN,SACE,OAAwB,EACxB,cAA8C;QAE9C,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,uFAAuF;YACvF,aAAa,gBAAgB;gBAAE,MAAM,CAAA,GAAA,sBAAgB,AAAhB,EAAiB,MAAM;YAAA;YAC5D;QACD;QAED,OAAO,sBAAsB,YAAY,CAAC,SAAS;IACrD;IAEA,sBAAA,SAAA,CAAA,UAAU,GAAV;QACE,OAAO,QAAQ,OAAO;IACxB;IAEA,sBAAA,SAAA,CAAA,4BAA4B,GAA5B,SACE,eAA+B;QAE/B,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC;IAEA,sBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG;QACjB,OAAO,QAAQ,OAAO;IACxB;IAEe,sBAAA,YAAY,GAA3B,SACE,OAAwB,EACxB,IAAoC;Q,I,K,I,K;Q,I;YAEpC,IAA2B,IAAA,KAAA,SAAA,QAAQ,YAAY,GAAA,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA5C,IAAM,eAAY,GAAA,KAAA;gB,I;oBACrB,IAAqB,IAAA,KAAA,CAAA,MAAA,KAAA,GAAA,SAAA,aAAa,OAAO,CAAA,GAAA,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;wBAAtC,IAAM,SAAM,GAAA,KAAA;wBACf,QAAQ,GAAG,CACT;4BACE,YAAY,OAAO,UAAU;4BAC7B,eAAe,OAAO,aAAa;4BACnC,YAAY,OAAO,UAAU;wBAC9B,GACD;4BAAE,OAAO;wBAAI;oBAEhB;gB,E,O,O;oB,M;wB,O;oB;gB,S;oB,I;wB,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;oB,S;wB,I,K,M,I,K;oB;gB;YACF;Q,E,O,O;Y,M;gB,O;Y;Q,S;Y,I;gB,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Y,S;gB,I,K,M,I,K;Y;Q;QAED,KAAK;YAAE,MAAM,CAAA,GAAA,sBAAgB,AAAhB,EAAiB,OAAO;QAAA;IACvC;IACF,OAAA;AAAA;;;AE7FA;;;;;;;;;;;;;;CAcG;;A,mD;AAEH;AAOA;AAEA;AACA;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;AAmBA;;;CAGG,GACH,SAAS,gBACP,iBAA0B,EAC1B,gBAAsC;IAEtC,IAAM,WAAW,qBAAgB,QAAhB,qBAAgB,KAAA,IAAhB,mBAAoB,CAAA,GAAA,mBAAQ,AAAR,EAAS,KAAK;IAEnD,IAAI,mBACF,OAAO,CAAA,GAAA,mBAAQ,AAAR,EAAS,OAAO,GAAG,KAAK,CAAC;IAElC,OAAO;AACT;AAEA;;CAEG,GACH,IAAA,gBAAA,WAAA,GAAA;IAIE,SAAA,cAAY,OAA8B;Q,I,K,I,K;Q,I;QAFlC,IAAA,CAAA,SAAS,GAAG;QAGlB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA,GAAA,kDAAwB,AAAxB,EACtB,gBACE,AAAA,CAAA,KAAA,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,yBAAyB,AAAzB,MAAyB,QAAA,OAAA,KAAA,IAAA,KAAI,MACtC,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,QAAQ;QAGrB,IAAI,AAAA,CAAA,Y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,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O;I;I,O,S,K,C,I,E;A;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q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,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K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AME,SAAA,qBACE,UAAgC,EAChC,cAA4C,EACpC,mBAAuC;QAAvC,IAAA,CAAA,mBAAmB,GAAnB;QAER,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,eAAe,GAAG;IACzB;IAEA;;KAEG,GACH,qBAAA,SAAA,CAAA,WAAW,GAAX,SAAY,QAA4B;QACtC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,UAAU,IAAI;IACrD;IAEA;;KAEG,GACH,qBAAA,SAAA,CAAA,cAAc,GAAd,SAAe,QAA4B;QACzC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,UAAU,IAAI;IACxD;IACF,OAAA;AAAA;AAEA,IAAA,8BAAA,WAAA,GAAA,SAAA,MAAA;IACU,UAAA,6BAAA;IADV,SAAA;Q,O,W,Q,O,K,C,I,E,c,I;IAEgC;IAAA,OAAA;AAAA,EADtB;AAEV,IAAA,4BAAA,WAAA,GAAA,SAAA,MAAA;IACU,UAAA,2BAAA;IADV,SAAA;Q,O,W,Q,O,K,C,I,E,c,I;IAE8B;IAAA,OAAA;AAAA,EADpB;AAEV,IAAA,oCAAA,WAAA,GAAA,SAAA,MAAA;IACU,UAAA,mCAAA;IADV,SAAA;Q,O,W,Q,O,K,C,I,E,c,I;IAEsC;IAAA,OAAA;AAAA,EAD5B;AAGJ,SAAU,uBACd,EAAW;IAEX,OAAO,cAAc;AACvB;;;AE3LA;;;;;;;;;;;;;;CAcG;;A,wD;AAMH;AAEA;AACA;AAGA;A,I,Y,a,U,S,I,A;I,I,gB,S,C,E,C;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C;Y,E,S,G;Q,K,S,C,E,C;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O,c,G;I;I,O,S,C,E,C;Q,I,O,M,c,M,M,M,I,U,yB,O,K;Q,c,G;Q,S;Y,I,C,W,G;Q;Q,E,S,G,M,O,O,M,C,K,C,G,S,G,E,S,E,I,I;I;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I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F;YAEH,uCAAuC;YACvC,IAAI,MAAK,wBAAwB,CAAC,GAAG,CAAC,YAAY,WAAW;gBAC3D,4CAA4C;gBAC5C,oEAAoE;gBACpE,IAAM,SAAS,MAAK,wBAAwB,CAAC,GAAG,CAC9C,YACA;gBAEF,QAAQ,MAAK,WAAW,CAAC,KAAK,CAAC,QAAQ;YACxC;YAED,gDAAgD;YAChD,MAAK,sBAAsB,CAAC,GAAG,CAAC,YAAY,cAAc;YAC1D,MAAK,wBAAwB,CAAC,GAAG,CAAC,YAAY,OAAO;QACvD;IAEJ;IAEA;;;KAGG,GACH,qBAAA,SAAA,CAAA,OAAO,GAAP;QACE,IAAM,kBAAkB,IAAI,CAAC,wBAAwB;QACrD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAA,GAAA,yBAAgB,AAAhB;QAEpC,OAAO;IACT;IACF,OAAA;AAAA;;;AEnIA;;;;;;;;;;;;;;CAcG;;A,6C;A,sD;AAGH;A,I,Y,a,U,S,I,A;I,I,gB,S,C,E,C;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C;Y,E,S,G;Q,K,S,C,E,C;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O,c,G;I;I,O,S,C,E,C;Q,I,O,M,c,M,M,M,I,U,yB,O,K;Q,c,G;Q,S;Y,I,C,W,G;Q;Q,E,S,G,M,O,O,M,C,K,C,G,S,G,E,S,E,I,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;AAMA,IAAA,UAAA,WAAA,GAAA;IAIE,SAAA,QAAoB,KAAkC;QAAlC,IAAA,CAAA,KAAK,GAAL;QAHZ,IAAA,CAAA,SAAS,GAAG,IAAI;QAChB,IAAA,CAAA,OAAO,GAAG,IAAI;IAEmC;IAEzD,QAAA,SAAA,CAAA,GAAG,GAAH,SAAI,GAAY,EAAE,QAAuB;QACvC,aAAQ,QAAR,aAAQ,KAAA,IAAR,WAAA,WAAa,IAAI,CAAC,KAAK,CAAC;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;IAC5B;IAEA,QAAA,SAAA,CAAA,YAAY,GAAZ,SAAa,GAAY,EAAE,cAA+B;QACxD,IAAM,OAAO,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OACrB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;QAE5B,IAAM,MAAM;QACZ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM;QAEzB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM;QACzB,OAAO;IACT;IAEA,QAAA,SAAA,CAAA,GAAG,GAAH,SAAI,GAAY,EAAE,KAAgB,EAAE,QAAuB;QACzD,aAAQ,QAAR,aAAQ,KAAA,IAAR,WAAA,WAAa,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU;QAE7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU;IAC/B;IAEA,QAAA,SAAA,CAAA,GAAG,GAAH,SAAI,GAAY,EAAE,QAAuB;QACvC,aAAQ,QAAR,aAAQ,KAAA,IAAR,WAAA,WAAa,IAAI,CAAC,KAAK,CAAC;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;IAC5B;IAEC,QAAA,SAAA,CAAA,IAAI,GAAL;Q,I,a;Q,O,Y,I,E,S,E;Y,O,G,K;gB,K;oBACQ,cAAc,IAAI,CAAC,OAAO,CAAC,OAAO;oBACpC,OAAO,YAAY,IAAI;oB,G,K,G;gB,K;oBACpB,IAAA,CAAA,CAAA,KAAK,IAAI,KAAK,IAAA,GAAd,OAAA;wBAAA,EAAA,OAAA;wBAAA;qBAAA;oBACL,OAAA;wBAAA,EAAA,OAAA;wBAAM;4BAAC,KAAK,KAAK,CAAC,EAAE;4BAAE,KAAK,KAAK,CAAC,EAAE;yBAAC;qBAAA;gB,K;oBAApC,GAAA,IAAA;oBACA,OAAO,YAAY,IAAI;oB,O;wB,E,O;wB;qB;gB,K;oB,O;wB,E,Q;qB;Y;Q;IAE1B;IAEA,QAAA,SAAA,CAAA,OAAO,GAAR;Q,I,e;Q,O,Y,I,E,S,E;Y,O,G,K;gB,K;oBACQ,gBAAgB,IAAI,CAAC,SAAS,CAAC,OAAO;oBACxC,OAAO,cAAc,IAAI;oB,G,K,G;gB,K;oBACtB,IAAA,CAAA,CAAA,KAAK,IAAI,KAAK,IAAA,GAAd,OAAA;wBAAA,EAAA,OAAA;wBAAA;qBAAA;oBACL,0CAA0C;oBAC1C,oEAAoE;oBACpE,OAAA;wBAAA,EAAA,OAAA;wBAAM;4BAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,EAAE;4BAAI,KAAK,KAAK,CAAC,EAAE;4BAAE,KAAK,KAAK,CAAC,EAAE;yBAAC;qBAAA;gB,K;oBAFtE,0CAA0C;oBAC1C,oEAAoE;oBACpE,GAAA,IAAA;oBACA,OAAO,cAAc,IAAI;oB,O;wB,E,O;wB;qB;gB,K;oB,O;wB,E,Q;qB;Y;Q;IAE5B;IAED,OAAA,cAAA,CAAI,QAAA,SAAA,EAAA,QAAJ;QAAA,KAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI;QAC5B;Q,Y;Q,c;IAAC;IACH,OAAA;AAAA;AAEA,IAAA,mBAAA,WAAA,GAAA,SAAA,MAAA;IAAiD,UAAA,kBAAA;IAK/C,SAAA;QACE,OAAA,OAAA,IAAA,CAAA,IAAA,EAAM,CAAA,GAAA,qBAAc,AAAd,MAAN,IAAA;IACF;IACF,OAAA;AAAA,EARiD;;;AErFjD;;;;;;;;;;;;;;CAcG;;A,6D;AAUH;AAGA;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;AAoBA;;;;;CAKG,GACH,IAAA,0BAAA,WAAA,GAAA;IAUE,SAAA,wBACU,WAA0B,EAClC,gBAAyC;QAF3C,IAAA,QAAA,IAAA;QACU,IAAA,CAAA,WAAW,GAAX;QAVF,IAAA,CAAA,wBAAwB,GAAG,IAAI;QAI/B,IAAA,CAAA,cAAc,GAAG,IAAI;QAS3B,iBAAiB,OAAO,CAAC,SAAA,MAAM;YAC7B,MAAK,wBAAwB,CAAC,GAAG,CAAC,QAAQ,EAAE;QAC9C;IACF;IAEA;;;;;;;;KAQG,GACH,wBAAA,SAAA,CAAA,YAAY,GAAZ,SACE,SAAgC,EAChC,oBAA0C,EAC1C,oBAAyC,EACzC,cAAsB;QAEtB,IAAI,CAAC,mBAAmB,CAAC;QACzB,IAAM,0BACJ,IAAI,CAAC,iCAAiC,CAAC;QAEzC,IAAI,SAAS;QACb,IAAI;QACJ,8BAA8B;QAC9B,IAAI,IAAI,CAAC,cAAc,C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A,KAAA,SAAA,KAAK,IAAI,KAAE,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA5B,IAAA,KAAA,OAAA,GAAA,KAAA,EAAA,IAAC,MAAG,EAAA,CAAA,EAAA,EAAE,OAAI,EAAA,CAAA,EAAA;gBACnB,IAAM,sBAAsB,QAAQ,GAAG,CAAC,KAAK;gBAC7C,wBAAmB,QAAnB,wBAAmB,KAAA,KAAnB,oBAAqB,YAAY,CAAC;YACnC;Q,E,O,O;Y,M;gB,O;Y;Q,S;Y,I;gB,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Y,S;gB,I,K,M,I,K;Y;Q;QACD,OAAO;IACT;IACF,OAAA;AAAA;AAEA,mFAAmF;AACnF,SAAS,mCACP,GAAwB;IAExB,OAAO,MAAM,IAAI,CAAC,IAAI,OAAO;AAC/B;;;AEpOA;;;;;;;;;;;;;;CAcG;;A,2D;AAGH;AAIA;AACA;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;AAQA;;CAEG,GACH,IAAA,wBAAA,WAAA,GAAA;IAAA,SAAA;QACmB,IAAA,CAAA,eAAe,GAAe,IAAI;QAClC,IAAA,CAAA,qBAAqB,GAAG,IAAI;IAqI/C;IAhIS,sBAAA,MAAM,GAAb;QACE,OAAO,IAAI;IACb;IAEA,sBAAA,SAAA,CAAA,WAAW,GAAX,SAAY,SAAgC;Q,I,K,I,K;QAC1C,IAAI,WAA4B,EAAE;Q,I;YAClC,IAA6B,IAAA,KAAA,SAAA,IAAI,CAAC,eAAe,CAAC,MAAM,KAAE,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAvD,IAAM,iBAAc,GAAA,KAAA;gBACvB,WAAW,SAAS,MAAM,CAAC;YAC5B;Q,E,O,O;Y,M;gB,O;Y;Q,S;Y,I;gB,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Y,S;gB,I,K,M,I,K;Y;Q;QAED,IAAM,uBAAuB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC;QAC5D,IAAI,wBAAwB,M,I;YAC1B,IAA6B,IAAA,KAAA,SAAA,qBAAqB,MAAM,KAAE,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAvD,IAAM,iBAAc,GAAA,KAAA;gBACvB,WAAW,SAAS,MAAM,CAAC;YAC5B;Q,E,O,O;Y,M;gB,O;Y;Q,S;Y,I;gB,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Y,S;gB,I,K,M,I,K;Y;Q;QAGH,OAAO;IACT;IAEA,sBAAA,SAAA,CAAA,QAAQ,GAAR,SAAS,OAAsB;QAC7B,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAI,CAAC,eAAe;IACrD;IAEA,sBAAA,SAAA,CAAA,oBAAoB,GAApB,SACE,SAAgC,EAChC,OAAsB;QAEtB,IAAI,aAAa,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC;QAChD,IAAI,cAAc,MAAM;YACtB,aAAa,IAAI;YACjB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,WAAW;QAC3C;QACD,IAAI,CAAC,gBAAgB,CAAC,SAAS;IACjC;IAEA,sBAAA,SAAA,CAAA,6BAA6B,GAA7B,SACE,kBAAwC;QAExC,IAAM,WAAW,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mBAAmB,IAAI;QACjE,IAAI,aAAa,WACf,OAAO;QAGT,oEAAoE;QACpE,uEAAuE;QACvE,OAAO,IAAI,CAAC,8BAA8B,CAAI,oBAAoB;IACpE;IAEA,sBAAA,SAAA,CAAA,sCAAsC,GAAtC,SACE,SAAgC,EAChC,kBAAwC;QAExC,IAAM,aAAa,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC;QAClD,IAAI,eAAe,WACjB,OAAO;QAGT,IAAM,WAAW,WAAW,GAAG,CAAC,mBAAmB,IAAI;QACvD,IAAI,aAAa,WACf,OAAO;QAGT,oEAAoE;QACpE,uEAAuE;QACvE,OAAO,IAAI,CAAC,8BAA8B,CAAI,oBAAoB;IACpE;IAEQ,sBAAA,SAAA,CAAA,gBAAgB,GAAxB,SAAyB,OAAsB,EAAE,UAAsB;QACrE,IAAM,aAAa,QAAQ,uBAAuB;QAClD,IAAM,WAAW,WAAW,GAAG,CAAC,WAAW,IAAI;QAE/C,IAAI,aAAa,WAAW;YAC1B,WAAW,GAAG,CAAC,WAAW,IAAI,EAAE;gBAAC;aAAQ;YACzC;QACD;QAED,SAAS,IAAI,CAAC;IAChB;IAEQ,sBAAA,SAAA,CAAA,8BAA8B,GAAtC,SACE,kBAAwC,EACxC,gBAAiC;Q,I,K;QAEjC,IAAI,oBAAoB;Q,I;YAExB,IAA8B,IAAA,qBAAA,SAAA,mBAAgB,uBAAA,mBAAA,IAAA,IAAA,CAAA,qBAAA,IAAA,EAAA,uBAAA,mBAAA,IAAA,GAAE;gBAA3C,IAAM,kBAAe,qBAAA,KAAA;gBACxB,IAAM,qBAAqB,gBAAgB,uBAAuB;gBAElE,IAAI,CAAA,GAAA,gDAA0B,AAA1B,EAA2B,oBAAoB,qBAAqB;oBACtE,mDAAmD;oBACnD,IAAI,mBAAmB,WAAW,KAAK,mBAAmB,WAAW,EAAE;wBACrE,IACE,mBAAmB,WAAW,CAAC,MAAM,GACrC,mBAAmB,WAAW,CAAC,MAAM,EAErC,gBAAgB,iBAAiB,CAAC,mBAAmB,WAAW;wBAGlE,KAAI,IAAI,CAAC,IAAI,CACX,uCACA,mBAAmB,IAAI,EACvB,qHACA,cACA,CAAA,GAAA,gDAAyB,AAAzB,EAA0B,oBAAoB,qBAC9C,kEACA,CAAA,GAAA,kDAA2B,AAA3B,EAA4B,oBAAoB;oBAEnD;oBACD,wGAAwG;oBACxG,oBAAoB;gBACrB,OACC,yEAAyE;gBACzE,+CAA+C;gBAC/C,KAAI,IAAI,CAAC,IAAI,CACX,uCACA,mBAAmB,IAAI,EACvB,oFACA,cACA,CAAA,GAAA,gDAAyB,AAAzB,EAA0B,oBAAoB,qBAC9C,8BACA,CAAA,GAAA,kDAA2B,AAA3B,EAA4B,oBAAoB;YAGrD;Q,E,O,O;Y,M;gB,O;Y;Q,S;Y,I;gB,I,wB,C,qB,I,I,C,K,mB,M,A,G,G,I,C;Y,S;gB,I,K,M,I,K;Y;Q;QAED,OAAO;IACT;IACF,OAAA;AAAA;;;AExKA;;;;;;;;;;;;;;CAcG;;AAKH,+DAAgB;AAqBhB,0EAAgB;AAOhB,qEAAgB;AAOhB,qEAAgB;AAehB,oEAAgB;AAiBhB,iEAAgB;AAnEV,SAAU,0BACd,QAA8B,EAC9B,eAAqC;IAErC,IAAI,kBAAkB;IACtB,IAAI,SAAS,IAAI,KAAK,gBAAgB,IAAI,EACxC,mBAAmB,eAAa,SAAS,IAAI,GAAA,uBAAqB,gBAAgB,IAAI,GAAA;IAExF,IAAI,SAAS,IAAI,KAAK,gBAAgB,IAAI,EACxC,mBAAmB,eAAa,SAAS,IAAI,GAAA,uBAAqB,gBAAgB,IAAI,GAAA;IAExF,IAAI,SAAS,SAAS,KAAK,gBAAgB,SAAS,EAClD,mBAAmB,qBAAmB,SAAS,SAAS,GAAA,uBAAqB,gBAAgB,SAAS,GAAA;IAExG,IAAI,SAAS,WAAW,KAAK,gBAAgB,WAAW,EACtD,mBAAmB,sBAAoB,SAAS,WAAW,GAAA,uBAAqB,gBAAgB,WAAW,GAAA;IAG7G,OAAO;AACT;AAEM,SAAU,qCACd,QAA8B,EAC9B,eAAqC;IAErC,OAAO,wBAAsB,SAAS,SAAS,GAAA,oEAAkE,gBAAgB,IAAI,GAAA;AACvI;AAEM,SAAU,gCACd,QAA8B,EAC9B,eAAqC;IAErC,OAAO,mBAAiB,SAAS,IAAI,GAAA,oEAAkE,gBAAgB,IAAI,GAAA;AAC7H;AAEM,SAAU,gCACd,QAA8B,EAC9B,eAAqC;IAErC,IAAM,WAAuC;QAC3C,MAAM,gBAAgB,IAAI;QAC1B,MAAM,gBAAgB,IAAI;QAC1B,MAAM,gBAAgB,IAAI;IAC3B;IAED,IAAM,iBAAiB,KAAK,SAAS,CAAC;IAEtC,OAAO,mDAAiD,SAAS,IAAI,GAAA,+BAA6B,iBAAc;AAClH;AAEM,SAAU,+BACd,QAA8B,EAC9B,eAAqC;IAErC,IAAM,WAAuC;QAC3C,MAAM,gBAAgB,IAAI;QAC1B,MAAM,gBAAgB,IAAI;QAC1B,MAAM,gBAAgB,IAAI;IAC3B;IAED,IAAM,iBAAiB,KAAK,SAAS,CAAC;IAEtC,OAAO,mDAAiD,SAAS,IAAI,GAAA,+BAA6B,iBAAc,qDACnE,SAAS,IAAI,GAAA,uBAAqB,SAAS,WAAW,GAAA,8BAA4B,iBAAc,oDAChG,gBAAgB,IAAI,GAAA,uBAAqB,SAAS,WAAW,GAAA,8BAA4B;AACxI;AAEM,SAAU,4BACd,QAA8B,EAC9B,eAAqC;IAErC,6CAA6C;IAC7C,IAAI,SAAS,SAAS,KAAK,gBAAgB,SAAS,EAClD,OAAO,qCAAqC,UAAU;IAGxD,IAAI,SAAS,IAAI,KAAK,gBAAgB,IAAI,EACxC,OAAO,gCAAgC,UAAU;IAGnD,0CAA0C;IAC1C,IAAI,SAAS,IAAI,KAAK,gBAAgB,IAAI,EACxC,gEAAgE;IAChE,OAAO,gCAAgC,UAAU;IAGnD,IAAI,SAAS,WAAW,KAAK,gBAAgB,WAAW,EACtD,OAAO,+BAA+B,UAAU;IAGlD,OAAO;AACT;;;AE9GA;;;;;;;;;;;;;;CAcG,GAKH;;CAEG;;A,wD;AACH,IAAA,qBAAA,WAAA,GAAA;IACE,SAAA,mBAA6B,gBAAyC;QAAzC,IAAA,CAAA,gBAAgB,GAAhB;IAA4C;IAEzE,mBAAA,SAAA,CAAA,MAAM,GAAN,SACE,KAAa,EACb,UAAsB,EACtB,OAAgB,EAChB,UAAkB;QAElB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAA,EAAE;YAC9B,GAAG,MAAM,CAAC,OAAO,YAAY,SAAS;QACxC;IACF;IACF,OAAA;AAAA;;;AEnCA;;;;;;;;;;;;;;CAcG;;A,wD;AAEH;AAOA;AACA;AAIA;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAuBA;;;;;CAKG,GACH,IAAA,qBAAA,WAAA,GAAA;IAAA,SAAA;QACU,IAAA,CAAA,UAAU,GAA+B,EAAE;QAC3C,IAAA,CAAA,eAAe,GAAoC,EAAE;IAqJ/D;IAnJE,mBAAA,SAAA,CAAA,WAAW,GAAX,SAAY,QAA4B,EAAE,UAAgC;QACxE,IAAM,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU;QACzC,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ACT;IACF,OAAA;AAAA;AAEA,IAAA,0BAAA,WAAA,GAAA,SAAA,MAAA;IAA6C,UAAA,yBAAA;IAA7C,SAAA;Q,O,W,Q,O,K,C,I,E,c,I;IAIA;IAHE,wBAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,QAA0B,EAAE,QAAkB;QACpD,OAAO;IACT;IACF,OAAA;AAAA,EAJ6C;AAM7C;;;CAGG,GACH,IAAA,+BAAA,WAAA,GAAA,SAAA,MAAA;IAAkD,UAAA,8BAAA;IAChD,SAAA,6BAAoB,sBAAgC;QAApD,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,KAAO,IAAA;QADW,MAAA,sBAAsB,GAAtB;Q,O;IAEpB;IAEA,6BAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,QAA0B,EAAE,QAAiB;QAArD,IAAA,QAAA,IAAA;QACE,IAAM,qBAAuC,CAAA;QAC7C,OAAO,IAAI,CAAC,UACT,MAAM,CAAC,SAAA,aAAa;YACnB,OAAA,MAAK,sBAAsB,CAAC,QAAQ,CAAC;QAArC,GAED,OAAO,CACN,SAAA,aAAa;YACX,OAAC,kBAAkB,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc;QAA5D;QAEN,OAAO;IACT;IACF,OAAA;AAAA,EAjBkD;AAmBlD,IAAM,OAAO,IAAI;;;AEtEjB;;;;;;;;;;;;;;CAcG;;A,qD;AAEH;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;A,I,gB,a,U,a,I,S,E,E,I,E,I;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q;I;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AASA;;;;CAIG,GACH,IAAA,kBAAA,WAAA,GAAA;IACE,SAAA,gBACU,YAAsC,EACtC,aAA2B;QAD3B,IAAA,CAAA,YAAY,GAAZ;QACA,IAAA,CAAA,aAAa,GAAb;IACP;IAEG,gBAAA,SAAA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ACE,IAAM,QAAQ,IAAI,CAAC,eAAe,CAAC,GAAG,KAAK,IAAI,CAAC,kBAAkB;QAClE,OAAO,IAAI,CAAC,YAAY,GAAG;IAC7B;IACF,OAAA;AAAA;;;AEjEA;;;;;;;;;;;;;;CAcG;;AAIH,wDAAgB;AA0BhB,oDAAgB;AAIhB,sDAAgB;AAhChB;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;AAEM,SAAU,mBAAmB,UAAmB;I,I,K;IACpD,IAAM,MAAsB,CAAA;IAE5B,IAAI,OAAO,eAAe,YAAY,cAAc,MAClD,OAAO;I,I;QAGT,IAAyB,IAAA,KAAA,SAAA,OAAO,OAAO,CAAC,cAAW,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;YAA1C,IAAA,KAAA,OAAA,GAAA,KAAA,EAAA,IAAC,MAAG,EAAA,CAAA,EAAA,EAAE,MAAG,EAAA,CAAA,EAAA;YAClB,IAAI,CAAC,eAAe,MAAM;gBACxB,CAAA,GAAA,SAAI,AAAJ,EAAK,IAAI,CAAC,4BAA0B;gBACpC;YACD;YACD,IAAI,CAAC,iBAAiB,MAAM;gBAC1B,CAAA,GAAA,SAAI,AAAJ,EAAK,IAAI,CAAC,0CAAwC;gBAClD;YACD;YACD,IAAI,MAAM,OAAO,CAAC,MAChB,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK;iBAEpB,GAAG,CAAC,IAAI,GAAG;QAEd;I,E,O,O;Q,M;Y,O;Q;I,S;Q,I;Y,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Q,S;Y,I,K,M,I,K;Q;I;IAED,OAAO;AACT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N,gBAAgB,WAAW,SAAS;YAClC,OAAO,IAAI,aAAa;QAC1B,GAAG;IACL;IAEA,OAAO,QAAQ,IAAI,CAAC;QAAC;QAAS;KAAe,EAAE,IAAI,CACjD,SAAA,MAAM;QACJ,aAAa;QACb,OAAO;IACT,GACA,SAAA,MAAM;QACJ,aAAa;QACb,MAAM;IACR;AAEJ;;;;;AE/DA;;;;;;;;;;;;;;CAcG,GACH,gDAAgB;AAOhB;;;;CAIG,GACH,kDAAgB;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;AAZV,SAAU,WAAW,GAAW,EAAE,UAA2B;IACjE,IAAI,OAAO,eAAe,UACxB,OAAO,QAAQ;SAEf,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC;AAEvB;AAMM,SAAU,aACd,GAAW,EACX,WAAoC;I,I,K;IAEpC,IAAI,CAAC,aACH,OAAO;I,I;QAGT,IAAwB,IAAA,gBAAA,SAAA,cAAW,kBAAA,cAAA,IAAA,IAAA,CAAA,gBAAA,IAAA,EAAA,kBAAA,cAAA,IAAA,GAAE;YAAhC,IAAM,YAAS,gBAAA,KAAA;YAClB,IAAI,WAAW,KAAK,YAClB,OAAO;QAEV;I,E,O,O;Q,M;Y,O;Q;I,S;Q,I;Y,I,mB,C,gB,I,I,C,K,c,M,A,G,G,I,C;Q,S;Y,I,K,M,I,K;Q;I;IACD,OAAO;AACT;;;AEzCA;;;;;;;;;;;;;;CAcG,GAIH;;;CAGG;;AACH,+CAAgB;AAAV,SAAU,UAAU,IAAa;IACrC,OACE,OAAO,SAAS,cAChB,OAAQ,KAAqB,UAAU,KAAK,cAC5C,OAAQ,KAAqB,QAAQ,KAAK,cACzC,KAAqB,SAAS,KAAK;AAExC;;;AE7BA;;;;;;;;;;;;;;CAcG;;A,oD;AAEH;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;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AAU,WACd,eAAuB,EACvB,QAAW,EACX,QAAW;IAEX,OAAO,SAAC,OAAe;QACrB,OAAA,YAAY,kBAAkB,WAAW;IAAzC;AACJ;AASO,IAAM,sCAAsC;;;AEpDnD;;;;;;;;;;;;;;CAcG;;AAEH;AAAA;;;AEhBA;;;;;;;;;;;;;;CAcG,GAEH,2EAA2E;AAC3E,2BAA2B;AAE3B;;;;;;CAMG,GAEH,8DAAA,GACA,8EAA8E;;;iDACjE;;AAAN,IAAM,cACX,OAAO,eAAe,WAClB,aACA,OAAO,SAAS,WACd,OACA,OAAO,WAAW,WAChB,SACA,OAAO,WAAW,WAChB,SACC,CAAA;;;AEtCb;;;;;;;;;;;;;;CAcG;;AAIH;;;;CAIG,GACH,4DAAgB;AAsBhB;;;;CAIG,GACH,iEAAsB;AAqBtB;;;CAGG,GACH,+CAAgB;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;AApDV,SAAU,uBACd,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B;IAE9B,IAAI;IACJ,IAAI;IACJ,IAAI;QACF,SAAS;IACV,EAAC,OAAO,GAAG;QACV,QAAQ;IACT,SAAS;QACR,SAAS,OAAO;QAChB,IAAI,SAAS,CAAC,sBACZ,6CAA6C;QAC7C,MAAM;QAER,6CAA6C;QAC7C,OAAO;IACR;AACH;AAOM,SAAgB,4BACpB,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B;I,O,U,I,E,K,G,K,G;Q,I,O,Q;Q,O,Y,I,E,S,E;Y,O,G,K;gB,K;oB,G,I,C,I,C;wB;wB;wB;wB;qB;oBAKnB,OAAA;wBAAA,EAAA,OAAA;wBAAM;qBAAS;gB,K;oBAAxB,SAAS,GAAA,IAAA;oB,O;wB,E,O;wB;qB;gB,K;oB,M,G,I;oBAET,QAAQ;oB,O;wB,E,O;wB;qB;gB,K;oBAER,SAAS,OAAO;oBAChB,IAAI,SAAS,CAAC,sBACZ,6CAA6C;oBAC7C,MAAM;oBAER,6CAA6C;oBAC7C,OAAA;wBAAA,EAAA,QAAA;wBAAO;qBAAW;gB,K;oB,O;wB,E,Q;qB;Y;Q;I;AAErB;AAKK,SAAU,UAAU,IAAa;IACrC,OACE,OAAO,SAAS,cAChB,OAAQ,KAAqB,UAAU,KAAK,cAC5C,OAAQ,KAAqB,QAAQ,KAAK,cACzC,KAAqB,SAAS,KAAK;AAExC;;;AElFA;;;;;;;;;;;;;;CAcG;;AAEH;AA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CAAA,EAPY,cAAA,CAAA,aAAU,CAAA,CAAA;;;AEhBtB;;;;;;;;;;;;;;CAcG;;AAYH;;;;CAIG,GACH,sDAAgB;AAfhB,kGAAkG;AAClG,sCAAsC;AAEtC;A,I,W,a,U,Q,I,S,C;I,I,I,O,W,c,O,Q,E,I,K,C,C,E,E,I;I,I,G,O,E,I,C;I,I,K,O,E,M,K,U,O;Q,M;Y,I,K,K,E,M,E,I,K;Y,O;gB,O,K,C,C,I;gB,M,C;Y;Q;I;I,M,I,U,I,4B;A;A,I,S,a,U,M,I,S,C,E,C;I,I,I,O,W,c,C,C,O,Q,C;I,I,C,G,O;I,I,I,E,I,C,I,G,K,E,E;I,I;Q,M,A,C,M,K,K,M,C,K,C,A,C,I,E,I,E,E,I,C,G,I,C,E,K;I,E,O,O;Q,I;Y,O;Q;I,S;Q,I;Y,I,K,C,E,I,I,C,I,C,C,S,A,G,E,I,C;Q,S;Y,I,G,M,E,K;Q;I;I,O;A;AAEA,IAAM,cAAc,KAAI,IAAI,CAAC,qBAAqB,CAAC;IACjD,WACE;AACH;AAOK,SAAU,iBACd,IAAuC;IAEvC,IAAI,OAAO,aAAa,eAAe,gBAAgB,UACrD,OAAO,IAAI,gBAAgB,iBAAiB,CAAC,UAAU,MAAM;IAE/D,mDAAmD;IACnD,IAAI,gBAAgB,MAClB,OAAO,KAAK,IAAI;IAGlB,gCAAgC;IAChC,IAAK,KAAa,UAAU,KAAK,WAC/B,OAAQ,KAAa,UAAoB;IAG3C,IAAI,gBAAgB,UAClB,OAAO,gBAAgB;IAGzB,IAAI,gBAAgB,iBAClB,OAAO,cAAc,KAAK,QAAQ;IAGpC,IAAI,OAAO,SAAS,UAClB,OAAO,cAAc;IAGvB,YAAY,IAAI,CAAC;IACjB,OAAO;AACT;AAEA,IAAM,eAAe,IAAI;AACzB,SAAS,cAAc,CAAS;IAC9B,OAAO,aAAa,MAAM,CAAC,GAAG,UAAU;AAC1C;AAEA,SAAS,gBAAgB,QAAkB;I,I,K;IACzC,IAAI,OAAO;I,I;QACX,IAA2B,IAAA,KAAA,SAAA,SAAS,OAAO,KAAE,KAAA,GAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;YAApC,IAAA,KAAA,OAAA,GAAA,KAAA,EAAA,IAAC,MAAG,EAAA,CAAA,EAAA,EAAE,QAAK,EAAA,CAAA,EAAA;YACpB,QAAQ,IAAI,MAAM;YAClB,IAAI,iBAAiB,MACnB,QAAQ,MAAM,IAAI;iBAElB,QAAQ,MAAM,MAAM;QAEvB;I,E,O,O;Q,M;Y,O;Q;I,S;Q,I;Y,I,M,C,G,I,I,C,K,G,M,A,G,G,I,C;Q,S;Y,I,K,M,I,K;Q;I;IACD,OAAO;AACT;;;AE/EA;;;;;;;;;;;;;;CAcG,GAEH,4DAA4D;;;6CAC/C;AAAN,IAAM,UAAU;;;AEjBvB;;;;;;;;;;;;;;CAcG,GAEH;;CAEG;;oDACS;AAAZ,IAAY;AAAZ,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,mBAAA,GAAA;AACF,CAAA,EAFY,kBAAA,CAAA,iBAAc,CAAA,CAAA;;;AEnB1B;;;;;;;;;;;;;;CAcG;;AAEH;AAAA,wBAAA;AACA;AAAA,wBAAA;AACA;AAAA,wBAAA;;;AElBA;;;;;;;;;;;;;;CAcG;;A,oE;AAEH,iCAAiC;AAEjC;AAEA;AACA;AACA;AACA;AAaA,gBAAA,GACA;A,I,Y,a,U,S,I,A;I,I,gB,S,C,E,C;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C;Y,E,S,G;Q,K,S,C,E,C;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O,c,G;I;I,O,S,C,E,C;Q,I,O,M,c,M,M,M,I,U,yB,O,K;Q,c,G;Q,S;Y,I,C,W,G;Q;Q,E,S,G,M,O,O,M,C,K,C,G,S,G,E,S,E,I,I;I;A;AAEA,IAAM,mBAAmB;AACzB,IAAM,wBAAwB;AAC9B,IAAM,sBAAmC;IAAC;CAAQ;AAElD,SAAS;IACP,OAAO;AACT;AAEA;;;;CAIG,GACH,IAAA,iCAAA,WAAA,GAAA,SAAA,MAAA;IAAoD,UAAA,gCAAA;IAkBlD,SAAA,+BAAY,MAAiD;QAAjD,IAAA,WAAA,KAAA,GAAA,SAAA,CAAA;Q,I;QAAZ,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,CAAA,GAAA,qBAAY,AAAZ,GAAc,CAAA,GAAA,wBAAe,AAAf,GAAiB,WAAO,IAAA;QAlBrC,MAAA,OAAO,GAAG,CAAA,GAAA,wBAAe,AAAf;QACV,MAAA,U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AU,CAAA,GAAA,qBAAyB,AAAzB;AAUjB,SAAU,WACd,eAAuB,EACvB,QAAW,EACX,QAAW;IAEX,OAAO,SAAC,OAAe;QACrB,OAAA,YAAY,kBAAkB,WAAW;IAAzC;AACJ;AASO,IAAM,sCAAsC;;;AEpDnD;;;;;;;;;;;;;;CAcG;;AAEH;AAAA;;;AEhBA;;;;;;;;;;;;;;CAcG,GAEH,2EAA2E;AAC3E,2BAA2B;AAE3B;;;;;;CAMG,GAEH,8DAAA,GACA,8EAA8E;;;iDACjE;;AAAN,IAAM,cACX,OAAO,eAAe,WAClB,aACA,OAAO,SAAS,WACd,OACA,OAAO,WAAW,WAChB,SACA,OAAO,WAAW,WAChB,SACC,CAAA;;;AEtCb;;;;;;;;;;;;;;CAcG;;AAIH;;;;CAIG,GACH,4DAAgB;AAsBhB;;;;CAIG,GACH,iEAAsB;AAqBtB;;;CAGG,GACH,+CAAgB;A,I,Y,a,U,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,I,c,a,U,W,I,S,O,E,I;I,I,I;Q,O;Q,M;Y,I,C,C,E,G,G,M,C,C,E;Y,O,C,C,E;Q;Q,M,E;Q,K,E;I,G,G,G,G;I,O,I;Q,M,K;Q,S,K;Q,U,K;I,G,O,W,c,C,C,C,O,Q,C,G;Q,O,I;I,C,G;I,S,K,C;Q,O,S,C;Y,O,K;gB;gB;a;Q;I;I,S,K,E;Q,I,G,M,I,U;Q,M,E,I;Y,I,I,G,K,C,I,E,C,E,G,I,C,C,S,G,E,C,E,G,C,C,Q,I,C,A,C,I,C,C,S,A,K,E,I,C,I,C,I,E,I,A,K,C,A,C,I,E,I,C,G,E,C,E,C,E,I,E,O;Y,I,I,G,G,K;gB,E,C,E,G;gB,E,K;a;Y,O,E,C,E;gB,K;gB,K;oB,I;oB;gB,K;oB,E,K;oB,O;wB,O,E,C,E;wB,M;oB;gB,K;oB,E,K;oB,I,E,C,E;oB,K;wB;qB;oB;gB,K;oB,K,E,G,C,G;oB,E,I,C,G;oB;gB;oB,I,C,C,I,E,I,E,I,E,M,G,K,C,C,E,M,G,E,A,K,C,E,C,E,K,K,E,C,E,K,C,G;wB,I;wB;oB;oB,I,E,C,E,K,K,C,C,K,E,C,E,G,C,C,E,I,E,C,E,G,C,C,E,G;wB,E,K,G,E,C,E;wB;oB;oB,I,E,C,E,K,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,I;wB;oB;oB,I,K,E,K,G,C,C,E,E;wB,E,K,G,C,C,E;wB,E,G,C,I,C;wB;oB;oB,I,C,C,E,E,E,G,C,G;oB,E,I,C,G;oB;Y;Y,K,K,I,C,S;Q,E,O,G;Y,K;gB;gB;a;Y,I;Q,S;Y,I,I;Q;Q,I,E,C,E,G,G,M,E,C,E;Q,O;Y,O,E,C,E,G,E,C,E,G,K;Y,M;Q;I;A;AApDV,SAAU,uBACd,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B;IAE9B,IAAI;IACJ,IAAI;IACJ,IAAI;QACF,SAAS;IACV,EAAC,OAAO,GAAG;QACV,QAAQ;IACT,SAAS;QACR,SAAS,OAAO;QAChB,IAAI,SAAS,CAAC,sBACZ,6CAA6C;QAC7C,MAAM;QAER,6CAA6C;QAC7C,OAAO;IACR;AACH;AAOM,SAAgB,4BACpB,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B;I,O,U,I,E,K,G,K,G;Q,I,O,Q;Q,O,Y,I,E,S,E;Y,O,G,K;gB,K;oB,G,I,C,I,C;wB;wB;wB;wB;qB;oBAKnB,OAAA;wBAAA,EAAA,OAAA;wBAAM;qBAAS;gB,K;oBAAxB,SAAS,GAAA,IAAA;oB,O;wB,E,O;wB;qB;gB,K;oB,M,G,I;oBAET,QAAQ;oB,O;wB,E,O;wB;qB;gB,K;oBAER,SAAS,OAAO;oBAChB,IAAI,SAAS,CAAC,sBACZ,6CAA6C;oBAC7C,MAAM;oBAER,6CAA6C;oBAC7C,OAAA;wBAAA,EAAA,QAAA;wBAAO;qBAAW;gB,K;oB,O;wB,E,Q;qB;Y;Q;I;AAErB;AAKK,SAAU,UAAU,IAAa;IACrC,OACE,OAAO,SAAS,cAChB,OAAQ,KAAqB,UAAU,KAAK,cAC5C,OAAQ,KAAqB,QAAQ,KAAK,cACzC,KAAqB,SAAS,KAAK;AAExC;;;AElFA;;;;;;;;;;;;;;CAcG;;oDAES;AAAZ,IAAY;AAAZ,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,aAAA,GAAA;IACA,cAAA,CAAA,iBAAA,GAAA;IACA,cAAA,CAAA,eAAA,GAAA;IACA,cAAA,CAAA,WAAA,GAAA;AACF,CAAA,EALY,kBAAA,CAAA,iBAAc,CAAA,CAAA;;;AEhB1B;;;;;;;;;;;;;;CAcG,GAEH,4DAA4D;;;qDAC/C;kDACA;AADN,IAAM,kBAAkB;AACxB,IAAM,eAAe","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-e939016a27f205d7.js","metrics.js","node_modules/@opentelemetry/sdk-trace-base/build/esm/index.js","node_modules/@opentelemetry/sdk-trace-base/src/index.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ConsoleSpanExporter.js","node_modules/@opentelemetry/sdk-trace-base/src/export/ConsoleSpanExporter.ts","node_modules/@opentelemetry/core/build/esm/index.js","node_modules/@opentelemetry/core/src/index.ts","node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","node_modules/@opentelemetry/core/src/common/global-error-handler.ts","node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","node_modules/@opentelemetry/api/build/esm/index.js","node_modules/@opentelemetry/api/src/index.ts","node_modules/@opentelemetry/api/build/esm/baggage/utils.js","node_modules/@opentelemetry/api/src/baggage/utils.ts","node_modules/@opentelemetry/api/build/esm/api/diag.js","node_modules/@opentelemetry/api/src/api/diag.ts","node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js","node_modules/@opentelemetry/api/src/diag/ComponentLogger.ts","node_modules/@opentelemetry/api/build/esm/internal/global-utils.js","node_modules/@opentelemetry/api/src/internal/global-utils.ts","node_modules/@opentelemetry/api/build/esm/platform/browser/index.js","node_modules/@opentelemetry/api/src/platform/browser/index.ts","node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/api/src/platform/browser/globalThis.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@opentelemetry/api/build/esm/version.js","node_modules/@opentelemetry/api/src/version.ts","node_modules/@opentelemetry/api/build/esm/internal/semver.js","node_modules/@opentelemetry/api/src/internal/semver.ts","node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js","node_modules/@opentelemetry/api/src/diag/internal/logLevelLogger.ts","node_modules/@opentelemetry/api/build/esm/diag/types.js","node_modules/@opentelemetry/api/src/diag/types.ts","node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js","node_modules/@opentelemetry/api/src/baggage/internal/baggage-impl.ts","node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js","node_modules/@opentelemetry/api/src/baggage/internal/symbol.ts","node_modules/@opentelemetry/api/build/esm/context/context.js","node_modules/@opentelemetry/api/src/context/context.ts","node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js","node_modules/@opentelemetry/api/src/diag/consoleLogger.ts","node_modules/@opentelemetry/api/build/esm/metrics/NoopMeter.js","node_modules/@opentelemetry/api/src/metrics/NoopMeter.ts","node_modules/@opentelemetry/api/build/esm/metrics/Metric.js","node_modules/@opentelemetry/api/src/metrics/Metric.ts","node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js","node_modules/@opentelemetry/api/src/propagation/TextMapPropagator.ts","node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js","node_modules/@opentelemetry/api/src/trace/ProxyTracer.ts","node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js","node_modules/@opentelemetry/api/src/trace/NoopTracer.ts","node_modules/@opentelemetry/api/build/esm/api/context.js","node_modules/@opentelemetry/api/src/api/context.ts","node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js","node_modules/@opentelemetry/api/src/context/NoopContextManager.ts","node_modules/@opentelemetry/api/build/esm/trace/context-utils.js","node_modules/@opentelemetry/api/src/trace/context-utils.ts","node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js","node_modules/@opentelemetry/api/src/trace/NonRecordingSpan.ts","node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js","node_modules/@opentelemetry/api/src/trace/invalid-span-constants.ts","node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js","node_modules/@opentelemetry/api/src/trace/trace_flags.ts","node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js","node_modules/@opentelemetry/api/src/trace/spancontext-utils.ts","node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js","node_modules/@opentelemetry/api/src/trace/ProxyTracerProvider.ts","node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js","node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts","node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","node_modules/@opentelemetry/api/src/trace/SamplingResult.ts","node_modules/@opentelemetry/api/build/esm/trace/span_kind.js","node_modules/@opentelemetry/api/src/trace/span_kind.ts","node_modules/@opentelemetry/api/build/esm/trace/status.js","node_modules/@opentelemetry/api/src/trace/status.ts","node_modules/@opentelemetry/api/build/esm/trace/internal/utils.js","node_modules/@opentelemetry/api/src/trace/internal/utils.ts","node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js","node_modules/@opentelemetry/api/src/trace/internal/tracestate-impl.ts","node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js","node_modules/@opentelemetry/api/src/trace/internal/tracestate-validators.ts","node_modules/@opentelemetry/api/build/esm/context-api.js","node_modules/@opentelemetry/api/src/context-api.ts","node_modules/@opentelemetry/api/build/esm/diag-api.js","node_modules/@opentelemetry/api/src/diag-api.ts","node_modules/@opentelemetry/api/build/esm/metrics-api.js","node_modules/@opentelemetry/api/src/metrics-api.ts","node_modules/@opentelemetry/api/build/esm/api/metrics.js","node_modules/@opentelemetry/api/src/api/metrics.ts","node_modules/@opentelemetry/api/build/esm/metrics/NoopMeterProvider.js","node_modules/@opentelemetry/api/src/metrics/NoopMeterProvider.ts","node_modules/@opentelemetry/api/build/esm/propagation-api.js","node_modules/@opentelemetry/api/src/propagation-api.ts","node_modules/@opentelemetry/api/build/esm/api/propagation.js","node_modules/@opentelemetry/api/src/api/propagation.ts","node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js","node_modules/@opentelemetry/api/src/propagation/NoopTextMapPropagator.ts","node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js","node_modules/@opentelemetry/api/src/baggage/context-helpers.ts","node_modules/@opentelemetry/api/build/esm/trace-api.js","node_modules/@opentelemetry/api/src/trace-api.ts","node_modules/@opentelemetry/api/build/esm/api/trace.js","node_modules/@opentelemetry/api/src/api/trace.ts","node_modules/@opentelemetry/core/build/esm/common/time.js","node_modules/@opentelemetry/core/src/common/time.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/index.js","node_modules/@opentelemetry/core/src/platform/browser/index.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","node_modules/@opentelemetry/core/src/platform/browser/performance.ts","node_modules/@opentelemetry/core/build/esm/ExportResult.js","node_modules/@opentelemetry/core/src/ExportResult.ts","node_modules/@opentelemetry/core/build/esm/baggage/utils.js","node_modules/@opentelemetry/core/src/baggage/utils.ts","node_modules/@opentelemetry/core/build/esm/baggage/constants.js","node_modules/@opentelemetry/core/src/baggage/constants.ts","node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","node_modules/@opentelemetry/core/src/trace/TraceState.ts","node_modules/@opentelemetry/core/build/esm/internal/validators.js","node_modules/@opentelemetry/core/src/internal/validators.ts","node_modules/@opentelemetry/core/build/esm/utils/callback.js","node_modules/@opentelemetry/core/src/utils/callback.ts","node_modules/@opentelemetry/core/build/esm/utils/promise.js","node_modules/@opentelemetry/core/src/utils/promise.ts","node_modules/@opentelemetry/core/build/esm/internal/exporter.js","node_modules/@opentelemetry/core/src/internal/exporter.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SimpleSpanProcessor.js","node_modules/@opentelemetry/sdk-trace-base/src/export/SimpleSpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/index.js","node_modules/@opentelemetry/sdk-trace-web/src/index.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","node_modules/@opentelemetry/sdk-trace-web/src/WebTracerProvider.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/index.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/index.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/Tracer.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/index.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/index.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/baggage/constants.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/baggage/utils.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/common/anchored-clock.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/common/attributes.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/common/attributes.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/common/global-error-handler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/common/time.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/common/time.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/index.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/platform/browser/index.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/platform/browser/environment.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/environment.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/environment.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/sampling.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/hex-to-base64.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/platform/browser/hex-to-base64.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/common/hex-to-binary.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/common/hex-to-binary.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/platform/browser/RandomIdGenerator.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/version.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/version.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/index.js","node_modules/@opentelemetry/semantic-conventions/src/index.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/trace/index.js","node_modules/@opentelemetry/semantic-conventions/src/trace/index.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/internal/utils.js","node_modules/@opentelemetry/semantic-conventions/src/internal/utils.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/resource/index.js","node_modules/@opentelemetry/semantic-conventions/src/resource/index.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","node_modules/@opentelemetry/semantic-conventions/src/resource/SemanticResourceAttributes.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/stable_attributes.js","node_modules/@opentelemetry/semantic-conventions/src/stable_attributes.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/stable_metrics.js","node_modules/@opentelemetry/semantic-conventions/src/stable_metrics.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/platform/browser/timer-util.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/ExportResult.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/ExportResult.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/propagation/composite.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/trace/TraceState.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/internal/validators.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/internal/validators.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/trace/rpc-metadata.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOffSampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOnSampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/trace/sampler/ParentBasedSampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/trace/sampler/TraceIdRatioBasedSampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/merge.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/merge.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/timeout.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/timeout.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/url.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/url.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/wrap.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/wrap.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/callback.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/callback.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/promise.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/utils/promise.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/internal/exporter.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/src/internal/exporter.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/Span.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/enums.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/utility.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/config.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOffSampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOffSampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/Sampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/Sampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOnSampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOnSampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/ParentBasedSampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/sampler/ParentBasedSampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/TraceIdRatioBasedSampler.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/sampler/TraceIdRatioBasedSampler.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/index.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/index.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/export/BatchSpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/export/BatchSpanProcessorBase.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/RandomIdGenerator.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/RandomIdGenerator.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/BasicTracerProvider.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/resources/build/esm/index.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/resources/src/index.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/resources/build/esm/Resource.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/resources/src/Resource.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/resources/build/esm/platform/browser/index.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/resources/src/platform/browser/index.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/resources/src/platform/browser/default-service-name.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/MultiSpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/export/NoopSpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","node_modules/@opentelemetry/sdk-trace-web/src/StackContextManager.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/enums/PerformanceTimingNames.js","node_modules/@opentelemetry/sdk-trace-web/src/enums/PerformanceTimingNames.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js","node_modules/@opentelemetry/sdk-trace-web/src/utils.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/index.js","node_modules/@opentelemetry/instrumentation-document-load/src/index.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/instrumentation.js","node_modules/@opentelemetry/instrumentation-document-load/src/instrumentation.ts","node_modules/@opentelemetry/instrumentation/build/esm/index.js","node_modules/@opentelemetry/instrumentation/src/index.ts","node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js","node_modules/@opentelemetry/instrumentation/src/autoLoader.ts","node_modules/@opentelemetry/api-logs/build/esm/index.js","node_modules/@opentelemetry/api-logs/src/index.ts","node_modules/@opentelemetry/api-logs/build/esm/NoopLogger.js","node_modules/@opentelemetry/api-logs/src/NoopLogger.ts","node_modules/@opentelemetry/api-logs/build/esm/NoopLoggerProvider.js","node_modules/@opentelemetry/api-logs/src/NoopLoggerProvider.ts","node_modules/@opentelemetry/api-logs/build/esm/ProxyLogger.js","node_modules/@opentelemetry/api-logs/src/ProxyLogger.ts","node_modules/@opentelemetry/api-logs/build/esm/ProxyLoggerProvider.js","node_modules/@opentelemetry/api-logs/src/ProxyLoggerProvider.ts","node_modules/@opentelemetry/api-logs/build/esm/api/logs.js","node_modules/@opentelemetry/api-logs/src/api/logs.ts","node_modules/@opentelemetry/api-logs/build/esm/internal/global-utils.js","node_modules/@opentelemetry/api-logs/src/internal/global-utils.ts","node_modules/@opentelemetry/api-logs/build/esm/platform/browser/index.js","node_modules/@opentelemetry/api-logs/src/platform/browser/index.ts","node_modules/@opentelemetry/api-logs/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/api-logs/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js","node_modules/@opentelemetry/instrumentation/src/autoLoaderUtils.ts","node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/instrumentation.js","node_modules/@opentelemetry/instrumentation/src/platform/browser/instrumentation.ts","node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js","node_modules/@opentelemetry/instrumentation/src/instrumentation.ts","node_modules/shimmer/index.js","node_modules/@opentelemetry/instrumentation/build/esm/utils.js","node_modules/@opentelemetry/instrumentation/src/utils.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/enums/AttributeNames.js","node_modules/@opentelemetry/instrumentation-document-load/src/enums/AttributeNames.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/version.js","node_modules/@opentelemetry/instrumentation-document-load/src/version.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/utils.js","node_modules/@opentelemetry/instrumentation-document-load/src/utils.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/enums/EventNames.js","node_modules/@opentelemetry/instrumentation-document-load/src/enums/EventNames.ts","node_modules/@opentelemetry/instrumentation-document-load/src/types.ts","node_modules/@opentelemetry/context-zone/build/esm/index.js","node_modules/@opentelemetry/context-zone/src/index.ts","node_modules/@opentelemetry/context-zone-peer-dep/build/esm/index.js","node_modules/@opentelemetry/context-zone-peer-dep/src/index.ts","node_modules/@opentelemetry/context-zone-peer-dep/build/esm/ZoneContextManager.js","node_modules/@opentelemetry/context-zone-peer-dep/src/ZoneContextManager.ts","node_modules/@opentelemetry/context-zone-peer-dep/build/esm/util.js","node_modules/@opentelemetry/context-zone-peer-dep/src/util.ts","node_modules/zone.js/fesm2015/zone.js","node_modules/@opentelemetry/sdk-metrics/build/esm/index.js","node_modules/@opentelemetry/sdk-metrics/src/index.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/AggregationTemporality.js","node_modules/@opentelemetry/sdk-metrics/src/export/AggregationTemporality.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/MetricData.js","node_modules/@opentelemetry/sdk-metrics/src/export/MetricData.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/MetricReader.js","node_modules/@opentelemetry/sdk-metrics/src/export/MetricReader.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/utils.js","node_modules/@opentelemetry/sdk-metrics/src/utils.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/AggregationSelector.js","node_modules/@opentelemetry/sdk-metrics/src/export/AggregationSelector.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/Aggregation.js","node_modules/@opentelemetry/sdk-metrics/src/view/Aggregation.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/index.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/index.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Drop.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/Drop.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/types.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/types.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Histogram.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/Histogram.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/InstrumentDescriptor.js","node_modules/@opentelemetry/sdk-metrics/src/InstrumentDescriptor.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/ExponentialHistogram.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/ExponentialHistogram.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/exponential-histogram/Buckets.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/exponential-histogram/Buckets.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/exponential-histogram/mapping/getMapping.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/exponential-histogram/mapping/getMapping.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/exponential-histogram/mapping/ExponentMapping.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/exponential-histogram/mapping/ExponentMapping.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/exponential-histogram/mapping/ieee754.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/exponential-histogram/mapping/ieee754.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/exponential-histogram/util.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/exponential-histogram/util.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/exponential-histogram/mapping/types.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/exponential-histogram/mapping/types.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/exponential-histogram/mapping/LogarithmMapping.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/exponential-histogram/mapping/LogarithmMapping.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/LastValue.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/LastValue.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/index.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/index.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/baggage/constants.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/baggage/utils.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/common/anchored-clock.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/attributes.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/common/attributes.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/common/global-error-handler.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/time.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/common/time.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/index.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/platform/browser/index.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/platform/browser/environment.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/environment.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/environment.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/sampling.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/hex-to-base64.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/platform/browser/hex-to-base64.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/common/hex-to-binary.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/common/hex-to-binary.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/platform/browser/RandomIdGenerator.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/version.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/version.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/platform/browser/timer-util.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/ExportResult.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/ExportResult.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/propagation/composite.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/trace/TraceState.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/internal/validators.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/internal/validators.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/trace/rpc-metadata.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOffSampler.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOnSampler.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/trace/sampler/ParentBasedSampler.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/trace/sampler/TraceIdRatioBasedSampler.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/merge.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/merge.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/timeout.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/timeout.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/url.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/url.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/wrap.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/wrap.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/callback.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/callback.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/utils/promise.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/utils/promise.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/build/esm/internal/exporter.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/core/src/internal/exporter.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Sum.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/Sum.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/PeriodicExportingMetricReader.js","node_modules/@opentelemetry/sdk-metrics/src/export/PeriodicExportingMetricReader.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/InMemoryMetricExporter.js","node_modules/@opentelemetry/sdk-metrics/src/export/InMemoryMetricExporter.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/ConsoleMetricExporter.js","node_modules/@opentelemetry/sdk-metrics/src/export/ConsoleMetricExporter.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/MeterProvider.js","node_modules/@opentelemetry/sdk-metrics/src/MeterProvider.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/index.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/src/index.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/Resource.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/src/Resource.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/platform/browser/index.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/src/platform/browser/index.ts","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","node_modules/@opentelemetry/sdk-metrics/node_modules/@opentelemetry/resources/src/platform/browser/default-service-name.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MeterProviderSharedState.js","node_modules/@opentelemetry/sdk-metrics/src/state/MeterProviderSharedState.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/ViewRegistry.js","node_modules/@opentelemetry/sdk-metrics/src/view/ViewRegistry.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MeterSharedState.js","node_modules/@opentelemetry/sdk-metrics/src/state/MeterSharedState.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/Meter.js","node_modules/@opentelemetry/sdk-metrics/src/Meter.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/Instruments.js","node_modules/@opentelemetry/sdk-metrics/src/Instruments.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/AsyncMetricStorage.js","node_modules/@opentelemetry/sdk-metrics/src/state/AsyncMetricStorage.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricStorage.js","node_modules/@opentelemetry/sdk-metrics/src/state/MetricStorage.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/DeltaMetricProcessor.js","node_modules/@opentelemetry/sdk-metrics/src/state/DeltaMetricProcessor.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/HashMap.js","node_modules/@opentelemetry/sdk-metrics/src/state/HashMap.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/TemporalMetricProcessor.js","node_modules/@opentelemetry/sdk-metrics/src/state/TemporalMetricProcessor.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricStorageRegistry.js","node_modules/@opentelemetry/sdk-metrics/src/state/MetricStorageRegistry.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/RegistrationConflicts.js","node_modules/@opentelemetry/sdk-metrics/src/view/RegistrationConflicts.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MultiWritableMetricStorage.js","node_modules/@opentelemetry/sdk-metrics/src/state/MultiWritableMetricStorage.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/ObservableRegistry.js","node_modules/@opentelemetry/sdk-metrics/src/state/ObservableRegistry.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/ObservableResult.js","node_modules/@opentelemetry/sdk-metrics/src/ObservableResult.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/SyncMetricStorage.js","node_modules/@opentelemetry/sdk-metrics/src/state/SyncMetricStorage.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/AttributesProcessor.js","node_modules/@opentelemetry/sdk-metrics/src/view/AttributesProcessor.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricCollector.js","node_modules/@opentelemetry/sdk-metrics/src/state/MetricCollector.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/View.js","node_modules/@opentelemetry/sdk-metrics/src/view/View.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/Predicate.js","node_modules/@opentelemetry/sdk-metrics/src/view/Predicate.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/InstrumentSelector.js","node_modules/@opentelemetry/sdk-metrics/src/view/InstrumentSelector.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/MeterSelector.js","node_modules/@opentelemetry/sdk-metrics/src/view/MeterSelector.ts","node_modules/@opentelemetry/exporter-prometheus/build/src/index.js","node_modules/@opentelemetry/exporter-prometheus/src/index.ts","node_modules/@opentelemetry/exporter-prometheus/build/src/PrometheusExporter.js","node_modules/@opentelemetry/exporter-prometheus/src/PrometheusExporter.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/index.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/index.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/baggage/constants.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/baggage/utils.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/common/anchored-clock.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/common/attributes.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/common/attributes.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/common/global-error-handler.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/common/time.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/common/time.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/platform/browser/index.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/platform/browser/index.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/platform/browser/environment.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/environment.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/environment.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/sampling.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/platform/browser/hex-to-base64.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/platform/browser/hex-to-base64.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/common/hex-to-binary.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/common/hex-to-binary.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/platform/browser/RandomIdGenerator.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/version.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/version.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/platform/browser/timer-util.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/ExportResult.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/ExportResult.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/propagation/composite.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/trace/TraceState.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/internal/validators.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/internal/validators.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/trace/rpc-metadata.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOffSampler.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOnSampler.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/trace/sampler/ParentBasedSampler.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/trace/sampler/TraceIdRatioBasedSampler.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/merge.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/merge.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/timeout.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/timeout.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/url.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/url.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/wrap.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/wrap.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/callback.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/callback.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/utils/promise.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/utils/promise.ts","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/build/esm/internal/exporter.js","node_modules/@opentelemetry/exporter-prometheus/node_modules/@opentelemetry/core/src/internal/exporter.ts","node_modules/stream-http/index.js","node_modules/stream-http/lib/request.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/process/browser.js","node_modules/stream-http/lib/capability.js","node_modules/inherits/inherits_browser.js","node_modules/stream-http/lib/response.js","node_modules/readable-stream/readable-browser.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/events/events.js","node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/readable-stream/lib/internal/streams/state.js","node_modules/readable-stream/errors-browser.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/util-deprecate/browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/safe-buffer/index.js","node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/xtend/immutable.js","node_modules/builtin-status-codes/browser.js","node_modules/url/url.js","node_modules/punycode/punycode.js","node_modules/qs/lib/index.js","node_modules/qs/lib/stringify.js","node_modules/side-channel/index.js","node_modules/get-intrinsic/index.js","node_modules/es-errors/index.js","node_modules/es-errors/eval.js","node_modules/es-errors/range.js","node_modules/es-errors/ref.js","node_modules/es-errors/syntax.js","node_modules/es-errors/type.js","node_modules/es-errors/uri.js","node_modules/has-symbols/index.js","node_modules/has-symbols/shams.js","node_modules/has-proto/index.js","node_modules/function-bind/index.js","node_modules/function-bind/implementation.js","node_modules/hasown/index.js","node_modules/call-bind/callBound.js","node_modules/call-bind/index.js","node_modules/set-function-length/index.js","node_modules/define-data-property/index.js","node_modules/es-define-property/index.js","node_modules/gopd/index.js","node_modules/has-property-descriptors/index.js","node_modules/object-inspect/index.js","node_modules/qs/lib/utils.js","node_modules/qs/lib/formats.js","node_modules/qs/lib/parse.js","node_modules/@opentelemetry/exporter-prometheus/build/src/PrometheusSerializer.js","node_modules/@opentelemetry/exporter-prometheus/src/PrometheusSerializer.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/xhr.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/xhr.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/instrumentation.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/src/platform/browser/instrumentation.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/src/instrumentation.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/NoopLogger.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/NoopLogger.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/NoopLoggerProvider.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/NoopLoggerProvider.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/ProxyLogger.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/ProxyLogger.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/ProxyLoggerProvider.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/ProxyLoggerProvider.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/api/logs.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/api/logs.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/internal/global-utils.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/internal/global-utils.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/api-logs/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/build/esm/utils.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/instrumentation/src/utils.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/common/time.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/common/time.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/baggage/utils.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/baggage/constants.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/url.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/url.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/enums/EventNames.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/enums/EventNames.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/utils.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/utils.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/version.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/version.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/enums/AttributeNames.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/enums/AttributeNames.ts","node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/index.js","node_modules/@opentelemetry/instrumentation-user-interaction/src/index.ts","node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/instrumentation.js","node_modules/@opentelemetry/instrumentation-user-interaction/src/instrumentation.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/build/esm/index.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/src/index.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/instrumentation.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/src/platform/browser/instrumentation.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/src/instrumentation.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/index.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/index.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/NoopLogger.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/NoopLogger.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/NoopLoggerProvider.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/NoopLoggerProvider.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/ProxyLogger.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/ProxyLogger.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/ProxyLoggerProvider.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/ProxyLoggerProvider.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/api/logs.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/api/logs.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/internal/global-utils.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/internal/global-utils.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/api-logs/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/build/esm/utils.js","node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/instrumentation/src/utils.ts","node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/enums/AttributeNames.js","node_modules/@opentelemetry/instrumentation-user-interaction/src/enums/AttributeNames.ts","node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/version.js","node_modules/@opentelemetry/instrumentation-user-interaction/src/version.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"3a348df4af4559fd\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, disposedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    disposedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'reload') {\n      fullReload();\n    } else if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n        hmrDisposeQueue();\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        let processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import {\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from '@opentelemetry/sdk-trace-base';\nimport { WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport { DocumentLoadInstrumentation } from '@opentelemetry/instrumentation-document-load';\nimport { ZoneContextManager } from '@opentelemetry/context-zone';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\nimport { UserInteractionInstrumentation } from '@opentelemetry/instrumentation-user-interaction';\nimport { MeterProvider } from '@opentelemetry/sdk-metrics';\n/*import { PerformanceObserver } from '@opentelemetry/web';*/\nimport { PrometheusExporter } from '@opentelemetry/exporter-prometheus';\n/*import {consoleMetricExporter} from '@opentelemetry/exporter-prometheus';*/\n\nconst provider = new WebTracerProvider({\n  spanProcessors: [new SimpleSpanProcessor(new ConsoleSpanExporter())],\n});\n\nprovider.register({\n  // Changing default contextManager to use ZoneContextManager - supports asynchronous operations - optional\n  contextManager: new ZoneContextManager(),\n});\n\n// Registering instrumentations\nregisterInstrumentations({\n  instrumentations: [\n      new DocumentLoadInstrumentation(),\n      new UserInteractionInstrumentation(),\n      new XMLHttpRequestInstrumentation()\n  ],\n});\n\n\n/*const { MeterProvider } = require('@opentelemetry/sdk-metrics');\nconst { ConsoleMetricExporter } = require('@opentelemetry/exporter-prometheus');*/\n\nconst meterProvider = new MeterProvider();\n\n// Initialize meter provider (this is where you collect custom metrics)\nconst meter = meterProvider.getMeter('browser-metrics');\n\n\n// Create custom metrics for browser performance\nconst fcpHistogram = meter.createHistogram('fcp', {description: 'First Contentful Paint time',});\nconst lcpHistogram = meter.createHistogram('lcp', {description: 'Largest Contentful Paint time',});\nconst ttiHistogram = meter.createHistogram('tti', {description: 'Time to Interactive',});\n\n// Use the PerformanceObserver API to collect and record browser performance\nif (typeof window !== 'undefined') {\n  // Track First Contentful Paint (FCP)\n  new PerformanceObserver((entryList) => {\n    entryList.getEntriesByName('first-contentful-paint').forEach((entry) => {\n      fcpHistogram.record(entry.startTime);\n    });\n  }).observe({ type: 'paint', buffered: true });\n\n  // Track Largest Contentful Paint (LCP)\n  new PerformanceObserver((entryList) => {\n    entryList.getEntriesByName('largest-contentful-paint').forEach((entry) => {\n      lcpHistogram.record(entry.startTime);\n    });\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n\n  // Track Time to Interactive (TTI)\n  new PerformanceObserver((entryList) => {\n    entryList.getEntriesByName('interactive').forEach((entry) => {\n      ttiHistogram.record(entry.startTime);\n    });\n  }).observe({ type: 'navigation', buffered: true });\n}\n\n// Set up Prometheus exporter\nconst prometheusExporter = new PrometheusExporter({ startServer: true, port: 9464 }, () => {\n  console.log('Prometheus scrape server started on port 9464');\n});\nmeterProvider.addMetricExporter(prometheusExporter);\n\n\n\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Tracer } from './Tracer';\nexport {\n  BasicTracerProvider,\n  EXPORTER_FACTORY,\n  ForceFlushState,\n  PROPAGATOR_FACTORY,\n} from './BasicTracerProvider';\nexport { BatchSpanProcessor, RandomIdGenerator } from './platform';\nexport { ConsoleSpanExporter } from './export/ConsoleSpanExporter';\nexport { InMemorySpanExporter } from './export/InMemorySpanExporter';\nexport { ReadableSpan } from './export/ReadableSpan';\nexport { SimpleSpanProcessor } from './export/SimpleSpanProcessor';\nexport { SpanExporter } from './export/SpanExporter';\nexport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nexport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\nexport { Sampler, SamplingDecision, SamplingResult } from './Sampler';\nexport { Span } from './Span';\nexport { SpanProcessor } from './SpanProcessor';\nexport { TimedEvent } from './TimedEvent';\nexport {\n  BatchSpanProcessorBrowserConfig,\n  BufferConfig,\n  GeneralLimits,\n  SDKRegistrationConfig,\n  SpanLimits,\n  TracerConfig,\n} from './types';\nexport { IdGenerator } from './IdGenerator';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport {\n  ExportResult,\n  ExportResultCode,\n  hrTimeToMicroseconds,\n} from '@opentelemetry/core';\n\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n *\n * NOTE: This {@link SpanExporter} is intended for diagnostics use only, output rendered to the console may change at any time.\n */\n\n/* eslint-disable no-console */\nexport class ConsoleSpanExporter implements SpanExporter {\n  /**\n   * Export spans.\n   * @param spans\n   * @param resultCallback\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    return this._sendSpans(spans, resultCallback);\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  shutdown(): Promise<void> {\n    this._sendSpans([]);\n    return this.forceFlush();\n  }\n\n  /**\n   * Exports any pending spans in exporter\n   */\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  /**\n   * converts span info into more readable format\n   * @param span\n   */\n  private _exportInfo(span: ReadableSpan) {\n    return {\n      resource: {\n        attributes: span.resource.attributes,\n      },\n      instrumentationScope: span.instrumentationLibrary,\n      traceId: span.spanContext().traceId,\n      parentId: span.parentSpanId,\n      traceState: span.spanContext().traceState?.serialize(),\n      name: span.name,\n      id: span.spanContext().spanId,\n      kind: span.kind,\n      timestamp: hrTimeToMicroseconds(span.startTime),\n      duration: hrTimeToMicroseconds(span.duration),\n      attributes: span.attributes,\n      status: span.status,\n      events: span.events,\n      links: span.links,\n    };\n  }\n\n  /**\n   * Showing spans in console\n   * @param spans\n   * @param done\n   */\n  private _sendSpans(\n    spans: ReadableSpan[],\n    done?: (result: ExportResult) => void\n  ): void {\n    for (const span of spans) {\n      console.dir(this._exportInfo(span), { depth: 3 });\n    }\n    if (done) {\n      return done({ code: ExportResultCode.SUCCESS });\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock, Clock } from './common/anchored-clock';\nexport {\n  isAttributeKey,\n  isAttributeValue,\n  sanitizeAttributes,\n} from './common/attributes';\nexport {\n  globalErrorHandler,\n  setGlobalErrorHandler,\n} from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport {\n  addHrTimes,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMicroseconds,\n  hrTimeToMilliseconds,\n  hrTimeToNanoseconds,\n  hrTimeToTimeStamp,\n  isTimeInput,\n  isTimeInputHrTime,\n  millisToHrTime,\n  timeInputToHrTime,\n} from './common/time';\nexport {\n  ErrorHandler,\n  InstrumentationLibrary,\n  InstrumentationScope,\n  ShimWrapped,\n  TimeOriginLegacy,\n} from './common/types';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResult, ExportResultCode } from './ExportResult';\nimport {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n} from './baggage/utils';\nexport const baggageUtils = {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n};\nexport {\n  RandomIdGenerator,\n  SDK_INFO,\n  _globalThis,\n  getEnv,\n  getEnvWithoutDefaults,\n  hexToBase64,\n  otperformance,\n  unrefTimer,\n} from './platform';\nexport {\n  CompositePropagator,\n  CompositePropagatorConfig,\n} from './propagation/composite';\nexport {\n  TRACE_PARENT_HEADER,\n  TRACE_STATE_HEADER,\n  W3CTraceContextPropagator,\n  parseTraceParent,\n} from './trace/W3CTraceContextPropagator';\nexport { IdGenerator } from './trace/IdGenerator';\nexport {\n  RPCMetadata,\n  RPCType,\n  deleteRPCMetadata,\n  getRPCMetadata,\n  setRPCMetadata,\n} from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport {\n  isTracingSuppressed,\n  suppressTracing,\n  unsuppressTracing,\n} from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  DEFAULT_ENVIRONMENT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { BaggageEntry, BaggageEntryMetadata, Baggage } from './baggage/types';\nexport { baggageEntryMetadataFromString } from './baggage/utils';\nexport { Exception } from './common/Exception';\nexport { HrTime, TimeInput } from './common/Time';\nexport { Attributes, AttributeValue } from './common/Attributes';\n\n// Context APIs\nexport { createContextKey, ROOT_CONTEXT } from './context/context';\nexport { Context, ContextManager } from './context/types';\nexport type { ContextAPI } from './api/context';\n\n// Diag APIs\nexport { DiagConsoleLogger } from './diag/consoleLogger';\nexport {\n  DiagLogFunction,\n  DiagLogger,\n  DiagLogLevel,\n  ComponentLoggerOptions,\n  DiagLoggerOptions,\n} from './diag/types';\nexport type { DiagAPI } from './api/diag';\n\n// Metrics APIs\nexport { createNoopMeter } from './metrics/NoopMeter';\nexport { MeterOptions, Meter } from './metrics/Meter';\nexport { MeterProvider } from './metrics/MeterProvider';\nexport {\n  ValueType,\n  Counter,\n  Gauge,\n  Histogram,\n  MetricOptions,\n  Observable,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n  BatchObservableCallback,\n  MetricAdvice,\n  MetricAttributes,\n  MetricAttributeValue,\n  ObservableCallback,\n} from './metrics/Metric';\nexport {\n  BatchObservableResult,\n  ObservableResult,\n} from './metrics/ObservableResult';\nexport type { MetricsAPI } from './api/metrics';\n\n// Propagation APIs\nexport {\n  TextMapPropagator,\n  TextMapSetter,\n  TextMapGetter,\n  defaultTextMapGetter,\n  defaultTextMapSetter,\n} from './propagation/TextMapPropagator';\nexport type { PropagationAPI } from './api/propagation';\n\n// Trace APIs\nexport { SpanAttributes, SpanAttributeValue } from './trace/attributes';\nexport { Link } from './trace/link';\nexport { ProxyTracer, TracerDelegator } from './trace/ProxyTracer';\nexport { ProxyTracerProvider } from './trace/ProxyTracerProvider';\nexport { Sampler } from './trace/Sampler';\nexport { SamplingDecision, SamplingResult } from './trace/SamplingResult';\nexport { SpanContext } from './trace/span_context';\nexport { SpanKind } from './trace/span_kind';\nexport { Span } from './trace/span';\nexport { SpanOptions } from './trace/SpanOptions';\nexport { SpanStatus, SpanStatusCode } from './trace/status';\nexport { TraceFlags } from './trace/trace_flags';\nexport { TraceState } from './trace/trace_state';\nexport { createTraceState } from './trace/internal/utils';\nexport { TracerProvider } from './trace/tracer_provider';\nexport { Tracer } from './trace/tracer';\nexport { TracerOptions } from './trace/tracer_options';\nexport {\n  isSpanContextValid,\n  isValidTraceId,\n  isValidSpanId,\n} from './trace/spancontext-utils';\nexport {\n  INVALID_SPANID,\n  INVALID_TRACEID,\n  INVALID_SPAN_CONTEXT,\n} from './trace/invalid-span-constants';\nexport type { TraceAPI } from './api/trace';\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { context } from './context-api';\nimport { diag } from './diag-api';\nimport { metrics } from './metrics-api';\nimport { propagation } from './propagation-api';\nimport { trace } from './trace-api';\n\n// Named export.\nexport { context, diag, metrics, propagation, trace };\n// Default export.\nexport default {\n  context,\n  diag,\n  metrics,\n  propagation,\n  trace,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nimport { Baggage, BaggageEntry, BaggageEntryMetadata } from './types';\n\nconst diag = DiagAPI.instance();\n\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(\n  entries: Record<string, BaggageEntry> = {}\n): Baggage {\n  return new BaggageImpl(new Map(Object.entries(entries)));\n}\n\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(\n  str: string\n): BaggageEntryMetadata {\n  if (typeof str !== 'string') {\n    diag.error(\n      `Cannot create baggage metadata from unknown type: ${typeof str}`\n    );\n    str = '';\n  }\n\n  return {\n    __TYPE__: baggageEntryMetadataSymbol,\n    toString() {\n      return str;\n    },\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport {\n  ComponentLoggerOptions,\n  DiagLogFunction,\n  DiagLogger,\n  DiagLoggerApi,\n  DiagLogLevel,\n} from '../diag/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\n\nconst API_NAME = 'diag';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nexport class DiagAPI implements DiagLogger, DiagLoggerApi {\n  private static _instance?: DiagAPI;\n\n  /** Get the singleton instance of the DiagAPI API */\n  public static instance(): DiagAPI {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Private internal constructor\n   * @private\n   */\n  private constructor() {\n    function _logProxy(funcName: keyof DiagLogger): DiagLogFunction {\n      return function (...args) {\n        const logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName](...args);\n      };\n    }\n\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    const self = this;\n\n    // DiagAPI specific functions\n\n    const setLogger: DiagLoggerApi['setLogger'] = (\n      logger,\n      optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }\n    ) => {\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        const err = new Error(\n          'Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'\n        );\n        self.error(err.stack ?? err.message);\n        return false;\n      }\n\n      if (typeof optionsOrLogLevel === 'number') {\n        optionsOrLogLevel = {\n          logLevel: optionsOrLogLevel,\n        };\n      }\n\n      const oldLogger = getGlobal('diag');\n      const newLogger = createLogLevelDiagLogger(\n        optionsOrLogLevel.logLevel ?? DiagLogLevel.INFO,\n        logger\n      );\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n        const stack = new Error().stack ?? '<failed to generate stacktrace>';\n        oldLogger.warn(`Current logger will be overwritten from ${stack}`);\n        newLogger.warn(\n          `Current logger will overwrite one already registered from ${stack}`\n        );\n      }\n\n      return registerGlobal('diag', newLogger, self, true);\n    };\n\n    self.setLogger = setLogger;\n\n    self.disable = () => {\n      unregisterGlobal(API_NAME, self);\n    };\n\n    self.createComponentLogger = (options: ComponentLoggerOptions) => {\n      return new DiagComponentLogger(options);\n    };\n\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n\n  public setLogger!: DiagLoggerApi['setLogger'];\n  /**\n   *\n   */\n  public createComponentLogger!: (\n    options: ComponentLoggerOptions\n  ) => DiagLogger;\n\n  // DiagLogger implementation\n  public verbose!: DiagLogFunction;\n  public debug!: DiagLogFunction;\n  public info!: DiagLogFunction;\n  public warn!: DiagLogFunction;\n  public error!: DiagLogFunction;\n\n  /**\n   * Unregister the global logger and return to Noop\n   */\n  public disable!: () => void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobal } from '../internal/global-utils';\nimport { ComponentLoggerOptions, DiagLogger, DiagLogFunction } from './types';\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nexport class DiagComponentLogger implements DiagLogger {\n  private _namespace: string;\n\n  constructor(props: ComponentLoggerOptions) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n\n  public debug(...args: any[]): void {\n    return logProxy('debug', this._namespace, args);\n  }\n\n  public error(...args: any[]): void {\n    return logProxy('error', this._namespace, args);\n  }\n\n  public info(...args: any[]): void {\n    return logProxy('info', this._namespace, args);\n  }\n\n  public warn(...args: any[]): void {\n    return logProxy('warn', this._namespace, args);\n  }\n\n  public verbose(...args: any[]): void {\n    return logProxy('verbose', this._namespace, args);\n  }\n}\n\nfunction logProxy(\n  funcName: keyof DiagLogger,\n  namespace: string,\n  args: any\n): void {\n  const logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n\n  args.unshift(namespace);\n  return logger[funcName](...(args as Parameters<DiagLogFunction>));\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { ContextManager } from '../context/types';\nimport { DiagLogger } from '../diag/types';\nimport { _globalThis } from '../platform';\nimport { TextMapPropagator } from '../propagation/TextMapPropagator';\nimport type { TracerProvider } from '../trace/tracer_provider';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\n\nconst major = VERSION.split('.')[0];\nconst GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\n  `opentelemetry.js.api.${major}`\n);\n\nconst _global = _globalThis as OTelGlobal;\n\nexport function registerGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type,\n  instance: OTelGlobalAPI[Type],\n  diag: DiagLogger,\n  allowOverride = false\n): boolean {\n  const api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = _global[\n    GLOBAL_OPENTELEMETRY_API_KEY\n  ] ?? {\n    version: VERSION,\n  });\n\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    const err = new Error(\n      `@opentelemetry/api: Attempted duplicate registration of API: ${type}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    const err = new Error(\n      `@opentelemetry/api: Registration of version v${api.version} for ${type} does not match previously registered API v${VERSION}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  api[type] = instance;\n  diag.debug(\n    `@opentelemetry/api: Registered a global for ${type} v${VERSION}.`\n  );\n\n  return true;\n}\n\nexport function getGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type\n): OTelGlobalAPI[Type] | undefined {\n  const globalVersion = _global[GLOBAL_OPENTELEMETRY_API_KEY]?.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return _global[GLOBAL_OPENTELEMETRY_API_KEY]?.[type];\n}\n\nexport function unregisterGlobal(type: keyof OTelGlobalAPI, diag: DiagLogger) {\n  diag.debug(\n    `@opentelemetry/api: Unregistering a global for ${type} v${VERSION}.`\n  );\n  const api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n\n  if (api) {\n    delete api[type];\n  }\n}\n\ntype OTelGlobal = {\n  [GLOBAL_OPENTELEMETRY_API_KEY]?: OTelGlobalAPI;\n};\n\ntype OTelGlobalAPI = {\n  version: string;\n\n  diag?: DiagLogger;\n  trace?: TracerProvider;\n  context?: ContextManager;\n  metrics?: MeterProvider;\n  propagation?: TextMapPropagator;\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './globalThis';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : ({} as typeof globalThis);\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.9.0';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../version';\n\nconst re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(\n  ownVersion: string\n): (globalVersion: string) => boolean {\n  const acceptedVersions = new Set<string>([ownVersion]);\n  const rejectedVersions = new Set<string>();\n\n  const myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return () => false;\n  }\n\n  const ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4],\n  };\n\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion: string): boolean {\n      return globalVersion === ownVersion;\n    };\n  }\n\n  function _reject(v: string) {\n    rejectedVersions.add(v);\n    return false;\n  }\n\n  function _accept(v: string) {\n    acceptedVersions.add(v);\n    return true;\n  }\n\n  return function isCompatible(globalVersion: string): boolean {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n\n    const globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n\n    const globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4],\n    };\n\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.major === 0) {\n      if (\n        ownVersionParsed.minor === globalVersionParsed.minor &&\n        ownVersionParsed.patch <= globalVersionParsed.patch\n      ) {\n        return _accept(globalVersion);\n      }\n\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n\n    return _reject(globalVersion);\n  };\n}\n\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport const isCompatible = _makeCompatibilityCheck(VERSION);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogFunction, DiagLogger, DiagLogLevel } from '../types';\n\nexport function createLogLevelDiagLogger(\n  maxLevel: DiagLogLevel,\n  logger: DiagLogger\n): DiagLogger {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n\n  // In case the logger is null or undefined\n  logger = logger || {};\n\n  function _filterFunc(\n    funcName: keyof DiagLogger,\n    theLevel: DiagLogLevel\n  ): DiagLogFunction {\n    const theFunc = logger[funcName];\n\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n\nexport interface DiagLoggerOptions {\n  /**\n   * The {@link DiagLogLevel} used to filter logs sent to the logger.\n   *\n   * @defaultValue DiagLogLevel.INFO\n   */\n  logLevel?: DiagLogLevel;\n\n  /**\n   * Setting this value to `true` will suppress the warning message normally emitted when registering a logger when another logger is already registered.\n   */\n  suppressOverrideMessage?: boolean;\n}\n\nexport interface DiagLoggerApi {\n  /**\n   * Set the global DiagLogger and DiagLogLevel.\n   * If a global diag logger is already set, this will override it.\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param options - A {@link DiagLoggerOptions} object. If not provided, default values will be set.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, options?: DiagLoggerOptions): boolean;\n\n  /**\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param logLevel - The {@link DiagLogLevel} used to filter logs sent to the logger. If not provided it will default to {@link DiagLogLevel.INFO}.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, logLevel?: DiagLogLevel): boolean;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Baggage, BaggageEntry } from '../types';\n\nexport class BaggageImpl implements Baggage {\n  private _entries: Map<string, BaggageEntry>;\n\n  constructor(entries?: Map<string, BaggageEntry>) {\n    this._entries = entries ? new Map(entries) : new Map();\n  }\n\n  getEntry(key: string): BaggageEntry | undefined {\n    const entry = this._entries.get(key);\n    if (!entry) {\n      return undefined;\n    }\n\n    return Object.assign({}, entry);\n  }\n\n  getAllEntries(): [string, BaggageEntry][] {\n    return Array.from(this._entries.entries()).map(([k, v]) => [k, v]);\n  }\n\n  setEntry(key: string, entry: BaggageEntry): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.set(key, entry);\n    return newBaggage;\n  }\n\n  removeEntry(key: string): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.delete(key);\n    return newBaggage;\n  }\n\n  removeEntries(...keys: string[]): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    for (const key of keys) {\n      newBaggage._entries.delete(key);\n    }\n    return newBaggage;\n  }\n\n  clear(): BaggageImpl {\n    return new BaggageImpl();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport const baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogger, DiagLogFunction } from './types';\n\ntype ConsoleMapKeys = 'error' | 'warn' | 'info' | 'debug' | 'trace';\nconst consoleMap: { n: keyof DiagLogger; c: ConsoleMapKeys }[] = [\n  { n: 'error', c: 'error' },\n  { n: 'warn', c: 'warn' },\n  { n: 'info', c: 'info' },\n  { n: 'debug', c: 'debug' },\n  { n: 'verbose', c: 'trace' },\n];\n\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nexport class DiagConsoleLogger implements DiagLogger {\n  constructor() {\n    function _consoleFunc(funcName: ConsoleMapKeys): DiagLogFunction {\n      return function (...args) {\n        if (console) {\n          // Some environments only expose the console when the F12 developer console is open\n          // eslint-disable-next-line no-console\n          let theFunc = console[funcName];\n          if (typeof theFunc !== 'function') {\n            // Not all environments support all functions\n            // eslint-disable-next-line no-console\n            theFunc = console.log;\n          }\n\n          // One last final check\n          if (typeof theFunc === 'function') {\n            return theFunc.apply(console, args);\n          }\n        }\n      };\n    }\n\n    for (let i = 0; i < consoleMap.length; i++) {\n      this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n    }\n  }\n\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  public error!: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  public warn!: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  public info!: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario. Useful scenarios would be to log the execution\n   * order of async operations\n   */\n  public debug!: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  public verbose!: DiagLogFunction;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter } from './Meter';\nimport {\n  BatchObservableCallback,\n  Counter,\n  Gauge,\n  Histogram,\n  MetricAttributes,\n  MetricOptions,\n  Observable,\n  ObservableCallback,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n} from './Metric';\n\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nexport class NoopMeter implements Meter {\n  constructor() {}\n\n  /**\n   * @see {@link Meter.createGauge}\n   */\n  createGauge(_name: string, _options?: MetricOptions): Gauge {\n    return NOOP_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createHistogram}\n   */\n  createHistogram(_name: string, _options?: MetricOptions): Histogram {\n    return NOOP_HISTOGRAM_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createCounter}\n   */\n  createCounter(_name: string, _options?: MetricOptions): Counter {\n    return NOOP_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createUpDownCounter}\n   */\n  createUpDownCounter(_name: string, _options?: MetricOptions): UpDownCounter {\n    return NOOP_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableGauge}\n   */\n  createObservableGauge(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableGauge {\n    return NOOP_OBSERVABLE_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableCounter}\n   */\n  createObservableCounter(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableCounter {\n    return NOOP_OBSERVABLE_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableUpDownCounter}\n   */\n  createObservableUpDownCounter(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableUpDownCounter {\n    return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(\n    _callback: BatchObservableCallback,\n    _observables: Observable[]\n  ): void {}\n\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(_callback: BatchObservableCallback): void {}\n}\n\nexport class NoopMetric {}\n\nexport class NoopCounterMetric extends NoopMetric implements Counter {\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopUpDownCounterMetric\n  extends NoopMetric\n  implements UpDownCounter\n{\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopGaugeMetric extends NoopMetric implements Gauge {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopHistogramMetric extends NoopMetric implements Histogram {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopObservableMetric {\n  addCallback(_callback: ObservableCallback) {}\n\n  removeCallback(_callback: ObservableCallback) {}\n}\n\nexport class NoopObservableCounterMetric\n  extends NoopObservableMetric\n  implements ObservableCounter {}\n\nexport class NoopObservableGaugeMetric\n  extends NoopObservableMetric\n  implements ObservableGauge {}\n\nexport class NoopObservableUpDownCounterMetric\n  extends NoopObservableMetric\n  implements ObservableUpDownCounter {}\n\nexport const NOOP_METER = new NoopMeter();\n\n// Synchronous instruments\nexport const NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport const NOOP_GAUGE_METRIC = new NoopGaugeMetric();\nexport const NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport const NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n\n// Asynchronous instruments\nexport const NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport const NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport const NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC =\n  new NoopObservableUpDownCounterMetric();\n\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter(): Meter {\n  return NOOP_METER;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes, AttributeValue } from '../common/Attributes';\nimport { Context } from '../context/types';\nimport { BatchObservableResult, ObservableResult } from './ObservableResult';\n\n/**\n * Advisory options influencing aggregation configuration parameters.\n * @experimental\n */\nexport interface MetricAdvice {\n  /**\n   * Hint the explicit bucket boundaries for SDK if the metric is been\n   * aggregated with a HistogramAggregator.\n   */\n  explicitBucketBoundaries?: number[];\n}\n\n/**\n * Options needed for metric creation\n */\nexport interface MetricOptions {\n  /**\n   * The description of the Metric.\n   * @default ''\n   */\n  description?: string;\n\n  /**\n   * The unit of the Metric values.\n   * @default ''\n   */\n  unit?: string;\n\n  /**\n   * Indicates the type of the recorded value.\n   * @default {@link ValueType.DOUBLE}\n   */\n  valueType?: ValueType;\n\n  /**\n   * The advice influencing aggregation configuration parameters.\n   * @experimental\n   */\n  advice?: MetricAdvice;\n}\n\n/** The Type of value. It describes how the data is reported. */\nexport enum ValueType {\n  INT,\n  DOUBLE,\n}\n\n/**\n * Counter is the most common synchronous instrument. This instrument supports\n * an `Add(increment)` function for reporting a sum, and is restricted to\n * non-negative increments. The default aggregation is Sum, as for any additive\n * instrument.\n *\n * Example uses for Counter:\n * <ol>\n *   <li> count the number of bytes received. </li>\n *   <li> count the number of requests completed. </li>\n *   <li> count the number of accounts created. </li>\n *   <li> count the number of checkpoints run. </li>\n *   <li> count the number of 5xx errors. </li>\n * <ol>\n */\nexport interface Counter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Increment value of counter by the input. Inputs must not be negative.\n   */\n  add(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface UpDownCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Increment value of counter by the input. Inputs may be negative.\n   */\n  add(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface Gauge<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Records a measurement.\n   */\n  record(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface Histogram<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Records a measurement. Value of the measurement must not be negative.\n   */\n  record(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\n/**\n * @deprecated please use {@link Attributes}\n */\nexport type MetricAttributes = Attributes;\n\n/**\n * @deprecated please use {@link AttributeValue}\n */\nexport type MetricAttributeValue = AttributeValue;\n\n/**\n * The observable callback for Observable instruments.\n */\nexport type ObservableCallback<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = (\n  observableResult: ObservableResult<AttributesTypes>\n) => void | Promise<void>;\n\n/**\n * The observable callback for a batch of Observable instruments.\n */\nexport type BatchObservableCallback<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = (\n  observableResult: BatchObservableResult<AttributesTypes>\n) => void | Promise<void>;\n\nexport interface Observable<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Sets up a function that will be called whenever a metric collection is initiated.\n   *\n   * If the function is already in the list of callbacks for this Observable, the function is not added a second time.\n   */\n  addCallback(callback: ObservableCallback<AttributesTypes>): void;\n\n  /**\n   * Removes a callback previously registered with {@link Observable.addCallback}.\n   */\n  removeCallback(callback: ObservableCallback<AttributesTypes>): void;\n}\n\nexport type ObservableCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\nexport type ObservableUpDownCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\nexport type ObservableGauge<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\n\n/**\n * Injects `Context` into and extracts it from carriers that travel\n * in-band across process boundaries. Encoding is expected to conform to the\n * HTTP Header Field semantics. Values are often encoded as RPC/HTTP request\n * headers.\n *\n * The carrier of propagated data on both the client (injector) and server\n * (extractor) side is usually an object such as http headers. Propagation is\n * usually implemented via library-specific request interceptors, where the\n * client-side injects values and the server-side extracts them.\n */\nexport interface TextMapPropagator<Carrier = any> {\n  /**\n   * Injects values from a given `Context` into a carrier.\n   *\n   * OpenTelemetry defines a common set of format values (TextMapPropagator),\n   * and each has an expected `carrier` type.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param setter an optional {@link TextMapSetter}. If undefined, values will be\n   *     set by direct object assignment.\n   */\n  inject(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier>\n  ): void;\n\n  /**\n   * Given a `Context` and a carrier, extract context values from a\n   * carrier and return a new context, created from the old context, with the\n   * extracted values.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param getter an optional {@link TextMapGetter}. If undefined, keys will be all\n   *     own properties, and keys will be accessed by direct object access.\n   */\n  extract(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier>\n  ): Context;\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  fields(): string[];\n}\n\n/**\n * A setter is specified by the caller to define a specific method\n * to set key/value pairs on the carrier within a propagator.\n */\nexport interface TextMapSetter<Carrier = any> {\n  /**\n   * Callback used to set a key/value pair on an object.\n   *\n   * Should be called by the propagator each time a key/value pair\n   * should be set, and should set that key/value pair on the propagator.\n   *\n   * @param carrier object or class which carries key/value pairs\n   * @param key string key to modify\n   * @param value value to be set to the key on the carrier\n   */\n  set(carrier: Carrier, key: string, value: string): void;\n}\n\n/**\n * A getter is specified by the caller to define a specific method\n * to get the value of a key from a carrier.\n */\nexport interface TextMapGetter<Carrier = any> {\n  /**\n   * Get a list of all keys available on the carrier.\n   *\n   * @param carrier\n   */\n  keys(carrier: Carrier): string[];\n\n  /**\n   * Get the value of a specific key from the carrier.\n   *\n   * @param carrier\n   * @param key\n   */\n  get(carrier: Carrier, key: string): undefined | string | string[];\n}\n\nexport const defaultTextMapGetter: TextMapGetter = {\n  get(carrier, key) {\n    if (carrier == null) {\n      return undefined;\n    }\n    return carrier[key];\n  },\n\n  keys(carrier) {\n    if (carrier == null) {\n      return [];\n    }\n    return Object.keys(carrier);\n  },\n};\n\nexport const defaultTextMapSetter: TextMapSetter = {\n  set(carrier, key, value) {\n    if (carrier == null) {\n      return;\n    }\n\n    carrier[key] = value;\n  },\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { NoopTracer } from './NoopTracer';\nimport { Span } from './span';\nimport { SpanOptions } from './SpanOptions';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER = new NoopTracer();\n\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nexport class ProxyTracer implements Tracer {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Tracer;\n\n  constructor(\n    private _provider: TracerDelegator,\n    public readonly name: string,\n    public readonly version?: string,\n    public readonly options?: TracerOptions\n  ) {}\n\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    return this._getTracer().startSpan(name, options, context);\n  }\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    _name: string,\n    _options: F | SpanOptions,\n    _context?: F | Context,\n    _fn?: F\n  ): ReturnType<F> {\n    const tracer = this._getTracer();\n    return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n  }\n\n  /**\n   * Try to get a tracer from the proxy tracer provider.\n   * If the proxy tracer provider has no delegate, return a noop tracer.\n   */\n  private _getTracer() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n\n    const tracer = this._provider.getDelegateTracer(\n      this.name,\n      this.version,\n      this.options\n    );\n\n    if (!tracer) {\n      return NOOP_TRACER;\n    }\n\n    this._delegate = tracer;\n    return this._delegate;\n  }\n}\n\nexport interface TracerDelegator {\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { Context } from '../context/types';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { isSpanContextValid } from './spancontext-utils';\nimport { SpanOptions } from './SpanOptions';\nimport { SpanContext } from './span_context';\nimport { Tracer } from './tracer';\n\nconst contextApi = ContextAPI.getInstance();\n\n/**\n * No-op implementations of {@link Tracer}.\n */\nexport class NoopTracer implements Tracer {\n  // startSpan starts a noop span.\n  startSpan(\n    name: string,\n    options?: SpanOptions,\n    context = contextApi.active()\n  ): Span {\n    const root = Boolean(options?.root);\n    if (root) {\n      return new NonRecordingSpan();\n    }\n\n    const parentFromContext = context && getSpanContext(context);\n\n    if (\n      isSpanContext(parentFromContext) &&\n      isSpanContextValid(parentFromContext)\n    ) {\n      return new NonRecordingSpan(parentFromContext);\n    } else {\n      return new NonRecordingSpan();\n    }\n  }\n\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    ctx: Context | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | SpanOptions,\n    arg3?: F | Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: SpanOptions | undefined;\n    let ctx: Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as SpanOptions | undefined;\n      ctx = arg3 as Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? contextApi.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = setSpan(parentContext, span);\n\n    return contextApi.with(contextWithSpanSet, fn, undefined, span);\n  }\n}\n\nfunction isSpanContext(spanContext: any): spanContext is SpanContext {\n  return (\n    typeof spanContext === 'object' &&\n    typeof spanContext['spanId'] === 'string' &&\n    typeof spanContext['traceId'] === 'string' &&\n    typeof spanContext['traceFlags'] === 'number'\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { Context, ContextManager } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'context';\nconst NOOP_CONTEXT_MANAGER = new NoopContextManager();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport class ContextAPI {\n  private static _instance?: ContextAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Context API */\n  public static getInstance(): ContextAPI {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  public setGlobalContextManager(contextManager: ContextManager): boolean {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  }\n\n  /**\n   * Get the currently active context\n   */\n  public active(): Context {\n    return this._getContextManager().active();\n  }\n\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return this._getContextManager().with(context, fn, thisArg, ...args);\n  }\n\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  public bind<T>(context: Context, target: T): T {\n    return this._getContextManager().bind(context, target);\n  }\n\n  private _getContextManager(): ContextManager {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  }\n\n  /** Disable and remove the global context manager */\n  public disable() {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROOT_CONTEXT } from './context';\nimport * as types from './types';\n\nexport class NoopContextManager implements types.ContextManager {\n  active(): types.Context {\n    return ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    _context: types.Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return fn.call(thisArg, ...args);\n  }\n\n  bind<T>(_context: types.Context, target: T): T {\n    return target;\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    return this;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n\n/**\n * span key\n */\nconst SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context: Context): Span | undefined {\n  return (context.getValue(SPAN_KEY) as Span) || undefined;\n}\n\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan(): Span | undefined {\n  return getSpan(ContextAPI.getInstance().active());\n}\n\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context: Context, span: Span): Context {\n  return context.setValue(SPAN_KEY, span);\n}\n\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context: Context): Context {\n  return context.deleteValue(SPAN_KEY);\n}\n\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(\n  context: Context,\n  spanContext: SpanContext\n): Context {\n  return setSpan(context, new NonRecordingSpan(spanContext));\n}\n\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context: Context): SpanContext | undefined {\n  return getSpan(context)?.spanContext();\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '../common/Exception';\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes } from './attributes';\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { SpanStatus } from './status';\nimport { Link } from './link';\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nexport class NonRecordingSpan implements Span {\n  constructor(\n    private readonly _spanContext: SpanContext = INVALID_SPAN_CONTEXT\n  ) {}\n\n  // Returns a SpanContext.\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  // By default does nothing\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  // By default does nothing\n  setAttributes(_attributes: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  addEvent(_name: string, _attributes?: SpanAttributes): this {\n    return this;\n  }\n\n  addLink(_link: Link): this {\n    return this;\n  }\n\n  addLinks(_links: Link[]): this {\n    return this;\n  }\n\n  // By default does nothing\n  setStatus(_status: SpanStatus): this {\n    return this;\n  }\n\n  // By default does nothing\n  updateName(_name: string): this {\n    return this;\n  }\n\n  // By default does nothing\n  end(_endTime?: TimeInput): void {}\n\n  // isRecording always returns false for NonRecordingSpan.\n  isRecording(): boolean {\n    return false;\n  }\n\n  // By default does nothing\n  recordException(_exception: Exception, _time?: TimeInput): void {}\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanContext } from './span_context';\nimport { TraceFlags } from './trace_flags';\n\nexport const INVALID_SPANID = '0000000000000000';\nexport const INVALID_TRACEID = '00000000000000000000000000000000';\nexport const INVALID_SPAN_CONTEXT: SpanContext = {\n  traceId: INVALID_TRACEID,\n  spanId: INVALID_SPANID,\n  traceFlags: TraceFlags.NONE,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum TraceFlags {\n  /** Represents no flag set. */\n  NONE = 0x0,\n  /** Bit to represent whether trace is sampled in trace flags. */\n  SAMPLED = 0x1 << 0,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\n\nconst VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nconst VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\n\nexport function isValidTraceId(traceId: string): boolean {\n  return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\n\nexport function isValidSpanId(spanId: string): boolean {\n  return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext: SpanContext): boolean {\n  return (\n    isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId)\n  );\n}\n\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext: SpanContext): Span {\n  return new NonRecordingSpan(spanContext);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tracer } from './tracer';\nimport { TracerProvider } from './tracer_provider';\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nexport class ProxyTracerProvider implements TracerProvider {\n  private _delegate?: TracerProvider;\n\n  /**\n   * Get a {@link ProxyTracer}\n   */\n  getTracer(name: string, version?: string, options?: TracerOptions): Tracer {\n    return (\n      this.getDelegateTracer(name, version, options) ??\n      new ProxyTracer(this, name, version, options)\n    );\n  }\n\n  getDelegate(): TracerProvider {\n    return this._delegate ?? NOOP_TRACER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate tracer provider\n   */\n  setDelegate(delegate: TracerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined {\n    return this._delegate?.getTracer(name, version, options);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopTracer } from './NoopTracer';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\nimport { TracerProvider } from './tracer_provider';\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nexport class NoopTracerProvider implements TracerProvider {\n  getTracer(\n    _name?: string,\n    _version?: string,\n    _options?: TracerOptions\n  ): Tracer {\n    return new NoopTracer();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from './attributes';\nimport { TraceState } from './trace_state';\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum SpanKind {\n  /** Default value. Indicates that the span is used internally. */\n  INTERNAL = 0,\n\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SERVER = 1,\n\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  CLIENT = 2,\n\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  PRODUCER = 3,\n\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  CONSUMER = 4,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport interface SpanStatus {\n  /** The status code of this message. */\n  code: SpanStatusCode;\n  /** A developer-facing error message. */\n  message?: string;\n}\n\n/**\n * An enumeration of status codes.\n */\nexport enum SpanStatusCode {\n  /**\n   * The default status.\n   */\n  UNSET = 0,\n  /**\n   * The operation has been validated by an Application developer or\n   * Operator to have completed successfully.\n   */\n  OK = 1,\n  /**\n   * The operation contains an error.\n   */\n  ERROR = 2,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TraceState } from '../trace_state';\nimport { TraceStateImpl } from './tracestate-impl';\n\nexport function createTraceState(rawTraceState?: string): TraceState {\n  return new TraceStateImpl(rawTraceState);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TraceState } from '../trace_state';\nimport { validateKey, validateValue } from './tracestate-validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceStateImpl implements TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceStateImpl {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceStateImpl {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceStateImpl {\n    const traceState = new TraceStateImpl();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport const context = ContextAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport const diag = DiagAPI.instance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport const metrics = MetricsAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from '../metrics/Meter';\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { NOOP_METER_PROVIDER } from '../metrics/NoopMeterProvider';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'metrics';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nexport class MetricsAPI {\n  private static _instance?: MetricsAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Metrics API */\n  public static getInstance(): MetricsAPI {\n    if (!this._instance) {\n      this._instance = new MetricsAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global meter provider.\n   * Returns true if the meter provider was successfully registered, else false.\n   */\n  public setGlobalMeterProvider(provider: MeterProvider): boolean {\n    return registerGlobal(API_NAME, provider, DiagAPI.instance());\n  }\n\n  /**\n   * Returns the global meter provider.\n   */\n  public getMeterProvider(): MeterProvider {\n    return getGlobal(API_NAME) || NOOP_METER_PROVIDER;\n  }\n\n  /**\n   * Returns a meter from the global meter provider.\n   */\n  public getMeter(\n    name: string,\n    version?: string,\n    options?: MeterOptions\n  ): Meter {\n    return this.getMeterProvider().getMeter(name, version, options);\n  }\n\n  /** Remove the global meter provider */\n  public disable(): void {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './Meter';\nimport { MeterProvider } from './MeterProvider';\nimport { NOOP_METER } from './NoopMeter';\n\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nexport class NoopMeterProvider implements MeterProvider {\n  getMeter(_name: string, _version?: string, _options?: MeterOptions): Meter {\n    return NOOP_METER;\n  }\n}\n\nexport const NOOP_METER_PROVIDER = new NoopMeterProvider();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport const propagation = PropagationAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport {\n  defaultTextMapGetter,\n  defaultTextMapSetter,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '../propagation/TextMapPropagator';\nimport {\n  getBaggage,\n  getActiveBaggage,\n  setBaggage,\n  deleteBaggage,\n} from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'propagation';\nconst NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nexport class PropagationAPI {\n  private static _instance?: PropagationAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Propagator API */\n  public static getInstance(): PropagationAPI {\n    if (!this._instance) {\n      this._instance = new PropagationAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current propagator.\n   *\n   * @returns true if the propagator was successfully registered, else false\n   */\n  public setGlobalPropagator(propagator: TextMapPropagator): boolean {\n    return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n  }\n\n  /**\n   * Inject context into a carrier to be propagated inter-process\n   *\n   * @param context Context carrying tracing data to inject\n   * @param carrier carrier to inject context into\n   * @param setter Function used to set values on the carrier\n   */\n  public inject<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier> = defaultTextMapSetter\n  ): void {\n    return this._getGlobalPropagator().inject(context, carrier, setter);\n  }\n\n  /**\n   * Extract context from a carrier\n   *\n   * @param context Context which the newly created context will inherit from\n   * @param carrier Carrier to extract context from\n   * @param getter Function used to extract keys from a carrier\n   */\n  public extract<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier> = defaultTextMapGetter\n  ): Context {\n    return this._getGlobalPropagator().extract(context, carrier, getter);\n  }\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  public fields(): string[] {\n    return this._getGlobalPropagator().fields();\n  }\n\n  /** Remove the global propagator */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n\n  public createBaggage = createBaggage;\n\n  public getBaggage = getBaggage;\n\n  public getActiveBaggage = getActiveBaggage;\n\n  public setBaggage = setBaggage;\n\n  public deleteBaggage = deleteBaggage;\n\n  private _getGlobalPropagator(): TextMapPropagator {\n    return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { TextMapPropagator } from './TextMapPropagator';\n\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nexport class NoopTextMapPropagator implements TextMapPropagator {\n  /** Noop inject function does nothing */\n  inject(_context: Context, _carrier: unknown): void {}\n  /** Noop extract function does nothing and returns the input context */\n  extract(context: Context, _carrier: unknown): Context {\n    return context;\n  }\n  fields(): string[] {\n    return [];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Baggage } from './types';\n\n/**\n * Baggage key\n */\nconst BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context: Context): Baggage | undefined {\n  return (context.getValue(BAGGAGE_KEY) as Baggage) || undefined;\n}\n\n/**\n * Retrieve the current baggage from the active/current context\n *\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getActiveBaggage(): Baggage | undefined {\n  return getBaggage(ContextAPI.getInstance().active());\n}\n\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context: Context, baggage: Baggage): Context {\n  return context.setValue(BAGGAGE_KEY, baggage);\n}\n\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context: Context): Context {\n  return context.deleteValue(BAGGAGE_KEY);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport const trace = TraceAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport {\n  isSpanContextValid,\n  wrapSpanContext,\n} from '../trace/spancontext-utils';\nimport { Tracer } from '../trace/tracer';\nimport { TracerProvider } from '../trace/tracer_provider';\nimport {\n  deleteSpan,\n  getActiveSpan,\n  getSpan,\n  getSpanContext,\n  setSpan,\n  setSpanContext,\n} from '../trace/context-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'trace';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nexport class TraceAPI {\n  private static _instance?: TraceAPI;\n\n  private _proxyTracerProvider = new ProxyTracerProvider();\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Trace API */\n  public static getInstance(): TraceAPI {\n    if (!this._instance) {\n      this._instance = new TraceAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global tracer.\n   *\n   * @returns true if the tracer provider was successfully registered, else false\n   */\n  public setGlobalTracerProvider(provider: TracerProvider): boolean {\n    const success = registerGlobal(\n      API_NAME,\n      this._proxyTracerProvider,\n      DiagAPI.instance()\n    );\n    if (success) {\n      this._proxyTracerProvider.setDelegate(provider);\n    }\n    return success;\n  }\n\n  /**\n   * Returns the global tracer provider.\n   */\n  public getTracerProvider(): TracerProvider {\n    return getGlobal(API_NAME) || this._proxyTracerProvider;\n  }\n\n  /**\n   * Returns a tracer from the global tracer provider.\n   */\n  public getTracer(name: string, version?: string): Tracer {\n    return this.getTracerProvider().getTracer(name, version);\n  }\n\n  /** Remove the global tracer provider */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n    this._proxyTracerProvider = new ProxyTracerProvider();\n  }\n\n  public wrapSpanContext = wrapSpanContext;\n\n  public isSpanContextValid = isSpanContextValid;\n\n  public deleteSpan = deleteSpan;\n\n  public getSpan = getSpan;\n\n  public getActiveSpan = getActiveSpan;\n\n  public getSpanContext = getSpanContext;\n\n  public setSpan = setSpan;\n\n  public setSpanContext = setSpanContext;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { getEnvWithoutDefaults, getEnv } from './environment';\nexport { _globalThis } from './globalThis';\nexport { hexToBase64 } from './hex-to-base64';\nexport { RandomIdGenerator } from './RandomIdGenerator';\nexport { otperformance } from './performance';\nexport { SDK_INFO } from './sdk-info';\nexport { unrefTimer } from './timer-util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport { ExportResult } from '../ExportResult';\nimport { suppressTracing } from '../trace/suppress-tracing';\n\nexport interface Exporter<T> {\n  export(arg: T, resultCallback: (result: ExportResult) => void): void;\n}\n\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppression of Traces.\n */\nexport function _export<T>(\n  exporter: Exporter<T>,\n  arg: T\n): Promise<ExportResult> {\n  return new Promise(resolve => {\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      exporter.export(arg, (result: ExportResult) => {\n        resolve(result);\n      });\n    });\n  });\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, TraceFlags } from '@opentelemetry/api';\nimport {\n  internal,\n  ExportResultCode,\n  globalErrorHandler,\n  BindOnceFuture,\n  ExportResult,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\nimport { Resource } from '@opentelemetry/resources';\n\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n *\n * NOTE: This {@link SpanProcessor} exports every ended span individually instead of batching spans together, which causes significant performance overhead with most exporters. For production use, please consider using the {@link BatchSpanProcessor} instead.\n */\nexport class SimpleSpanProcessor implements SpanProcessor {\n  private _shutdownOnce: BindOnceFuture<void>;\n  private _unresolvedExports: Set<Promise<void>>;\n\n  constructor(private readonly _exporter: SpanExporter) {\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n    this._unresolvedExports = new Set<Promise<void>>();\n  }\n\n  async forceFlush(): Promise<void> {\n    // await unresolved resources before resolving\n    await Promise.all(Array.from(this._unresolvedExports));\n    if (this._exporter.forceFlush) {\n      await this._exporter.forceFlush();\n    }\n  }\n\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    const doExport = () =>\n      internal\n        ._export(this._exporter, [span])\n        .then((result: ExportResult) => {\n          if (result.code !== ExportResultCode.SUCCESS) {\n            globalErrorHandler(\n              result.error ??\n                new Error(\n                  `SimpleSpanProcessor: span export failed (status ${result})`\n                )\n            );\n          }\n        })\n        .catch(error => {\n          globalErrorHandler(error);\n        });\n\n    // Avoid scheduling a promise to make the behavior more predictable and easier to test\n    if (span.resource.asyncAttributesPending) {\n      const exportPromise = (span.resource as Resource)\n        .waitForAsyncAttributes?.()\n        .then(\n          () => {\n            if (exportPromise != null) {\n              this._unresolvedExports.delete(exportPromise);\n            }\n            return doExport();\n          },\n          err => globalErrorHandler(err)\n        );\n\n      // store the unresolved exports\n      if (exportPromise != null) {\n        this._unresolvedExports.add(exportPromise);\n      }\n    } else {\n      void doExport();\n    }\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown(): Promise<void> {\n    return this._exporter.shutdown();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { WebTracerConfig, WebTracerProvider } from './WebTracerProvider';\nexport { StackContextManager } from './StackContextManager';\nexport { PerformanceTimingNames } from './enums/PerformanceTimingNames';\nexport {\n  PerformanceEntries,\n  PerformanceLegacy,\n  PerformanceResourceTimingInfo,\n  PropagateTraceHeaderCorsUrls,\n} from './types';\nexport {\n  URLLike,\n  addSpanNetworkEvent,\n  addSpanNetworkEvents,\n  getElementXPath,\n  getResource,\n  hasKey,\n  normalizeUrl,\n  parseUrl,\n  shouldPropagateTraceHeaders,\n  sortResources,\n} from './utils';\nexport {\n  AlwaysOffSampler,\n  AlwaysOnSampler,\n  BasicTracerProvider,\n  BatchSpanProcessor,\n  BatchSpanProcessorBrowserConfig,\n  BufferConfig,\n  ConsoleSpanExporter,\n  EXPORTER_FACTORY,\n  ForceFlushState,\n  GeneralLimits,\n  IdGenerator,\n  InMemorySpanExporter,\n  NoopSpanProcessor,\n  ParentBasedSampler,\n  PROPAGATOR_FACTORY,\n  RandomIdGenerator,\n  ReadableSpan,\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  SDKRegistrationConfig,\n  SimpleSpanProcessor,\n  Span,\n  SpanExporter,\n  SpanLimits,\n  SpanProcessor,\n  TimedEvent,\n  TraceIdRatioBasedSampler,\n  Tracer,\n  TracerConfig,\n} from '@opentelemetry/sdk-trace-base';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BasicTracerProvider,\n  SDKRegistrationConfig,\n  TracerConfig,\n} from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n\n/**\n * WebTracerConfig provides an interface for configuring a Web Tracer.\n */\nexport type WebTracerConfig = TracerConfig;\n\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nexport class WebTracerProvider extends BasicTracerProvider {\n  /**\n   * Constructs a new Tracer instance.\n   * @param config Web Tracer config\n   */\n  constructor(config: WebTracerConfig = {}) {\n    super(config);\n\n    if ((config as SDKRegistrationConfig).contextManager) {\n      throw (\n        'contextManager should be defined in register method not in' +\n        ' constructor'\n      );\n    }\n    if ((config as SDKRegistrationConfig).propagator) {\n      throw 'propagator should be defined in register method not in constructor';\n    }\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  override register(config: SDKRegistrationConfig = {}): void {\n    if (config.contextManager === undefined) {\n      config.contextManager = new StackContextManager();\n    }\n    if (config.contextManager) {\n      config.contextManager.enable();\n    }\n\n    super.register(config);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Tracer } from './Tracer';\nexport {\n  BasicTracerProvider,\n  EXPORTER_FACTORY,\n  ForceFlushState,\n  PROPAGATOR_FACTORY,\n} from './BasicTracerProvider';\nexport { BatchSpanProcessor, RandomIdGenerator } from './platform';\nexport { ConsoleSpanExporter } from './export/ConsoleSpanExporter';\nexport { InMemorySpanExporter } from './export/InMemorySpanExporter';\nexport { ReadableSpan } from './export/ReadableSpan';\nexport { SimpleSpanProcessor } from './export/SimpleSpanProcessor';\nexport { SpanExporter } from './export/SpanExporter';\nexport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nexport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\nexport { Sampler, SamplingDecision, SamplingResult } from './Sampler';\nexport { Span } from './Span';\nexport { SpanProcessor } from './SpanProcessor';\nexport { TimedEvent } from './TimedEvent';\nexport {\n  BatchSpanProcessorBrowserConfig,\n  BufferConfig,\n  GeneralLimits,\n  SDKRegistrationConfig,\n  SpanLimits,\n  TracerConfig,\n} from './types';\nexport { IdGenerator } from './IdGenerator';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationLibrary,\n  sanitizeAttributes,\n  isTracingSuppressed,\n} from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport { BasicTracerProvider } from './BasicTracerProvider';\nimport { Span } from './Span';\nimport { GeneralLimits, SpanLimits, TracerConfig } from './types';\nimport { mergeConfig } from './utility';\nimport { SpanProcessor } from './SpanProcessor';\nimport { Sampler } from './Sampler';\nimport { IdGenerator } from './IdGenerator';\nimport { RandomIdGenerator } from './platform';\n\n/**\n * This class represents a basic tracer.\n */\nexport class Tracer implements api.Tracer {\n  private readonly _sampler: Sampler;\n  private readonly _generalLimits: GeneralLimits;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _idGenerator: IdGenerator;\n  readonly resource: IResource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  /**\n   * Constructs a new Tracer instance.\n   */\n  constructor(\n    instrumentationLibrary: InstrumentationLibrary,\n    config: TracerConfig,\n    private _tracerProvider: BasicTracerProvider\n  ) {\n    const localConfig = mergeConfig(config);\n    this._sampler = localConfig.sampler;\n    this._generalLimits = localConfig.generalLimits;\n    this._spanLimits = localConfig.spanLimits;\n    this._idGenerator = config.idGenerator || new RandomIdGenerator();\n    this.resource = _tracerProvider.resource;\n    this.instrumentationLibrary = instrumentationLibrary;\n  }\n\n  /**\n   * Starts a new Span or returns the default NoopSpan based on the sampling\n   * decision.\n   */\n  startSpan(\n    name: string,\n    options: api.SpanOptions = {},\n    context = api.context.active()\n  ): api.Span {\n    // remove span from context in case a root span is requested via options\n    if (options.root) {\n      context = api.trace.deleteSpan(context);\n    }\n    const parentSpan = api.trace.getSpan(context);\n\n    if (isTracingSuppressed(context)) {\n      api.diag.debug('Instrumentation suppressed, returning Noop Span');\n      const nonRecordingSpan = api.trace.wrapSpanContext(\n        api.INVALID_SPAN_CONTEXT\n      );\n      return nonRecordingSpan;\n    }\n\n    const parentSpanContext = parentSpan?.spanContext();\n    const spanId = this._idGenerator.generateSpanId();\n    let traceId;\n    let traceState;\n    let parentSpanId;\n    if (\n      !parentSpanContext ||\n      !api.trace.isSpanContextValid(parentSpanContext)\n    ) {\n      // New root span.\n      traceId = this._idGenerator.generateTraceId();\n    } else {\n      // New child span.\n      traceId = parentSpanContext.traceId;\n      traceState = parentSpanContext.traceState;\n      parentSpanId = parentSpanContext.spanId;\n    }\n\n    const spanKind = options.kind ?? api.SpanKind.INTERNAL;\n    const links = (options.links ?? []).map(link => {\n      return {\n        context: link.context,\n        attributes: sanitizeAttributes(link.attributes),\n      };\n    });\n    const attributes = sanitizeAttributes(options.attributes);\n    // make sampling decision\n    const samplingResult = this._sampler.shouldSample(\n      context,\n      traceId,\n      name,\n      spanKind,\n      attributes,\n      links\n    );\n\n    traceState = samplingResult.traceState ?? traceState;\n\n    const traceFlags =\n      samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n        ? api.TraceFlags.SAMPLED\n        : api.TraceFlags.NONE;\n    const spanContext = { traceId, spanId, traceFlags, traceState };\n    if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n      api.diag.debug(\n        'Recording is off, propagating context in a non-recording span'\n      );\n      const nonRecordingSpan = api.trace.wrapSpanContext(spanContext);\n      return nonRecordingSpan;\n    }\n\n    // Set initial span attributes. The attributes object may have been mutated\n    // by the sampler, so we sanitize the merged attributes before setting them.\n    const initAttributes = sanitizeAttributes(\n      Object.assign(attributes, samplingResult.attributes)\n    );\n\n    const span = new Span(\n      this,\n      context,\n      name,\n      spanContext,\n      spanKind,\n      parentSpanId,\n      links,\n      options.startTime,\n      undefined,\n      initAttributes\n    );\n    return span;\n  }\n\n  /**\n   * Starts a new {@link Span} and calls the given function passing it the\n   * created span as first argument.\n   * Additionally the new span gets set in context and this context is activated\n   * for the duration of the function call.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @param fn function called in the context of the span and receives the newly created span as an argument\n   * @returns return value of fn\n   * @example\n   *   const something = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       span.setStatus({code: SpanStatusCode.OK});\n   *       return something;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     } finally {\n   *       span.end();\n   *     }\n   *   });\n   * @example\n   *   const span = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       return span;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     }\n   *   });\n   *   do some more work\n   *   span.end();\n   */\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    ctx: api.Context,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | api.SpanOptions,\n    arg3?: F | api.Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: api.SpanOptions | undefined;\n    let ctx: api.Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as api.SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as api.SpanOptions | undefined;\n      ctx = arg3 as api.Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? api.context.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = api.trace.setSpan(parentContext, span);\n\n    return api.context.with(contextWithSpanSet, fn, undefined, span);\n  }\n\n  /** Returns the active {@link GeneralLimits}. */\n  getGeneralLimits(): GeneralLimits {\n    return this._generalLimits;\n  }\n\n  /** Returns the active {@link SpanLimits}. */\n  getSpanLimits(): SpanLimits {\n    return this._spanLimits;\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this._tracerProvider.getActiveSpanProcessor();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock, Clock } from './common/anchored-clock';\nexport {\n  isAttributeKey,\n  isAttributeValue,\n  sanitizeAttributes,\n} from './common/attributes';\nexport {\n  globalErrorHandler,\n  setGlobalErrorHandler,\n} from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport {\n  addHrTimes,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMicroseconds,\n  hrTimeToMilliseconds,\n  hrTimeToNanoseconds,\n  hrTimeToTimeStamp,\n  isTimeInput,\n  isTimeInputHrTime,\n  millisToHrTime,\n  timeInputToHrTime,\n} from './common/time';\nexport {\n  ErrorHandler,\n  InstrumentationLibrary,\n  InstrumentationScope,\n  ShimWrapped,\n  TimeOriginLegacy,\n} from './common/types';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResult, ExportResultCode } from './ExportResult';\nimport {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n} from './baggage/utils';\nexport const baggageUtils = {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n};\nexport {\n  RandomIdGenerator,\n  SDK_INFO,\n  _globalThis,\n  getEnv,\n  getEnvWithoutDefaults,\n  hexToBase64,\n  otperformance,\n  unrefTimer,\n} from './platform';\nexport {\n  CompositePropagator,\n  CompositePropagatorConfig,\n} from './propagation/composite';\nexport {\n  TRACE_PARENT_HEADER,\n  TRACE_STATE_HEADER,\n  W3CTraceContextPropagator,\n  parseTraceParent,\n} from './trace/W3CTraceContextPropagator';\nexport { IdGenerator } from './trace/IdGenerator';\nexport {\n  RPCMetadata,\n  RPCType,\n  deleteRPCMetadata,\n  getRPCMetadata,\n  setRPCMetadata,\n} from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport {\n  isTracingSuppressed,\n  suppressTracing,\n  unsuppressTracing,\n} from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  DEFAULT_ENVIRONMENT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS,\n} from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue)\n      ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n      : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Clock {\n  /**\n   * Return the current time in milliseconds from some epoch such as the Unix epoch or process start\n   */\n  now(): number;\n}\n\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nexport class AnchoredClock implements Clock {\n  private _monotonicClock: Clock;\n  private _epochMillis: number;\n  private _performanceMillis: number;\n\n  /**\n   * Create a new AnchoredClock anchored to the current time returned by systemClock.\n   *\n   * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n   * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n   */\n  public constructor(systemClock: Clock, monotonicClock: Clock) {\n    this._monotonicClock = monotonicClock;\n    this._epochMillis = systemClock.now();\n    this._performanceMillis = monotonicClock.now();\n  }\n\n  /**\n   * Returns the current time by adding the number of milliseconds since the\n   * AnchoredClock was created to the creation epoch time\n   */\n  public now(): number {\n    const delta = this._monotonicClock.now() - this._performanceMillis;\n    return this._epochMillis + delta;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substring(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { getEnvWithoutDefaults, getEnv } from './environment';\nexport { _globalThis } from './globalThis';\nexport { hexToBase64 } from './hex-to-base64';\nexport { RandomIdGenerator } from './RandomIdGenerator';\nexport { otperformance } from './performance';\nexport { SDK_INFO } from './sdk-info';\nexport { unrefTimer } from './timer-util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(\n    _globalThis as typeof globalThis & RAW_ENVIRONMENT\n  );\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n\nexport function getEnvWithoutDefaults(): ENVIRONMENT {\n  return parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'] as const;\n\ntype ENVIRONMENT_BOOLEANS = {\n  [K in (typeof ENVIRONMENT_BOOLEAN_KEYS)[number]]?: boolean;\n};\n\nfunction isEnvVarABoolean(key: unknown): key is keyof ENVIRONMENT_BOOLEANS {\n  return (\n    ENVIRONMENT_BOOLEAN_KEYS.indexOf(key as keyof ENVIRONMENT_BOOLEANS) > -1\n  );\n}\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_BLRP_EXPORT_TIMEOUT',\n  'OTEL_BLRP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BLRP_MAX_QUEUE_SIZE',\n  'OTEL_BLRP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_LOGS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in (typeof ENVIRONMENT_NUMBERS_KEYS)[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n  'OTEL_SEMCONV_STABILITY_OPT_IN',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in (typeof ENVIRONMENT_LISTS_KEYS)[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_LOGS_EXPORTER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE?: string;\n} & ENVIRONMENT_BOOLEANS &\n  ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = 128;\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  OTEL_SDK_DISABLED: false,\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_BLRP_EXPORT_TIMEOUT: 30000,\n  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BLRP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  OTEL_TRACES_EXPORTER: '',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_LOGS_EXPORTER: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n  OTEL_SEMCONV_STABILITY_OPT_IN: [],\n};\n\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(\n  key: keyof ENVIRONMENT_BOOLEANS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  if (typeof values[key] === 'undefined') {\n    return;\n  }\n\n  const value = String(values[key]);\n  // support case-insensitive \"true\"\n  environment[key] = value.toLowerCase() === 'true';\n}\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarABoolean(key)) {\n          parseBoolean(key, environment, values);\n        } else if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n      ? self\n      : typeof window === 'object'\n        ? window\n        : typeof global === 'object'\n          ? global\n          : ({} as typeof globalThis);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hexToBinary } from '../../common/hex-to-binary';\n\nexport function hexToBase64(hexStr: string): string {\n  return btoa(String.fromCharCode(...hexToBinary(hexStr)));\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction intValue(charCode: number): number {\n  // 0-9\n  if (charCode >= 48 && charCode <= 57) {\n    return charCode - 48;\n  }\n\n  // a-f\n  if (charCode >= 97 && charCode <= 102) {\n    return charCode - 87;\n  }\n\n  // A-F\n  return charCode - 55;\n}\n\nexport function hexToBinary(hexStr: string): Uint8Array {\n  const buf = new Uint8Array(hexStr.length / 2);\n  let offset = 0;\n\n  for (let i = 0; i < hexStr.length; i += 2) {\n    const hi = intValue(hexStr.charCodeAt(i));\n    const lo = intValue(hexStr.charCodeAt(i + 1));\n    buf[offset++] = (hi << 4) | lo;\n  }\n\n  return buf;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IdGenerator } from '../../trace/IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_PROCESS_RUNTIME_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SEMRESATTRS_TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SEMRESATTRS_PROCESS_RUNTIME_NAME]: 'browser',\n  [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]: TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  [SEMRESATTRS_TELEMETRY_SDK_VERSION]: VERSION,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.29.0';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-restricted-syntax --\n * These re-exports are only of constants, only two-levels deep, and\n * should not cause problems for tree-shakers.\n */\n\n// Deprecated. These are kept around for compatibility purposes\nexport * from './trace';\nexport * from './resource';\n\n// Use these instead\nexport * from './stable_attributes';\nexport * from './stable_metrics';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-restricted-syntax --\n * These re-exports are only of constants, only one-level deep at this point,\n * and should not cause problems for tree-shakers.\n */\nexport * from './SemanticAttributes';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createConstMap } from '../internal/utils';\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticAttributes\n//----------------------------------------------------------------------------------------------------------\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\nconst TMP_DB_SYSTEM = 'db.system';\nconst TMP_DB_CONNECTION_STRING = 'db.connection_string';\nconst TMP_DB_USER = 'db.user';\nconst TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\nconst TMP_DB_NAME = 'db.name';\nconst TMP_DB_STATEMENT = 'db.statement';\nconst TMP_DB_OPERATION = 'db.operation';\nconst TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\nconst TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';\nconst TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\nconst TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\nconst TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';\nconst TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\nconst TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  'db.cassandra.speculative_execution_count';\nconst TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\nconst TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\nconst TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';\nconst TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\nconst TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\nconst TMP_DB_SQL_TABLE = 'db.sql.table';\nconst TMP_EXCEPTION_TYPE = 'exception.type';\nconst TMP_EXCEPTION_MESSAGE = 'exception.message';\nconst TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';\nconst TMP_EXCEPTION_ESCAPED = 'exception.escaped';\nconst TMP_FAAS_TRIGGER = 'faas.trigger';\nconst TMP_FAAS_EXECUTION = 'faas.execution';\nconst TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\nconst TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\nconst TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';\nconst TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';\nconst TMP_FAAS_TIME = 'faas.time';\nconst TMP_FAAS_CRON = 'faas.cron';\nconst TMP_FAAS_COLDSTART = 'faas.coldstart';\nconst TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';\nconst TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\nconst TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';\nconst TMP_NET_TRANSPORT = 'net.transport';\nconst TMP_NET_PEER_IP = 'net.peer.ip';\nconst TMP_NET_PEER_PORT = 'net.peer.port';\nconst TMP_NET_PEER_NAME = 'net.peer.name';\nconst TMP_NET_HOST_IP = 'net.host.ip';\nconst TMP_NET_HOST_PORT = 'net.host.port';\nconst TMP_NET_HOST_NAME = 'net.host.name';\nconst TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';\nconst TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';\nconst TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';\nconst TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';\nconst TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';\nconst TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';\nconst TMP_PEER_SERVICE = 'peer.service';\nconst TMP_ENDUSER_ID = 'enduser.id';\nconst TMP_ENDUSER_ROLE = 'enduser.role';\nconst TMP_ENDUSER_SCOPE = 'enduser.scope';\nconst TMP_THREAD_ID = 'thread.id';\nconst TMP_THREAD_NAME = 'thread.name';\nconst TMP_CODE_FUNCTION = 'code.function';\nconst TMP_CODE_NAMESPACE = 'code.namespace';\nconst TMP_CODE_FILEPATH = 'code.filepath';\nconst TMP_CODE_LINENO = 'code.lineno';\nconst TMP_HTTP_METHOD = 'http.method';\nconst TMP_HTTP_URL = 'http.url';\nconst TMP_HTTP_TARGET = 'http.target';\nconst TMP_HTTP_HOST = 'http.host';\nconst TMP_HTTP_SCHEME = 'http.scheme';\nconst TMP_HTTP_STATUS_CODE = 'http.status_code';\nconst TMP_HTTP_FLAVOR = 'http.flavor';\nconst TMP_HTTP_USER_AGENT = 'http.user_agent';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.request_content_length_uncompressed';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.response_content_length_uncompressed';\nconst TMP_HTTP_SERVER_NAME = 'http.server_name';\nconst TMP_HTTP_ROUTE = 'http.route';\nconst TMP_HTTP_CLIENT_IP = 'http.client_ip';\nconst TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\nconst TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\nconst TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  'aws.dynamodb.item_collection_metrics';\nconst TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  'aws.dynamodb.provisioned_read_capacity';\nconst TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  'aws.dynamodb.provisioned_write_capacity';\nconst TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\nconst TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\nconst TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\nconst TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\nconst TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\nconst TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  'aws.dynamodb.global_secondary_indexes';\nconst TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  'aws.dynamodb.local_secondary_indexes';\nconst TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  'aws.dynamodb.exclusive_start_table';\nconst TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\nconst TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\nconst TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\nconst TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\nconst TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\nconst TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\nconst TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  'aws.dynamodb.attribute_definitions';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  'aws.dynamodb.global_secondary_index_updates';\nconst TMP_MESSAGING_SYSTEM = 'messaging.system';\nconst TMP_MESSAGING_DESTINATION = 'messaging.destination';\nconst TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';\nconst TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';\nconst TMP_MESSAGING_PROTOCOL = 'messaging.protocol';\nconst TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';\nconst TMP_MESSAGING_URL = 'messaging.url';\nconst TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';\nconst TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  'messaging.message_payload_size_bytes';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  'messaging.message_payload_compressed_size_bytes';\nconst TMP_MESSAGING_OPERATION = 'messaging.operation';\nconst TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';\nconst TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';\nconst TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';\nconst TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';\nconst TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';\nconst TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';\nconst TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';\nconst TMP_RPC_SYSTEM = 'rpc.system';\nconst TMP_RPC_SERVICE = 'rpc.service';\nconst TMP_RPC_METHOD = 'rpc.method';\nconst TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\nconst TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\nconst TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\nconst TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\nconst TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\nconst TMP_MESSAGE_TYPE = 'message.type';\nconst TMP_MESSAGE_ID = 'message.id';\nconst TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\nconst TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * Note: This may be different from `faas.id` if an alias is involved.\n *\n * @deprecated Use ATTR_AWS_LAMBDA_INVOKED_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use ATTR_DB_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;\n\n/**\n * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n *\n * @deprecated Use ATTR_DB_CONNECTION_STRING in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;\n\n/**\n * Username for accessing the database.\n *\n * @deprecated Use ATTR_DB_USER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_USER = TMP_DB_USER;\n\n/**\n * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n *\n * @deprecated Use ATTR_DB_JDBC_DRIVER_CLASSNAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;\n\n/**\n * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n *\n * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_NAME = TMP_DB_NAME;\n\n/**\n * The database statement being executed.\n *\n * Note: The value may be sanitized to exclude sensitive information.\n *\n * @deprecated Use ATTR_DB_STATEMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;\n\n/**\n * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n *\n * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n *\n * @deprecated Use ATTR_DB_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;\n\n/**\n * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n *\n * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n *\n * @deprecated Use ATTR_DB_MSSQL_INSTANCE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;\n\n/**\n * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;\n\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_PAGE_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL =\n  TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;\n\n/**\n * Whether or not the query is idempotent.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_IDEMPOTENCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;\n\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;\n\n/**\n * The ID of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_ID =\n  TMP_DB_CASSANDRA_COORDINATOR_ID;\n\n/**\n * The data center of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_DC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_DC =\n  TMP_DB_CASSANDRA_COORDINATOR_DC;\n\n/**\n * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;\n\n/**\n * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_REDIS_DATABASE_INDEX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;\n\n/**\n * The collection being accessed within the database stated in `db.name`.\n *\n * @deprecated Use ATTR_DB_MONGODB_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_SQL_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;\n\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @deprecated Use ATTR_EXCEPTION_TYPE.\n */\nexport const SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;\n\n/**\n * The exception message.\n *\n * @deprecated Use ATTR_EXCEPTION_MESSAGE.\n */\nexport const SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;\n\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @deprecated Use ATTR_EXCEPTION_STACKTRACE.\n */\nexport const SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;\n\n/**\n* SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n*\n* Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n*\n* @deprecated Use ATTR_EXCEPTION_ESCAPED.\n*/\nexport const SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use ATTR_FAAS_TRIGGER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;\n\n/**\n * The execution ID of the current function execution.\n *\n * @deprecated Use ATTR_FAAS_INVOCATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;\n\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;\n\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;\n\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;\n\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;\n\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @deprecated Use ATTR_FAAS_CRON in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;\n\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @deprecated Use ATTR_FAAS_COLDSTART in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;\n\n/**\n * The name of the invoked function.\n *\n * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;\n\n/**\n * The cloud region of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use ATTR_NET_TRANSPORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;\n\n/**\n * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n *\n * @deprecated Use ATTR_NET_PEER_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;\n\n/**\n * Remote port number.\n *\n * @deprecated Use ATTR_NET_PEER_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;\n\n/**\n * Remote hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_PEER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;\n\n/**\n * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n *\n * @deprecated Use ATTR_NET_HOST_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;\n\n/**\n * Like `net.peer.port` but for the host port.\n *\n * @deprecated Use ATTR_NET_HOST_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;\n\n/**\n * Local hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_SUBTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_SUBTYPE =\n  TMP_NET_HOST_CONNECTION_SUBTYPE;\n\n/**\n * The name of the mobile carrier.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;\n\n/**\n * The mobile carrier country code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MCC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;\n\n/**\n * The mobile carrier network code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MNC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;\n\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_ICC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;\n\n/**\n * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @deprecated Use ATTR_PEER_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;\n\n/**\n * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n *\n * @deprecated Use ATTR_ENDUSER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;\n\n/**\n * Actual/assumed role the client is making the request under extracted from token or application security context.\n *\n * @deprecated Use ATTR_ENDUSER_ROLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;\n\n/**\n * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n *\n * @deprecated Use ATTR_ENDUSER_SCOPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;\n\n/**\n * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n *\n * @deprecated Use ATTR_THREAD_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_THREAD_ID = TMP_THREAD_ID;\n\n/**\n * Current thread name.\n *\n * @deprecated Use ATTR_THREAD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;\n\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n *\n * @deprecated Use ATTR_CODE_FUNCTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;\n\n/**\n * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n *\n * @deprecated Use ATTR_CODE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;\n\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @deprecated Use ATTR_CODE_FILEPATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;\n\n/**\n * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n *\n * @deprecated Use ATTR_CODE_LINENO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;\n\n/**\n * HTTP request method.\n *\n * @deprecated Use ATTR_HTTP_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;\n\n/**\n * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n *\n * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n *\n * @deprecated Use ATTR_HTTP_URL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_URL = TMP_HTTP_URL;\n\n/**\n * The full request target as passed in a HTTP request line or equivalent.\n *\n * @deprecated Use ATTR_HTTP_TARGET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;\n\n/**\n * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n *\n * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n *\n * @deprecated Use ATTR_HTTP_HOST in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;\n\n/**\n * The URI scheme identifying the used protocol.\n *\n * @deprecated Use ATTR_HTTP_SCHEME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;\n\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @deprecated Use ATTR_HTTP_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use ATTR_HTTP_FLAVOR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;\n\n/**\n * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n *\n * @deprecated Use ATTR_HTTP_USER_AGENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;\n\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n *\n * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n *\n * @deprecated Use ATTR_HTTP_SERVER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;\n\n/**\n * The matched route (path template).\n *\n * @deprecated Use ATTR_HTTP_ROUTE.\n */\nexport const SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;\n\n/**\n* The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n*\n* Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n*\n* @deprecated Use ATTR_HTTP_CLIENT_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;\n\n/**\n * The keys in the `RequestItems` object field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;\n\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY =\n  TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;\n\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;\n\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;\n\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;\n\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSISTENT_READ in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ =\n  TMP_AWS_DYNAMODB_CONSISTENT_READ;\n\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROJECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;\n\n/**\n * The value of the `Limit` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LIMIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;\n\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET =\n  TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;\n\n/**\n * The value of the `IndexName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_INDEX_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;\n\n/**\n * The value of the `Select` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SELECT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;\n\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;\n\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;\n\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;\n\n/**\n * The the number of items in the `TableNames` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;\n\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCAN_FORWARD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;\n\n/**\n * The value of the `Segment` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SEGMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;\n\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS =\n  TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;\n\n/**\n * The value of the `Count` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;\n\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCANNED_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT =\n  TMP_AWS_DYNAMODB_SCANNED_COUNT;\n\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;\n\n/**\n * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;\n\n/**\n * A string identifying the messaging system.\n *\n * @deprecated Use ATTR_MESSAGING_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;\n\n/**\n * The message destination name. This might be equal to the span name but is required nevertheless.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const SEMATTRS_MESSAGING_DESTINATION_KIND =\n  TMP_MESSAGING_DESTINATION_KIND;\n\n/**\n * A boolean that is true if the message destination is temporary.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_TEMPORARY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_TEMP_DESTINATION =\n  TMP_MESSAGING_TEMP_DESTINATION;\n\n/**\n * The name of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_NAME.\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;\n\n/**\n * The version of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_VERSION.\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL_VERSION =\n  TMP_MESSAGING_PROTOCOL_VERSION;\n\n/**\n * Connection string.\n *\n * @deprecated Removed in semconv v1.17.0.\n */\nexport const SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;\n\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;\n\n/**\n * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_CONVERSATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;\n\n/**\n * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_BODY_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;\n\n/**\n * The compressed size of the message payload in bytes.\n *\n * @deprecated Removed in semconv v1.22.0.\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use ATTR_MESSAGING_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;\n\n/**\n * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n *\n * @deprecated Removed in semconv v1.21.0.\n */\nexport const SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;\n\n/**\n * RabbitMQ message routing key.\n *\n * @deprecated Use ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY =\n  TMP_MESSAGING_RABBITMQ_ROUTING_KEY;\n\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n *\n * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY =\n  TMP_MESSAGING_KAFKA_MESSAGE_KEY;\n\n/**\n * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_CONSUMER_GROUP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP =\n  TMP_MESSAGING_KAFKA_CONSUMER_GROUP;\n\n/**\n * Client Id for the Consumer or Producer that is handling the message.\n *\n * @deprecated Use ATTR_MESSAGING_CLIENT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;\n\n/**\n * Partition the message is sent to.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;\n\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;\n\n/**\n * A string identifying the remoting system.\n *\n * @deprecated Use ATTR_RPC_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;\n\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @deprecated Use ATTR_RPC_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;\n\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @deprecated Use ATTR_RPC_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use ATTR_RPC_GRPC_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;\n\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;\n\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_REQUEST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;\n\n/**\n * `error.code` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;\n\n/**\n * `error.message` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_MESSAGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use ATTR_MESSAGE_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;\n\n/**\n * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * Note: This way we guarantee that the values will be consistent between different implementations.\n *\n * @deprecated Use ATTR_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;\n\n/**\n * Compressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_COMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;\n\n/**\n * Uncompressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_UNCOMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;\n\n/**\n * Definition of available values for SemanticAttributes\n * This type is used for backward compatibility, you should use the individual exported\n * constants SemanticAttributes_XXXXX rather than the exported constant map. As any single reference\n * to a constant map value will result in all strings being included into your bundle.\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification.\n */\nexport type SemanticAttributes = {\n  /**\n   * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n   *\n   * Note: This may be different from `faas.id` if an alias is involved.\n   */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn';\n\n  /**\n   * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n   */\n  DB_SYSTEM: 'db.system';\n\n  /**\n   * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n   */\n  DB_CONNECTION_STRING: 'db.connection_string';\n\n  /**\n   * Username for accessing the database.\n   */\n  DB_USER: 'db.user';\n\n  /**\n   * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n   */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname';\n\n  /**\n   * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n   *\n   * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n   */\n  DB_NAME: 'db.name';\n\n  /**\n   * The database statement being executed.\n   *\n   * Note: The value may be sanitized to exclude sensitive information.\n   */\n  DB_STATEMENT: 'db.statement';\n\n  /**\n   * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n   *\n   * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n   */\n  DB_OPERATION: 'db.operation';\n\n  /**\n   * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n   *\n   * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n   */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name';\n\n  /**\n   * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace';\n\n  /**\n   * The fetch size used for paging, i.e. how many rows will be returned at once.\n   */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size';\n\n  /**\n   * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n   */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table';\n\n  /**\n   * Whether or not the query is idempotent.\n   */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence';\n\n  /**\n   * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n   */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count';\n\n  /**\n   * The ID of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id';\n\n  /**\n   * The data center of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc';\n\n  /**\n   * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace';\n\n  /**\n   * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n   */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index';\n\n  /**\n   * The collection being accessed within the database stated in `db.name`.\n   */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_SQL_TABLE: 'db.sql.table';\n\n  /**\n   * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n   */\n  EXCEPTION_TYPE: 'exception.type';\n\n  /**\n   * The exception message.\n   */\n  EXCEPTION_MESSAGE: 'exception.message';\n\n  /**\n   * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n   */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace';\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped';\n\n  /**\n   * Type of the trigger on which the function is executed.\n   */\n  FAAS_TRIGGER: 'faas.trigger';\n\n  /**\n   * The execution ID of the current function execution.\n   */\n  FAAS_EXECUTION: 'faas.execution';\n\n  /**\n   * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n   */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection';\n\n  /**\n   * Describes the type of the operation that was performed on the data.\n   */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation';\n\n  /**\n   * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_DOCUMENT_TIME: 'faas.document.time';\n\n  /**\n   * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n   */\n  FAAS_DOCUMENT_NAME: 'faas.document.name';\n\n  /**\n   * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_TIME: 'faas.time';\n\n  /**\n   * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n   */\n  FAAS_CRON: 'faas.cron';\n\n  /**\n   * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n   */\n  FAAS_COLDSTART: 'faas.coldstart';\n\n  /**\n   * The name of the invoked function.\n   *\n   * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_NAME: 'faas.invoked_name';\n\n  /**\n   * The cloud provider of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider';\n\n  /**\n   * The cloud region of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_REGION: 'faas.invoked_region';\n\n  /**\n   * Transport protocol used. See note below.\n   */\n  NET_TRANSPORT: 'net.transport';\n\n  /**\n   * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n   */\n  NET_PEER_IP: 'net.peer.ip';\n\n  /**\n   * Remote port number.\n   */\n  NET_PEER_PORT: 'net.peer.port';\n\n  /**\n   * Remote hostname or similar, see note below.\n   */\n  NET_PEER_NAME: 'net.peer.name';\n\n  /**\n   * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n   */\n  NET_HOST_IP: 'net.host.ip';\n\n  /**\n   * Like `net.peer.port` but for the host port.\n   */\n  NET_HOST_PORT: 'net.host.port';\n\n  /**\n   * Local hostname or similar, see note below.\n   */\n  NET_HOST_NAME: 'net.host.name';\n\n  /**\n   * The internet connection type currently being used by the host.\n   */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type';\n\n  /**\n   * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n   */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype';\n\n  /**\n   * The name of the mobile carrier.\n   */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name';\n\n  /**\n   * The mobile carrier country code.\n   */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc';\n\n  /**\n   * The mobile carrier network code.\n   */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc';\n\n  /**\n   * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n   */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc';\n\n  /**\n   * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n   */\n  PEER_SERVICE: 'peer.service';\n\n  /**\n   * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n   */\n  ENDUSER_ID: 'enduser.id';\n\n  /**\n   * Actual/assumed role the client is making the request under extracted from token or application security context.\n   */\n  ENDUSER_ROLE: 'enduser.role';\n\n  /**\n   * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n   */\n  ENDUSER_SCOPE: 'enduser.scope';\n\n  /**\n   * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n   */\n  THREAD_ID: 'thread.id';\n\n  /**\n   * Current thread name.\n   */\n  THREAD_NAME: 'thread.name';\n\n  /**\n   * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n   */\n  CODE_FUNCTION: 'code.function';\n\n  /**\n   * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n   */\n  CODE_NAMESPACE: 'code.namespace';\n\n  /**\n   * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n   */\n  CODE_FILEPATH: 'code.filepath';\n\n  /**\n   * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n   */\n  CODE_LINENO: 'code.lineno';\n\n  /**\n   * HTTP request method.\n   */\n  HTTP_METHOD: 'http.method';\n\n  /**\n   * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n   *\n   * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n   */\n  HTTP_URL: 'http.url';\n\n  /**\n   * The full request target as passed in a HTTP request line or equivalent.\n   */\n  HTTP_TARGET: 'http.target';\n\n  /**\n   * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n   *\n   * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n   */\n  HTTP_HOST: 'http.host';\n\n  /**\n   * The URI scheme identifying the used protocol.\n   */\n  HTTP_SCHEME: 'http.scheme';\n\n  /**\n   * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n   */\n  HTTP_STATUS_CODE: 'http.status_code';\n\n  /**\n   * Kind of HTTP protocol used.\n   *\n   * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n   */\n  HTTP_FLAVOR: 'http.flavor';\n\n  /**\n   * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n   */\n  HTTP_USER_AGENT: 'http.user_agent';\n\n  /**\n   * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length';\n\n  /**\n   * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed';\n\n  /**\n   * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length';\n\n  /**\n   * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed';\n\n  /**\n   * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n   *\n   * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n   */\n  HTTP_SERVER_NAME: 'http.server_name';\n\n  /**\n   * The matched route (path template).\n   */\n  HTTP_ROUTE: 'http.route';\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip';\n\n  /**\n   * The keys in the `RequestItems` object field.\n   */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names';\n\n  /**\n   * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n   */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity';\n\n  /**\n   * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n   */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics';\n\n  /**\n   * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity';\n\n  /**\n   * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity';\n\n  /**\n   * The value of the `ConsistentRead` request parameter.\n   */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read';\n\n  /**\n   * The value of the `ProjectionExpression` request parameter.\n   */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection';\n\n  /**\n   * The value of the `Limit` request parameter.\n   */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit';\n\n  /**\n   * The value of the `AttributesToGet` request parameter.\n   */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get';\n\n  /**\n   * The value of the `IndexName` request parameter.\n   */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name';\n\n  /**\n   * The value of the `Select` request parameter.\n   */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select';\n\n  /**\n   * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes';\n\n  /**\n   * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes';\n\n  /**\n   * The value of the `ExclusiveStartTableName` request parameter.\n   */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table';\n\n  /**\n   * The the number of items in the `TableNames` response parameter.\n   */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count';\n\n  /**\n   * The value of the `ScanIndexForward` request parameter.\n   */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward';\n\n  /**\n   * The value of the `Segment` request parameter.\n   */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment';\n\n  /**\n   * The value of the `TotalSegments` request parameter.\n   */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments';\n\n  /**\n   * The value of the `Count` response parameter.\n   */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count';\n\n  /**\n   * The value of the `ScannedCount` response parameter.\n   */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count';\n\n  /**\n   * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n   */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions';\n\n  /**\n   * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates';\n\n  /**\n   * A string identifying the messaging system.\n   */\n  MESSAGING_SYSTEM: 'messaging.system';\n\n  /**\n   * The message destination name. This might be equal to the span name but is required nevertheless.\n   */\n  MESSAGING_DESTINATION: 'messaging.destination';\n\n  /**\n   * The kind of message destination.\n   */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind';\n\n  /**\n   * A boolean that is true if the message destination is temporary.\n   */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination';\n\n  /**\n   * The name of the transport protocol.\n   */\n  MESSAGING_PROTOCOL: 'messaging.protocol';\n\n  /**\n   * The version of the transport protocol.\n   */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version';\n\n  /**\n   * Connection string.\n   */\n  MESSAGING_URL: 'messaging.url';\n\n  /**\n   * A value used by the messaging system as an identifier for the message, represented as a string.\n   */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id';\n\n  /**\n   * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n   */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id';\n\n  /**\n   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes';\n\n  /**\n   * The compressed size of the message payload in bytes.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes';\n\n  /**\n   * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n   */\n  MESSAGING_OPERATION: 'messaging.operation';\n\n  /**\n   * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n   */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id';\n\n  /**\n   * RabbitMQ message routing key.\n   */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key';\n\n  /**\n   * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n   *\n   * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n   */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key';\n\n  /**\n   * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n   */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group';\n\n  /**\n   * Client Id for the Consumer or Producer that is handling the message.\n   */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id';\n\n  /**\n   * Partition the message is sent to.\n   */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition';\n\n  /**\n   * A boolean that is true if the message is a tombstone.\n   */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone';\n\n  /**\n   * A string identifying the remoting system.\n   */\n  RPC_SYSTEM: 'rpc.system';\n\n  /**\n   * The full (logical) name of the service being called, including its package name, if applicable.\n   *\n   * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n   */\n  RPC_SERVICE: 'rpc.service';\n\n  /**\n   * The name of the (logical) method being called, must be equal to the $method part in the span name.\n   *\n   * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n   */\n  RPC_METHOD: 'rpc.method';\n\n  /**\n   * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n   */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code';\n\n  /**\n   * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n   */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version';\n\n  /**\n   * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n   */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id';\n\n  /**\n   * `error.code` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code';\n\n  /**\n   * `error.message` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message';\n\n  /**\n   * Whether this is a received or sent message.\n   */\n  MESSAGE_TYPE: 'message.type';\n\n  /**\n   * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n   *\n   * Note: This way we guarantee that the values will be consistent between different implementations.\n   */\n  MESSAGE_ID: 'message.id';\n\n  /**\n   * Compressed size of the message in bytes.\n   */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size';\n\n  /**\n   * Uncompressed size of the message in bytes.\n   */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size';\n};\n\n/**\n * Create exported Value Map for SemanticAttributes values\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification\n */\nexport const SemanticAttributes: SemanticAttributes =\n  /*#__PURE__*/ createConstMap<SemanticAttributes>([\n    TMP_AWS_LAMBDA_INVOKED_ARN,\n    TMP_DB_SYSTEM,\n    TMP_DB_CONNECTION_STRING,\n    TMP_DB_USER,\n    TMP_DB_JDBC_DRIVER_CLASSNAME,\n    TMP_DB_NAME,\n    TMP_DB_STATEMENT,\n    TMP_DB_OPERATION,\n    TMP_DB_MSSQL_INSTANCE_NAME,\n    TMP_DB_CASSANDRA_KEYSPACE,\n    TMP_DB_CASSANDRA_PAGE_SIZE,\n    TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,\n    TMP_DB_CASSANDRA_TABLE,\n    TMP_DB_CASSANDRA_IDEMPOTENCE,\n    TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,\n    TMP_DB_CASSANDRA_COORDINATOR_ID,\n    TMP_DB_CASSANDRA_COORDINATOR_DC,\n    TMP_DB_HBASE_NAMESPACE,\n    TMP_DB_REDIS_DATABASE_INDEX,\n    TMP_DB_MONGODB_COLLECTION,\n    TMP_DB_SQL_TABLE,\n    TMP_EXCEPTION_TYPE,\n    TMP_EXCEPTION_MESSAGE,\n    TMP_EXCEPTION_STACKTRACE,\n    TMP_EXCEPTION_ESCAPED,\n    TMP_FAAS_TRIGGER,\n    TMP_FAAS_EXECUTION,\n    TMP_FAAS_DOCUMENT_COLLECTION,\n    TMP_FAAS_DOCUMENT_OPERATION,\n    TMP_FAAS_DOCUMENT_TIME,\n    TMP_FAAS_DOCUMENT_NAME,\n    TMP_FAAS_TIME,\n    TMP_FAAS_CRON,\n    TMP_FAAS_COLDSTART,\n    TMP_FAAS_INVOKED_NAME,\n    TMP_FAAS_INVOKED_PROVIDER,\n    TMP_FAAS_INVOKED_REGION,\n    TMP_NET_TRANSPORT,\n    TMP_NET_PEER_IP,\n    TMP_NET_PEER_PORT,\n    TMP_NET_PEER_NAME,\n    TMP_NET_HOST_IP,\n    TMP_NET_HOST_PORT,\n    TMP_NET_HOST_NAME,\n    TMP_NET_HOST_CONNECTION_TYPE,\n    TMP_NET_HOST_CONNECTION_SUBTYPE,\n    TMP_NET_HOST_CARRIER_NAME,\n    TMP_NET_HOST_CARRIER_MCC,\n    TMP_NET_HOST_CARRIER_MNC,\n    TMP_NET_HOST_CARRIER_ICC,\n    TMP_PEER_SERVICE,\n    TMP_ENDUSER_ID,\n    TMP_ENDUSER_ROLE,\n    TMP_ENDUSER_SCOPE,\n    TMP_THREAD_ID,\n    TMP_THREAD_NAME,\n    TMP_CODE_FUNCTION,\n    TMP_CODE_NAMESPACE,\n    TMP_CODE_FILEPATH,\n    TMP_CODE_LINENO,\n    TMP_HTTP_METHOD,\n    TMP_HTTP_URL,\n    TMP_HTTP_TARGET,\n    TMP_HTTP_HOST,\n    TMP_HTTP_SCHEME,\n    TMP_HTTP_STATUS_CODE,\n    TMP_HTTP_FLAVOR,\n    TMP_HTTP_USER_AGENT,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_SERVER_NAME,\n    TMP_HTTP_ROUTE,\n    TMP_HTTP_CLIENT_IP,\n    TMP_AWS_DYNAMODB_TABLE_NAMES,\n    TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,\n    TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n    TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n    TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n    TMP_AWS_DYNAMODB_CONSISTENT_READ,\n    TMP_AWS_DYNAMODB_PROJECTION,\n    TMP_AWS_DYNAMODB_LIMIT,\n    TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,\n    TMP_AWS_DYNAMODB_INDEX_NAME,\n    TMP_AWS_DYNAMODB_SELECT,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n    TMP_AWS_DYNAMODB_TABLE_COUNT,\n    TMP_AWS_DYNAMODB_SCAN_FORWARD,\n    TMP_AWS_DYNAMODB_SEGMENT,\n    TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,\n    TMP_AWS_DYNAMODB_COUNT,\n    TMP_AWS_DYNAMODB_SCANNED_COUNT,\n    TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n    TMP_MESSAGING_SYSTEM,\n    TMP_MESSAGING_DESTINATION,\n    TMP_MESSAGING_DESTINATION_KIND,\n    TMP_MESSAGING_TEMP_DESTINATION,\n    TMP_MESSAGING_PROTOCOL,\n    TMP_MESSAGING_PROTOCOL_VERSION,\n    TMP_MESSAGING_URL,\n    TMP_MESSAGING_MESSAGE_ID,\n    TMP_MESSAGING_CONVERSATION_ID,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,\n    TMP_MESSAGING_OPERATION,\n    TMP_MESSAGING_CONSUMER_ID,\n    TMP_MESSAGING_RABBITMQ_ROUTING_KEY,\n    TMP_MESSAGING_KAFKA_MESSAGE_KEY,\n    TMP_MESSAGING_KAFKA_CONSUMER_GROUP,\n    TMP_MESSAGING_KAFKA_CLIENT_ID,\n    TMP_MESSAGING_KAFKA_PARTITION,\n    TMP_MESSAGING_KAFKA_TOMBSTONE,\n    TMP_RPC_SYSTEM,\n    TMP_RPC_SERVICE,\n    TMP_RPC_METHOD,\n    TMP_RPC_GRPC_STATUS_CODE,\n    TMP_RPC_JSONRPC_VERSION,\n    TMP_RPC_JSONRPC_REQUEST_ID,\n    TMP_RPC_JSONRPC_ERROR_CODE,\n    TMP_RPC_JSONRPC_ERROR_MESSAGE,\n    TMP_MESSAGE_TYPE,\n    TMP_MESSAGE_ID,\n    TMP_MESSAGE_COMPRESSED_SIZE,\n    TMP_MESSAGE_UNCOMPRESSED_SIZE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';\nconst TMP_DBSYSTEMVALUES_MSSQL = 'mssql';\nconst TMP_DBSYSTEMVALUES_MYSQL = 'mysql';\nconst TMP_DBSYSTEMVALUES_ORACLE = 'oracle';\nconst TMP_DBSYSTEMVALUES_DB2 = 'db2';\nconst TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';\nconst TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';\nconst TMP_DBSYSTEMVALUES_HIVE = 'hive';\nconst TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';\nconst TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';\nconst TMP_DBSYSTEMVALUES_PROGRESS = 'progress';\nconst TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';\nconst TMP_DBSYSTEMVALUES_HANADB = 'hanadb';\nconst TMP_DBSYSTEMVALUES_INGRES = 'ingres';\nconst TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';\nconst TMP_DBSYSTEMVALUES_EDB = 'edb';\nconst TMP_DBSYSTEMVALUES_CACHE = 'cache';\nconst TMP_DBSYSTEMVALUES_ADABAS = 'adabas';\nconst TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';\nconst TMP_DBSYSTEMVALUES_DERBY = 'derby';\nconst TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';\nconst TMP_DBSYSTEMVALUES_INFORMIX = 'informix';\nconst TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';\nconst TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';\nconst TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';\nconst TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';\nconst TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';\nconst TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';\nconst TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';\nconst TMP_DBSYSTEMVALUES_SYBASE = 'sybase';\nconst TMP_DBSYSTEMVALUES_TERADATA = 'teradata';\nconst TMP_DBSYSTEMVALUES_VERTICA = 'vertica';\nconst TMP_DBSYSTEMVALUES_H2 = 'h2';\nconst TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';\nconst TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';\nconst TMP_DBSYSTEMVALUES_HBASE = 'hbase';\nconst TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';\nconst TMP_DBSYSTEMVALUES_REDIS = 'redis';\nconst TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';\nconst TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';\nconst TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';\nconst TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';\nconst TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';\nconst TMP_DBSYSTEMVALUES_GEODE = 'geode';\nconst TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';\nconst TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';\nconst TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_OTHER_SQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MSSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MYSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ORACLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DB2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POSTGRESQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDSHIFT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CLOUDSCAPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HSQLDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PROGRESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MAXDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HANADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INGRES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIRSTSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_EDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CACHE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ADABAS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIREBIRD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DERBY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FILEMAKER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INFORMIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INSTANTDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INTERBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MARIADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NETEZZA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PERVASIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POINTBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SQLITE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SYBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_TERADATA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_VERTICA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_H2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COLDFUSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CASSANDRA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MONGODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COSMOSDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DYNAMODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NEO4J in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_GEODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ELASTICSEARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MEMCACHED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COCKROACHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;\n\n/**\n * Identifies the Values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport type DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql';\n\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql';\n\n  /** MySQL. */\n  MYSQL: 'mysql';\n\n  /** Oracle Database. */\n  ORACLE: 'oracle';\n\n  /** IBM Db2. */\n  DB2: 'db2';\n\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql';\n\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift';\n\n  /** Apache Hive. */\n  HIVE: 'hive';\n\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape';\n\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb';\n\n  /** Progress Database. */\n  PROGRESS: 'progress';\n\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb';\n\n  /** SAP HANA. */\n  HANADB: 'hanadb';\n\n  /** Ingres. */\n  INGRES: 'ingres';\n\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql';\n\n  /** EnterpriseDB. */\n  EDB: 'edb';\n\n  /** InterSystems Caché. */\n  CACHE: 'cache';\n\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas';\n\n  /** Firebird. */\n  FIREBIRD: 'firebird';\n\n  /** Apache Derby. */\n  DERBY: 'derby';\n\n  /** FileMaker. */\n  FILEMAKER: 'filemaker';\n\n  /** Informix. */\n  INFORMIX: 'informix';\n\n  /** InstantDB. */\n  INSTANTDB: 'instantdb';\n\n  /** InterBase. */\n  INTERBASE: 'interbase';\n\n  /** MariaDB. */\n  MARIADB: 'mariadb';\n\n  /** Netezza. */\n  NETEZZA: 'netezza';\n\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive';\n\n  /** PointBase. */\n  POINTBASE: 'pointbase';\n\n  /** SQLite. */\n  SQLITE: 'sqlite';\n\n  /** Sybase. */\n  SYBASE: 'sybase';\n\n  /** Teradata. */\n  TERADATA: 'teradata';\n\n  /** Vertica. */\n  VERTICA: 'vertica';\n\n  /** H2. */\n  H2: 'h2';\n\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion';\n\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra';\n\n  /** Apache HBase. */\n  HBASE: 'hbase';\n\n  /** MongoDB. */\n  MONGODB: 'mongodb';\n\n  /** Redis. */\n  REDIS: 'redis';\n\n  /** Couchbase. */\n  COUCHBASE: 'couchbase';\n\n  /** CouchDB. */\n  COUCHDB: 'couchdb';\n\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb';\n\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb';\n\n  /** Neo4j. */\n  NEO4J: 'neo4j';\n\n  /** Apache Geode. */\n  GEODE: 'geode';\n\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch';\n\n  /** Memcached. */\n  MEMCACHED: 'memcached';\n\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb';\n};\n\n/**\n * The constant map of values for DbSystemValues.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport const DbSystemValues: DbSystemValues =\n  /*#__PURE__*/ createConstMap<DbSystemValues>([\n    TMP_DBSYSTEMVALUES_OTHER_SQL,\n    TMP_DBSYSTEMVALUES_MSSQL,\n    TMP_DBSYSTEMVALUES_MYSQL,\n    TMP_DBSYSTEMVALUES_ORACLE,\n    TMP_DBSYSTEMVALUES_DB2,\n    TMP_DBSYSTEMVALUES_POSTGRESQL,\n    TMP_DBSYSTEMVALUES_REDSHIFT,\n    TMP_DBSYSTEMVALUES_HIVE,\n    TMP_DBSYSTEMVALUES_CLOUDSCAPE,\n    TMP_DBSYSTEMVALUES_HSQLDB,\n    TMP_DBSYSTEMVALUES_PROGRESS,\n    TMP_DBSYSTEMVALUES_MAXDB,\n    TMP_DBSYSTEMVALUES_HANADB,\n    TMP_DBSYSTEMVALUES_INGRES,\n    TMP_DBSYSTEMVALUES_FIRSTSQL,\n    TMP_DBSYSTEMVALUES_EDB,\n    TMP_DBSYSTEMVALUES_CACHE,\n    TMP_DBSYSTEMVALUES_ADABAS,\n    TMP_DBSYSTEMVALUES_FIREBIRD,\n    TMP_DBSYSTEMVALUES_DERBY,\n    TMP_DBSYSTEMVALUES_FILEMAKER,\n    TMP_DBSYSTEMVALUES_INFORMIX,\n    TMP_DBSYSTEMVALUES_INSTANTDB,\n    TMP_DBSYSTEMVALUES_INTERBASE,\n    TMP_DBSYSTEMVALUES_MARIADB,\n    TMP_DBSYSTEMVALUES_NETEZZA,\n    TMP_DBSYSTEMVALUES_PERVASIVE,\n    TMP_DBSYSTEMVALUES_POINTBASE,\n    TMP_DBSYSTEMVALUES_SQLITE,\n    TMP_DBSYSTEMVALUES_SYBASE,\n    TMP_DBSYSTEMVALUES_TERADATA,\n    TMP_DBSYSTEMVALUES_VERTICA,\n    TMP_DBSYSTEMVALUES_H2,\n    TMP_DBSYSTEMVALUES_COLDFUSION,\n    TMP_DBSYSTEMVALUES_CASSANDRA,\n    TMP_DBSYSTEMVALUES_HBASE,\n    TMP_DBSYSTEMVALUES_MONGODB,\n    TMP_DBSYSTEMVALUES_REDIS,\n    TMP_DBSYSTEMVALUES_COUCHBASE,\n    TMP_DBSYSTEMVALUES_COUCHDB,\n    TMP_DBSYSTEMVALUES_COSMOSDB,\n    TMP_DBSYSTEMVALUES_DYNAMODB,\n    TMP_DBSYSTEMVALUES_NEO4J,\n    TMP_DBSYSTEMVALUES_GEODE,\n    TMP_DBSYSTEMVALUES_ELASTICSEARCH,\n    TMP_DBSYSTEMVALUES_MEMCACHED,\n    TMP_DBSYSTEMVALUES_COCKROACHDB,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ALL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_TWO =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_THREE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ANY =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;\n\n/**\n * Identifies the Values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport type DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all';\n\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum';\n\n  /** quorum. */\n  QUORUM: 'quorum';\n\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum';\n\n  /** one. */\n  ONE: 'one';\n\n  /** two. */\n  TWO: 'two';\n\n  /** three. */\n  THREE: 'three';\n\n  /** local_one. */\n  LOCAL_ONE: 'local_one';\n\n  /** any. */\n  ANY: 'any';\n\n  /** serial. */\n  SERIAL: 'serial';\n\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial';\n};\n\n/**\n * The constant map of values for DbCassandraConsistencyLevelValues.\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport const DbCassandraConsistencyLevelValues: DbCassandraConsistencyLevelValues =\n  /*#__PURE__*/ createConstMap<DbCassandraConsistencyLevelValues>([\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';\nconst TMP_FAASTRIGGERVALUES_HTTP = 'http';\nconst TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';\nconst TMP_FAASTRIGGERVALUES_TIMER = 'timer';\nconst TMP_FAASTRIGGERVALUES_OTHER = 'other';\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_DATASOURCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_HTTP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_PUBSUB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_TIMER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;\n\n/**\n * Identifies the Values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport type FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource';\n\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http';\n\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub';\n\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer';\n\n  /** If none of the others apply. */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for FaasTriggerValues.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport const FaasTriggerValues: FaasTriggerValues =\n  /*#__PURE__*/ createConstMap<FaasTriggerValues>([\n    TMP_FAASTRIGGERVALUES_DATASOURCE,\n    TMP_FAASTRIGGERVALUES_HTTP,\n    TMP_FAASTRIGGERVALUES_PUBSUB,\n    TMP_FAASTRIGGERVALUES_TIMER,\n    TMP_FAASTRIGGERVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_INSERT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_INSERT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_EDIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_EDIT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_DELETE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_DELETE =\n  TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;\n\n/**\n * Identifies the Values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport type FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert';\n\n  /** When an object is modified. */\n  EDIT: 'edit';\n\n  /** When an object is deleted. */\n  DELETE: 'delete';\n};\n\n/**\n * The constant map of values for FaasDocumentOperationValues.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport const FaasDocumentOperationValues: FaasDocumentOperationValues =\n  /*#__PURE__*/ createConstMap<FaasDocumentOperationValues>([\n    TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD =\n  TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_AZURE =\n  TMP_FAASINVOKEDPROVIDERVALUES_AZURE;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;\n\n/**\n * Identifies the Values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport type FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud';\n\n  /** Amazon Web Services. */\n  AWS: 'aws';\n\n  /** Microsoft Azure. */\n  AZURE: 'azure';\n\n  /** Google Cloud Platform. */\n  GCP: 'gcp';\n};\n\n/**\n * The constant map of values for FaasInvokedProviderValues.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport const FaasInvokedProviderValues: FaasInvokedProviderValues =\n  /*#__PURE__*/ createConstMap<FaasInvokedProviderValues>([\n    TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_FAASINVOKEDPROVIDERVALUES_AWS,\n    TMP_FAASINVOKEDPROVIDERVALUES_AZURE,\n    TMP_FAASINVOKEDPROVIDERVALUES_GCP,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';\nconst TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';\nconst TMP_NETTRANSPORTVALUES_IP = 'ip';\nconst TMP_NETTRANSPORTVALUES_UNIX = 'unix';\nconst TMP_NETTRANSPORTVALUES_PIPE = 'pipe';\nconst TMP_NETTRANSPORTVALUES_INPROC = 'inproc';\nconst TMP_NETTRANSPORTVALUES_OTHER = 'other';\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_TCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_UDP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport const NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport const NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_PIPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_INPROC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;\n\n/**\n * Identifies the Values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport type NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp';\n\n  /** ip_udp. */\n  IP_UDP: 'ip_udp';\n\n  /** Another IP-based protocol. */\n  IP: 'ip';\n\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix';\n\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe';\n\n  /** In-process communication. */\n  INPROC: 'inproc';\n\n  /** Something else (non IP-based). */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for NetTransportValues.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport const NetTransportValues: NetTransportValues =\n  /*#__PURE__*/ createConstMap<NetTransportValues>([\n    TMP_NETTRANSPORTVALUES_IP_TCP,\n    TMP_NETTRANSPORTVALUES_IP_UDP,\n    TMP_NETTRANSPORTVALUES_IP,\n    TMP_NETTRANSPORTVALUES_UNIX,\n    TMP_NETTRANSPORTVALUES_PIPE,\n    TMP_NETTRANSPORTVALUES_INPROC,\n    TMP_NETTRANSPORTVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIFI in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIFI =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIRED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIRED =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_CELL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_CELL =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNKNOWN =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;\n\n/**\n * Identifies the Values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi';\n\n  /** wired. */\n  WIRED: 'wired';\n\n  /** cell. */\n  CELL: 'cell';\n\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable';\n\n  /** unknown. */\n  UNKNOWN: 'unknown';\n};\n\n/**\n * The constant map of values for NetHostConnectionTypeValues.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionTypeValues: NetHostConnectionTypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionTypeValues>([\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GPRS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EDGE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_UMTS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IDEN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GSM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GSM =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NR =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;\n\n/**\n * Identifies the Values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs';\n\n  /** EDGE. */\n  EDGE: 'edge';\n\n  /** UMTS. */\n  UMTS: 'umts';\n\n  /** CDMA. */\n  CDMA: 'cdma';\n\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0';\n\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a';\n\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt';\n\n  /** HSDPA. */\n  HSDPA: 'hsdpa';\n\n  /** HSUPA. */\n  HSUPA: 'hsupa';\n\n  /** HSPA. */\n  HSPA: 'hspa';\n\n  /** IDEN. */\n  IDEN: 'iden';\n\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b';\n\n  /** LTE. */\n  LTE: 'lte';\n\n  /** EHRPD. */\n  EHRPD: 'ehrpd';\n\n  /** HSPAP. */\n  HSPAP: 'hspap';\n\n  /** GSM. */\n  GSM: 'gsm';\n\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma';\n\n  /** IWLAN. */\n  IWLAN: 'iwlan';\n\n  /** 5G NR (New Radio). */\n  NR: 'nr';\n\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa';\n\n  /** LTE CA. */\n  LTE_CA: 'lte_ca';\n};\n\n/**\n * The constant map of values for NetHostConnectionSubtypeValues.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionSubtypeValues: NetHostConnectionSubtypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionSubtypeValues>([\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';\nconst TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';\nconst TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';\nconst TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';\nconst TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_1 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_2_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_SPDY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_QUIC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;\n\n/**\n * Identifies the Values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport type HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0';\n\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1';\n\n  /** HTTP 2. */\n  HTTP_2_0: '2.0';\n\n  /** SPDY protocol. */\n  SPDY: 'SPDY';\n\n  /** QUIC protocol. */\n  QUIC: 'QUIC';\n};\n\n/**\n * The constant map of values for HttpFlavorValues.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport const HttpFlavorValues: HttpFlavorValues = {\n  HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,\n  HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,\n  HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,\n  SPDY: TMP_HTTPFLAVORVALUES_SPDY,\n  QUIC: TMP_HTTPFLAVORVALUES_QUIC,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_QUEUE =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_TOPIC =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n\n/**\n * Identifies the Values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport type MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue';\n\n  /** A message sent to a topic. */\n  TOPIC: 'topic';\n};\n\n/**\n * The constant map of values for MessagingDestinationKindValues.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport const MessagingDestinationKindValues: MessagingDestinationKindValues =\n  /*#__PURE__*/ createConstMap<MessagingDestinationKindValues>([\n    TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n    TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';\nconst TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_RECEIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGINGOPERATIONVALUES_RECEIVE =\n  TMP_MESSAGINGOPERATIONVALUES_RECEIVE;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_PROCESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGINGOPERATIONVALUES_PROCESS =\n  TMP_MESSAGINGOPERATIONVALUES_PROCESS;\n\n/**\n * Identifies the Values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport type MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive';\n\n  /** process. */\n  PROCESS: 'process';\n};\n\n/**\n * The constant map of values for MessagingOperationValues.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport const MessagingOperationValues: MessagingOperationValues =\n  /*#__PURE__*/ createConstMap<MessagingOperationValues>([\n    TMP_MESSAGINGOPERATIONVALUES_RECEIVE,\n    TMP_MESSAGINGOPERATIONVALUES_PROCESS,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;\nconst TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;\nconst TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;\nconst TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;\nconst TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;\nconst TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;\nconst TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_CANCELLED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_CANCELLED =\n  TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNKNOWN =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT =\n  TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED =\n  TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_NOT_FOUND =\n  TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS =\n  TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED =\n  TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION =\n  TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ABORTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_ABORTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE =\n  TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INTERNAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_INTERNAL =\n  TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAVAILABLE =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_DATA_LOSS =\n  TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;\n\n/**\n * Identifies the Values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport type RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0;\n\n  /** CANCELLED. */\n  CANCELLED: 1;\n\n  /** UNKNOWN. */\n  UNKNOWN: 2;\n\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3;\n\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4;\n\n  /** NOT_FOUND. */\n  NOT_FOUND: 5;\n\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6;\n\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7;\n\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8;\n\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9;\n\n  /** ABORTED. */\n  ABORTED: 10;\n\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11;\n\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12;\n\n  /** INTERNAL. */\n  INTERNAL: 13;\n\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14;\n\n  /** DATA_LOSS. */\n  DATA_LOSS: 15;\n\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16;\n};\n\n/**\n * The constant map of values for RpcGrpcStatusCodeValues.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport const RpcGrpcStatusCodeValues: RpcGrpcStatusCodeValues = {\n  OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,\n  CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,\n  UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,\n  INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,\n  DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,\n  NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,\n  ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,\n  PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,\n  RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,\n  FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,\n  ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,\n  OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,\n  UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,\n  INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,\n  UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,\n  DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,\n  UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGETYPEVALUES_SENT = 'SENT';\nconst TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_SENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_RECEIVED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;\n\n/**\n * Identifies the Values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport type MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT';\n\n  /** received. */\n  RECEIVED: 'RECEIVED';\n};\n\n/**\n * The constant map of values for MessageTypeValues.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport const MessageTypeValues: MessageTypeValues =\n  /*#__PURE__*/ createConstMap<MessageTypeValues>([\n    TMP_MESSAGETYPEVALUES_SENT,\n    TMP_MESSAGETYPEVALUES_RECEIVED,\n  ]);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Creates a const map from the given values\n * @param values - An array of values to be used as keys and values in the map.\n * @returns A populated version of the map with the values and keys derived from the values.\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function createConstMap<T>(values: Array<T[keyof T]>): T {\n  // eslint-disable-next-line prefer-const, @typescript-eslint/no-explicit-any\n  let res: any = {};\n  const len = values.length;\n  for (let lp = 0; lp < len; lp++) {\n    const val = values[lp];\n    if (val) {\n      res[String(val).toUpperCase().replace(/[-.]/g, '_')] = val;\n    }\n  }\n\n  return res as T;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-restricted-syntax --\n * These re-exports are only of constants, only one-level deep at this point,\n * and should not cause problems for tree-shakers.\n */\nexport * from './SemanticResourceAttributes';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createConstMap } from '../internal/utils';\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticResourceAttributes\n//----------------------------------------------------------------------------------------------------------\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUD_PROVIDER = 'cloud.provider';\nconst TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';\nconst TMP_CLOUD_REGION = 'cloud.region';\nconst TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\nconst TMP_CLOUD_PLATFORM = 'cloud.platform';\nconst TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\nconst TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\nconst TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\nconst TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\nconst TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\nconst TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\nconst TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\nconst TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\nconst TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\nconst TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\nconst TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\nconst TMP_CONTAINER_NAME = 'container.name';\nconst TMP_CONTAINER_ID = 'container.id';\nconst TMP_CONTAINER_RUNTIME = 'container.runtime';\nconst TMP_CONTAINER_IMAGE_NAME = 'container.image.name';\nconst TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';\nconst TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\nconst TMP_DEVICE_ID = 'device.id';\nconst TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\nconst TMP_DEVICE_MODEL_NAME = 'device.model.name';\nconst TMP_FAAS_NAME = 'faas.name';\nconst TMP_FAAS_ID = 'faas.id';\nconst TMP_FAAS_VERSION = 'faas.version';\nconst TMP_FAAS_INSTANCE = 'faas.instance';\nconst TMP_FAAS_MAX_MEMORY = 'faas.max_memory';\nconst TMP_HOST_ID = 'host.id';\nconst TMP_HOST_NAME = 'host.name';\nconst TMP_HOST_TYPE = 'host.type';\nconst TMP_HOST_ARCH = 'host.arch';\nconst TMP_HOST_IMAGE_NAME = 'host.image.name';\nconst TMP_HOST_IMAGE_ID = 'host.image.id';\nconst TMP_HOST_IMAGE_VERSION = 'host.image.version';\nconst TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';\nconst TMP_K8S_NODE_NAME = 'k8s.node.name';\nconst TMP_K8S_NODE_UID = 'k8s.node.uid';\nconst TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\nconst TMP_K8S_POD_UID = 'k8s.pod.uid';\nconst TMP_K8S_POD_NAME = 'k8s.pod.name';\nconst TMP_K8S_CONTAINER_NAME = 'k8s.container.name';\nconst TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\nconst TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\nconst TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\nconst TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\nconst TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\nconst TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\nconst TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\nconst TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\nconst TMP_K8S_JOB_UID = 'k8s.job.uid';\nconst TMP_K8S_JOB_NAME = 'k8s.job.name';\nconst TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\nconst TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\nconst TMP_OS_TYPE = 'os.type';\nconst TMP_OS_DESCRIPTION = 'os.description';\nconst TMP_OS_NAME = 'os.name';\nconst TMP_OS_VERSION = 'os.version';\nconst TMP_PROCESS_PID = 'process.pid';\nconst TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\nconst TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\nconst TMP_PROCESS_COMMAND = 'process.command';\nconst TMP_PROCESS_COMMAND_LINE = 'process.command_line';\nconst TMP_PROCESS_COMMAND_ARGS = 'process.command_args';\nconst TMP_PROCESS_OWNER = 'process.owner';\nconst TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nconst TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\nconst TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\nconst TMP_SERVICE_NAME = 'service.name';\nconst TMP_SERVICE_NAMESPACE = 'service.namespace';\nconst TMP_SERVICE_INSTANCE_ID = 'service.instance.id';\nconst TMP_SERVICE_VERSION = 'service.version';\nconst TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\nconst TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\nconst TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\nconst TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';\nconst TMP_WEBENGINE_NAME = 'webengine.name';\nconst TMP_WEBENGINE_VERSION = 'webengine.version';\nconst TMP_WEBENGINE_DESCRIPTION = 'webengine.description';\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use ATTR_CLOUD_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;\n\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @deprecated Use ATTR_CLOUD_ACCOUNT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;\n\n/**\n * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n *\n * @deprecated Use ATTR_CLOUD_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;\n\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n *\n * @deprecated Use ATTR_CLOUD_AVAILABILITY_ZONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use ATTR_CLOUD_PLATFORM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;\n\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CONTAINER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;\n\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use ATTR_AWS_ECS_LAUNCHTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;\n\n/**\n * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;\n\n/**\n * The task definition family this task definition is a member of.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_FAMILY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;\n\n/**\n * The revision for this task definition.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_REVISION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;\n\n/**\n * The ARN of an EKS cluster.\n *\n * @deprecated Use ATTR_AWS_EKS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;\n\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;\n\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;\n\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;\n\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;\n\n/**\n * Container name.\n *\n * @deprecated Use ATTR_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;\n\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n *\n * @deprecated Use ATTR_CONTAINER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;\n\n/**\n * The container runtime managing this container.\n *\n * @deprecated Use ATTR_CONTAINER_RUNTIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;\n\n/**\n * Name of the image the container was built on.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;\n\n/**\n * Container image tag.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_TAGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;\n\n/**\n * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @deprecated Use ATTR_DEPLOYMENT_ENVIRONMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;\n\n/**\n * A unique identifier representing the device.\n *\n * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @deprecated Use ATTR_DEVICE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;\n\n/**\n * The model identifier for the device.\n *\n * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_IDENTIFIER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;\n\n/**\n * The marketing name for the device model.\n *\n * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;\n\n/**\n * The name of the single function that this runtime instance executes.\n *\n * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n *\n * @deprecated Use ATTR_FAAS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;\n\n/**\n* The unique ID of the single function that this runtime instance executes.\n*\n* Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n*\n* @deprecated Use ATTR_CLOUD_RESOURCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;\n\n/**\n* The immutable version of the function being executed.\n*\n* Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n*\n* @deprecated Use ATTR_FAAS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;\n\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * Note: * **AWS Lambda:** Use the (full) log stream name.\n *\n * @deprecated Use ATTR_FAAS_INSTANCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;\n\n/**\n * The amount of memory available to the serverless function in MiB.\n *\n * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n *\n * @deprecated Use ATTR_FAAS_MAX_MEMORY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;\n\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n *\n * @deprecated Use ATTR_HOST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_ID = TMP_HOST_ID;\n\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @deprecated Use ATTR_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;\n\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @deprecated Use ATTR_HOST_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use ATTR_HOST_ARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;\n\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @deprecated Use ATTR_HOST_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;\n\n/**\n * VM image ID. For Cloud, this value is from the provider.\n *\n * @deprecated Use ATTR_HOST_IMAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;\n\n/**\n * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n *\n * @deprecated Use ATTR_HOST_IMAGE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;\n\n/**\n * The name of the cluster.\n *\n * @deprecated Use ATTR_K8S_CLUSTER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;\n\n/**\n * The name of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;\n\n/**\n * The UID of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;\n\n/**\n * The name of the namespace that the pod is running in.\n *\n * @deprecated Use ATTR_K8S_NAMESPACE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;\n\n/**\n * The UID of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;\n\n/**\n * The name of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;\n\n/**\n * The name of the Container in a Pod template.\n *\n * @deprecated Use ATTR_K8S_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;\n\n/**\n * The UID of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;\n\n/**\n * The name of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;\n\n/**\n * The UID of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;\n\n/**\n * The name of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;\n\n/**\n * The UID of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;\n\n/**\n * The name of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;\n\n/**\n * The UID of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;\n\n/**\n * The name of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;\n\n/**\n * The UID of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;\n\n/**\n * The name of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;\n\n/**\n * The UID of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;\n\n/**\n * The name of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;\n\n/**\n * The operating system type.\n *\n * @deprecated Use ATTR_OS_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;\n\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @deprecated Use ATTR_OS_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;\n\n/**\n * Human readable operating system name.\n *\n * @deprecated Use ATTR_OS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_NAME = TMP_OS_NAME;\n\n/**\n * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n *\n * @deprecated Use ATTR_OS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;\n\n/**\n * Process identifier (PID).\n *\n * @deprecated Use ATTR_PROCESS_PID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;\n\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;\n\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_PATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;\n\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;\n\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_LINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;\n\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_ARGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;\n\n/**\n * The username of the user that owns the process.\n *\n * @deprecated Use ATTR_PROCESS_OWNER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;\n\n/**\n * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;\n\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;\n\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION =\n  TMP_PROCESS_RUNTIME_DESCRIPTION;\n\n/**\n * Logical name of the service.\n *\n * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n *\n * @deprecated Use ATTR_SERVICE_NAME.\n */\nexport const SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;\n\n/**\n * A namespace for `service.name`.\n *\n * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @deprecated Use ATTR_SERVICE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;\n\n/**\n * The string ID of the service instance.\n *\n * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n *\n * @deprecated Use ATTR_SERVICE_INSTANCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;\n\n/**\n * The version string of the service API or implementation.\n *\n * @deprecated Use ATTR_SERVICE_VERSION.\n */\nexport const SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;\n\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_NAME.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_LANGUAGE.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;\n\n/**\n * The version string of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_VERSION.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;\n\n/**\n * The version string of the auto instrumentation agent, if used.\n *\n * @deprecated Use ATTR_TELEMETRY_DISTRO_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;\n\n/**\n * The name of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;\n\n/**\n * The version of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;\n\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @deprecated Use ATTR_WEBENGINE_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;\n\n/**\n * Definition of available values for SemanticResourceAttributes\n * This type is used for backward compatibility, you should use the individual exported\n * constants SemanticResourceAttributes_XXXXX rather than the exported constant map. As any single reference\n * to a constant map value will result in all strings being included into your bundle.\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification.\n */\nexport type SemanticResourceAttributes = {\n  /**\n   * Name of the cloud provider.\n   */\n  CLOUD_PROVIDER: 'cloud.provider';\n\n  /**\n   * The cloud account ID the resource is assigned to.\n   */\n  CLOUD_ACCOUNT_ID: 'cloud.account.id';\n\n  /**\n   * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n   */\n  CLOUD_REGION: 'cloud.region';\n\n  /**\n   * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n   *\n   * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n   */\n  CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone';\n\n  /**\n   * The cloud platform in use.\n   *\n   * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n   */\n  CLOUD_PLATFORM: 'cloud.platform';\n\n  /**\n   * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n   */\n  AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn';\n\n  /**\n   * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n   */\n  AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn';\n\n  /**\n   * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n   */\n  AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype';\n\n  /**\n   * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n   */\n  AWS_ECS_TASK_ARN: 'aws.ecs.task.arn';\n\n  /**\n   * The task definition family this task definition is a member of.\n   */\n  AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family';\n\n  /**\n   * The revision for this task definition.\n   */\n  AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision';\n\n  /**\n   * The ARN of an EKS cluster.\n   */\n  AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn';\n\n  /**\n   * The name(s) of the AWS log group(s) an application is writing to.\n   *\n   * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n   */\n  AWS_LOG_GROUP_NAMES: 'aws.log.group.names';\n\n  /**\n   * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n   *\n   * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n   */\n  AWS_LOG_GROUP_ARNS: 'aws.log.group.arns';\n\n  /**\n   * The name(s) of the AWS log stream(s) an application is writing to.\n   */\n  AWS_LOG_STREAM_NAMES: 'aws.log.stream.names';\n\n  /**\n   * The ARN(s) of the AWS log stream(s).\n   *\n   * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n   */\n  AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns';\n\n  /**\n   * Container name.\n   */\n  CONTAINER_NAME: 'container.name';\n\n  /**\n   * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n   */\n  CONTAINER_ID: 'container.id';\n\n  /**\n   * The container runtime managing this container.\n   */\n  CONTAINER_RUNTIME: 'container.runtime';\n\n  /**\n   * Name of the image the container was built on.\n   */\n  CONTAINER_IMAGE_NAME: 'container.image.name';\n\n  /**\n   * Container image tag.\n   */\n  CONTAINER_IMAGE_TAG: 'container.image.tag';\n\n  /**\n   * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n   */\n  DEPLOYMENT_ENVIRONMENT: 'deployment.environment';\n\n  /**\n   * A unique identifier representing the device.\n   *\n   * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n   */\n  DEVICE_ID: 'device.id';\n\n  /**\n   * The model identifier for the device.\n   *\n   * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n   */\n  DEVICE_MODEL_IDENTIFIER: 'device.model.identifier';\n\n  /**\n   * The marketing name for the device model.\n   *\n   * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n   */\n  DEVICE_MODEL_NAME: 'device.model.name';\n\n  /**\n   * The name of the single function that this runtime instance executes.\n   *\n   * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n   */\n  FAAS_NAME: 'faas.name';\n\n  /**\n  * The unique ID of the single function that this runtime instance executes.\n  *\n  * Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n  */\n  FAAS_ID: 'faas.id';\n\n  /**\n  * The immutable version of the function being executed.\n  *\n  * Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n  */\n  FAAS_VERSION: 'faas.version';\n\n  /**\n   * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n   *\n   * Note: * **AWS Lambda:** Use the (full) log stream name.\n   */\n  FAAS_INSTANCE: 'faas.instance';\n\n  /**\n   * The amount of memory available to the serverless function in MiB.\n   *\n   * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n   */\n  FAAS_MAX_MEMORY: 'faas.max_memory';\n\n  /**\n   * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n   */\n  HOST_ID: 'host.id';\n\n  /**\n   * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n   */\n  HOST_NAME: 'host.name';\n\n  /**\n   * Type of host. For Cloud, this must be the machine type.\n   */\n  HOST_TYPE: 'host.type';\n\n  /**\n   * The CPU architecture the host system is running on.\n   */\n  HOST_ARCH: 'host.arch';\n\n  /**\n   * Name of the VM image or OS install the host was instantiated from.\n   */\n  HOST_IMAGE_NAME: 'host.image.name';\n\n  /**\n   * VM image ID. For Cloud, this value is from the provider.\n   */\n  HOST_IMAGE_ID: 'host.image.id';\n\n  /**\n   * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n   */\n  HOST_IMAGE_VERSION: 'host.image.version';\n\n  /**\n   * The name of the cluster.\n   */\n  K8S_CLUSTER_NAME: 'k8s.cluster.name';\n\n  /**\n   * The name of the Node.\n   */\n  K8S_NODE_NAME: 'k8s.node.name';\n\n  /**\n   * The UID of the Node.\n   */\n  K8S_NODE_UID: 'k8s.node.uid';\n\n  /**\n   * The name of the namespace that the pod is running in.\n   */\n  K8S_NAMESPACE_NAME: 'k8s.namespace.name';\n\n  /**\n   * The UID of the Pod.\n   */\n  K8S_POD_UID: 'k8s.pod.uid';\n\n  /**\n   * The name of the Pod.\n   */\n  K8S_POD_NAME: 'k8s.pod.name';\n\n  /**\n   * The name of the Container in a Pod template.\n   */\n  K8S_CONTAINER_NAME: 'k8s.container.name';\n\n  /**\n   * The UID of the ReplicaSet.\n   */\n  K8S_REPLICASET_UID: 'k8s.replicaset.uid';\n\n  /**\n   * The name of the ReplicaSet.\n   */\n  K8S_REPLICASET_NAME: 'k8s.replicaset.name';\n\n  /**\n   * The UID of the Deployment.\n   */\n  K8S_DEPLOYMENT_UID: 'k8s.deployment.uid';\n\n  /**\n   * The name of the Deployment.\n   */\n  K8S_DEPLOYMENT_NAME: 'k8s.deployment.name';\n\n  /**\n   * The UID of the StatefulSet.\n   */\n  K8S_STATEFULSET_UID: 'k8s.statefulset.uid';\n\n  /**\n   * The name of the StatefulSet.\n   */\n  K8S_STATEFULSET_NAME: 'k8s.statefulset.name';\n\n  /**\n   * The UID of the DaemonSet.\n   */\n  K8S_DAEMONSET_UID: 'k8s.daemonset.uid';\n\n  /**\n   * The name of the DaemonSet.\n   */\n  K8S_DAEMONSET_NAME: 'k8s.daemonset.name';\n\n  /**\n   * The UID of the Job.\n   */\n  K8S_JOB_UID: 'k8s.job.uid';\n\n  /**\n   * The name of the Job.\n   */\n  K8S_JOB_NAME: 'k8s.job.name';\n\n  /**\n   * The UID of the CronJob.\n   */\n  K8S_CRONJOB_UID: 'k8s.cronjob.uid';\n\n  /**\n   * The name of the CronJob.\n   */\n  K8S_CRONJOB_NAME: 'k8s.cronjob.name';\n\n  /**\n   * The operating system type.\n   */\n  OS_TYPE: 'os.type';\n\n  /**\n   * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n   */\n  OS_DESCRIPTION: 'os.description';\n\n  /**\n   * Human readable operating system name.\n   */\n  OS_NAME: 'os.name';\n\n  /**\n   * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n   */\n  OS_VERSION: 'os.version';\n\n  /**\n   * Process identifier (PID).\n   */\n  PROCESS_PID: 'process.pid';\n\n  /**\n   * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n   */\n  PROCESS_EXECUTABLE_NAME: 'process.executable.name';\n\n  /**\n   * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n   */\n  PROCESS_EXECUTABLE_PATH: 'process.executable.path';\n\n  /**\n   * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n   */\n  PROCESS_COMMAND: 'process.command';\n\n  /**\n   * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n   */\n  PROCESS_COMMAND_LINE: 'process.command_line';\n\n  /**\n   * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n   */\n  PROCESS_COMMAND_ARGS: 'process.command_args';\n\n  /**\n   * The username of the user that owns the process.\n   */\n  PROCESS_OWNER: 'process.owner';\n\n  /**\n   * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n   */\n  PROCESS_RUNTIME_NAME: 'process.runtime.name';\n\n  /**\n   * The version of the runtime of this process, as returned by the runtime without modification.\n   */\n  PROCESS_RUNTIME_VERSION: 'process.runtime.version';\n\n  /**\n   * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n   */\n  PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description';\n\n  /**\n   * Logical name of the service.\n   *\n   * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n   */\n  SERVICE_NAME: 'service.name';\n\n  /**\n   * A namespace for `service.name`.\n   *\n   * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n   */\n  SERVICE_NAMESPACE: 'service.namespace';\n\n  /**\n   * The string ID of the service instance.\n   *\n   * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n   */\n  SERVICE_INSTANCE_ID: 'service.instance.id';\n\n  /**\n   * The version string of the service API or implementation.\n   */\n  SERVICE_VERSION: 'service.version';\n\n  /**\n   * The name of the telemetry SDK as defined above.\n   */\n  TELEMETRY_SDK_NAME: 'telemetry.sdk.name';\n\n  /**\n   * The language of the telemetry SDK.\n   */\n  TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language';\n\n  /**\n   * The version string of the telemetry SDK.\n   */\n  TELEMETRY_SDK_VERSION: 'telemetry.sdk.version';\n\n  /**\n   * The version string of the auto instrumentation agent, if used.\n   */\n  TELEMETRY_AUTO_VERSION: 'telemetry.auto.version';\n\n  /**\n   * The name of the web engine.\n   */\n  WEBENGINE_NAME: 'webengine.name';\n\n  /**\n   * The version of the web engine.\n   */\n  WEBENGINE_VERSION: 'webengine.version';\n\n  /**\n   * Additional description of the web engine (e.g. detailed version and edition information).\n   */\n  WEBENGINE_DESCRIPTION: 'webengine.description';\n};\n\n/**\n * Create exported Value Map for SemanticResourceAttributes values\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification\n */\nexport const SemanticResourceAttributes: SemanticResourceAttributes =\n  /*#__PURE__*/ createConstMap<SemanticResourceAttributes>([\n    TMP_CLOUD_PROVIDER,\n    TMP_CLOUD_ACCOUNT_ID,\n    TMP_CLOUD_REGION,\n    TMP_CLOUD_AVAILABILITY_ZONE,\n    TMP_CLOUD_PLATFORM,\n    TMP_AWS_ECS_CONTAINER_ARN,\n    TMP_AWS_ECS_CLUSTER_ARN,\n    TMP_AWS_ECS_LAUNCHTYPE,\n    TMP_AWS_ECS_TASK_ARN,\n    TMP_AWS_ECS_TASK_FAMILY,\n    TMP_AWS_ECS_TASK_REVISION,\n    TMP_AWS_EKS_CLUSTER_ARN,\n    TMP_AWS_LOG_GROUP_NAMES,\n    TMP_AWS_LOG_GROUP_ARNS,\n    TMP_AWS_LOG_STREAM_NAMES,\n    TMP_AWS_LOG_STREAM_ARNS,\n    TMP_CONTAINER_NAME,\n    TMP_CONTAINER_ID,\n    TMP_CONTAINER_RUNTIME,\n    TMP_CONTAINER_IMAGE_NAME,\n    TMP_CONTAINER_IMAGE_TAG,\n    TMP_DEPLOYMENT_ENVIRONMENT,\n    TMP_DEVICE_ID,\n    TMP_DEVICE_MODEL_IDENTIFIER,\n    TMP_DEVICE_MODEL_NAME,\n    TMP_FAAS_NAME,\n    TMP_FAAS_ID,\n    TMP_FAAS_VERSION,\n    TMP_FAAS_INSTANCE,\n    TMP_FAAS_MAX_MEMORY,\n    TMP_HOST_ID,\n    TMP_HOST_NAME,\n    TMP_HOST_TYPE,\n    TMP_HOST_ARCH,\n    TMP_HOST_IMAGE_NAME,\n    TMP_HOST_IMAGE_ID,\n    TMP_HOST_IMAGE_VERSION,\n    TMP_K8S_CLUSTER_NAME,\n    TMP_K8S_NODE_NAME,\n    TMP_K8S_NODE_UID,\n    TMP_K8S_NAMESPACE_NAME,\n    TMP_K8S_POD_UID,\n    TMP_K8S_POD_NAME,\n    TMP_K8S_CONTAINER_NAME,\n    TMP_K8S_REPLICASET_UID,\n    TMP_K8S_REPLICASET_NAME,\n    TMP_K8S_DEPLOYMENT_UID,\n    TMP_K8S_DEPLOYMENT_NAME,\n    TMP_K8S_STATEFULSET_UID,\n    TMP_K8S_STATEFULSET_NAME,\n    TMP_K8S_DAEMONSET_UID,\n    TMP_K8S_DAEMONSET_NAME,\n    TMP_K8S_JOB_UID,\n    TMP_K8S_JOB_NAME,\n    TMP_K8S_CRONJOB_UID,\n    TMP_K8S_CRONJOB_NAME,\n    TMP_OS_TYPE,\n    TMP_OS_DESCRIPTION,\n    TMP_OS_NAME,\n    TMP_OS_VERSION,\n    TMP_PROCESS_PID,\n    TMP_PROCESS_EXECUTABLE_NAME,\n    TMP_PROCESS_EXECUTABLE_PATH,\n    TMP_PROCESS_COMMAND,\n    TMP_PROCESS_COMMAND_LINE,\n    TMP_PROCESS_COMMAND_ARGS,\n    TMP_PROCESS_OWNER,\n    TMP_PROCESS_RUNTIME_NAME,\n    TMP_PROCESS_RUNTIME_VERSION,\n    TMP_PROCESS_RUNTIME_DESCRIPTION,\n    TMP_SERVICE_NAME,\n    TMP_SERVICE_NAMESPACE,\n    TMP_SERVICE_INSTANCE_ID,\n    TMP_SERVICE_VERSION,\n    TMP_TELEMETRY_SDK_NAME,\n    TMP_TELEMETRY_SDK_LANGUAGE,\n    TMP_TELEMETRY_SDK_VERSION,\n    TMP_TELEMETRY_AUTO_VERSION,\n    TMP_WEBENGINE_NAME,\n    TMP_WEBENGINE_VERSION,\n    TMP_WEBENGINE_DESCRIPTION,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_CLOUDPROVIDERVALUES_AWS = 'aws';\nconst TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_ALIBABA_CLOUD =\n  TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;\n\n/**\n * Identifies the Values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport type CloudProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud';\n\n  /** Amazon Web Services. */\n  AWS: 'aws';\n\n  /** Microsoft Azure. */\n  AZURE: 'azure';\n\n  /** Google Cloud Platform. */\n  GCP: 'gcp';\n};\n\n/**\n * The constant map of values for CloudProviderValues.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport const CloudProviderValues: CloudProviderValues =\n  /*#__PURE__*/ createConstMap<CloudProviderValues>([\n    TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_CLOUDPROVIDERVALUES_AWS,\n    TMP_CLOUDPROVIDERVALUES_AZURE,\n    TMP_CLOUDPROVIDERVALUES_GCP,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';\nconst TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';\nconst TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';\nconst TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';\nconst TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';\nconst TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';\nconst TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES =\n  'azure_container_instances';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';\nconst TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';\nconst TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';\nconst TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';\nconst TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';\nconst TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS =\n  TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC =\n  TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_LAMBDA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_LAMBDA =\n  TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK =\n  TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_VM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES =\n  TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_AKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_FUNCTIONS =\n  TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_APP_SERVICE =\n  TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_CLOUD_RUN =\n  TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS =\n  TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_APP_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;\n\n/**\n * Identifies the Values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport type CloudPlatformValues = {\n  /** Alibaba Cloud Elastic Compute Service. */\n  ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs';\n\n  /** Alibaba Cloud Function Compute. */\n  ALIBABA_CLOUD_FC: 'alibaba_cloud_fc';\n\n  /** AWS Elastic Compute Cloud. */\n  AWS_EC2: 'aws_ec2';\n\n  /** AWS Elastic Container Service. */\n  AWS_ECS: 'aws_ecs';\n\n  /** AWS Elastic Kubernetes Service. */\n  AWS_EKS: 'aws_eks';\n\n  /** AWS Lambda. */\n  AWS_LAMBDA: 'aws_lambda';\n\n  /** AWS Elastic Beanstalk. */\n  AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk';\n\n  /** Azure Virtual Machines. */\n  AZURE_VM: 'azure_vm';\n\n  /** Azure Container Instances. */\n  AZURE_CONTAINER_INSTANCES: 'azure_container_instances';\n\n  /** Azure Kubernetes Service. */\n  AZURE_AKS: 'azure_aks';\n\n  /** Azure Functions. */\n  AZURE_FUNCTIONS: 'azure_functions';\n\n  /** Azure App Service. */\n  AZURE_APP_SERVICE: 'azure_app_service';\n\n  /** Google Cloud Compute Engine (GCE). */\n  GCP_COMPUTE_ENGINE: 'gcp_compute_engine';\n\n  /** Google Cloud Run. */\n  GCP_CLOUD_RUN: 'gcp_cloud_run';\n\n  /** Google Cloud Kubernetes Engine (GKE). */\n  GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine';\n\n  /** Google Cloud Functions (GCF). */\n  GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions';\n\n  /** Google Cloud App Engine (GAE). */\n  GCP_APP_ENGINE: 'gcp_app_engine';\n};\n\n/**\n * The constant map of values for CloudPlatformValues.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport const CloudPlatformValues: CloudPlatformValues =\n  /*#__PURE__*/ createConstMap<CloudPlatformValues>([\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,\n    TMP_CLOUDPLATFORMVALUES_AWS_EC2,\n    TMP_CLOUDPLATFORMVALUES_AWS_ECS,\n    TMP_CLOUDPLATFORMVALUES_AWS_EKS,\n    TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,\n    TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,\n    TMP_CLOUDPLATFORMVALUES_AZURE_VM,\n    TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,\n    TMP_CLOUDPLATFORMVALUES_AZURE_AKS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n    TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n    TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';\nconst TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_FARGATE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const AWSECSLAUNCHTYPEVALUES_FARGATE =\n  TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;\n\n/**\n * Identifies the Values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport type AwsEcsLaunchtypeValues = {\n  /** ec2. */\n  EC2: 'ec2';\n\n  /** fargate. */\n  FARGATE: 'fargate';\n};\n\n/**\n * The constant map of values for AwsEcsLaunchtypeValues.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport const AwsEcsLaunchtypeValues: AwsEcsLaunchtypeValues =\n  /*#__PURE__*/ createConstMap<AwsEcsLaunchtypeValues>([\n    TMP_AWSECSLAUNCHTYPEVALUES_EC2,\n    TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HOSTARCHVALUES_AMD64 = 'amd64';\nconst TMP_HOSTARCHVALUES_ARM32 = 'arm32';\nconst TMP_HOSTARCHVALUES_ARM64 = 'arm64';\nconst TMP_HOSTARCHVALUES_IA64 = 'ia64';\nconst TMP_HOSTARCHVALUES_PPC32 = 'ppc32';\nconst TMP_HOSTARCHVALUES_PPC64 = 'ppc64';\nconst TMP_HOSTARCHVALUES_X86 = 'x86';\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_AMD64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_IA64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_X86 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;\n\n/**\n * Identifies the Values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport type HostArchValues = {\n  /** AMD64. */\n  AMD64: 'amd64';\n\n  /** ARM32. */\n  ARM32: 'arm32';\n\n  /** ARM64. */\n  ARM64: 'arm64';\n\n  /** Itanium. */\n  IA64: 'ia64';\n\n  /** 32-bit PowerPC. */\n  PPC32: 'ppc32';\n\n  /** 64-bit PowerPC. */\n  PPC64: 'ppc64';\n\n  /** 32-bit x86. */\n  X86: 'x86';\n};\n\n/**\n * The constant map of values for HostArchValues.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport const HostArchValues: HostArchValues =\n  /*#__PURE__*/ createConstMap<HostArchValues>([\n    TMP_HOSTARCHVALUES_AMD64,\n    TMP_HOSTARCHVALUES_ARM32,\n    TMP_HOSTARCHVALUES_ARM64,\n    TMP_HOSTARCHVALUES_IA64,\n    TMP_HOSTARCHVALUES_PPC32,\n    TMP_HOSTARCHVALUES_PPC64,\n    TMP_HOSTARCHVALUES_X86,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for OsTypeValues enum definition\n *\n * The operating system type.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_OSTYPEVALUES_WINDOWS = 'windows';\nconst TMP_OSTYPEVALUES_LINUX = 'linux';\nconst TMP_OSTYPEVALUES_DARWIN = 'darwin';\nconst TMP_OSTYPEVALUES_FREEBSD = 'freebsd';\nconst TMP_OSTYPEVALUES_NETBSD = 'netbsd';\nconst TMP_OSTYPEVALUES_OPENBSD = 'openbsd';\nconst TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';\nconst TMP_OSTYPEVALUES_HPUX = 'hpux';\nconst TMP_OSTYPEVALUES_AIX = 'aix';\nconst TMP_OSTYPEVALUES_SOLARIS = 'solaris';\nconst TMP_OSTYPEVALUES_Z_OS = 'z_os';\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_WINDOWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_LINUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DARWIN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_FREEBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_NETBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_OPENBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DRAGONFLYBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_HPUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_AIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_SOLARIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_Z_OS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;\n\n/**\n * Identifies the Values for OsTypeValues enum definition\n *\n * The operating system type.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport type OsTypeValues = {\n  /** Microsoft Windows. */\n  WINDOWS: 'windows';\n\n  /** Linux. */\n  LINUX: 'linux';\n\n  /** Apple Darwin. */\n  DARWIN: 'darwin';\n\n  /** FreeBSD. */\n  FREEBSD: 'freebsd';\n\n  /** NetBSD. */\n  NETBSD: 'netbsd';\n\n  /** OpenBSD. */\n  OPENBSD: 'openbsd';\n\n  /** DragonFly BSD. */\n  DRAGONFLYBSD: 'dragonflybsd';\n\n  /** HP-UX (Hewlett Packard Unix). */\n  HPUX: 'hpux';\n\n  /** AIX (Advanced Interactive eXecutive). */\n  AIX: 'aix';\n\n  /** Oracle Solaris. */\n  SOLARIS: 'solaris';\n\n  /** IBM z/OS. */\n  Z_OS: 'z_os';\n};\n\n/**\n * The constant map of values for OsTypeValues.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport const OsTypeValues: OsTypeValues =\n  /*#__PURE__*/ createConstMap<OsTypeValues>([\n    TMP_OSTYPEVALUES_WINDOWS,\n    TMP_OSTYPEVALUES_LINUX,\n    TMP_OSTYPEVALUES_DARWIN,\n    TMP_OSTYPEVALUES_FREEBSD,\n    TMP_OSTYPEVALUES_NETBSD,\n    TMP_OSTYPEVALUES_OPENBSD,\n    TMP_OSTYPEVALUES_DRAGONFLYBSD,\n    TMP_OSTYPEVALUES_HPUX,\n    TMP_OSTYPEVALUES_AIX,\n    TMP_OSTYPEVALUES_SOLARIS,\n    TMP_OSTYPEVALUES_Z_OS,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_CPP.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_CPP =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_DOTNET =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_ERLANG =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_GO.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_JAVA.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_JAVA =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_NODEJS =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PHP.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_PHP =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_PYTHON =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_RUBY.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_RUBY =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_WEBJS =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;\n\n/**\n * Identifies the Values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport type TelemetrySdkLanguageValues = {\n  /** cpp. */\n  CPP: 'cpp';\n\n  /** dotnet. */\n  DOTNET: 'dotnet';\n\n  /** erlang. */\n  ERLANG: 'erlang';\n\n  /** go. */\n  GO: 'go';\n\n  /** java. */\n  JAVA: 'java';\n\n  /** nodejs. */\n  NODEJS: 'nodejs';\n\n  /** php. */\n  PHP: 'php';\n\n  /** python. */\n  PYTHON: 'python';\n\n  /** ruby. */\n  RUBY: 'ruby';\n\n  /** webjs. */\n  WEBJS: 'webjs';\n};\n\n/**\n * The constant map of values for TelemetrySdkLanguageValues.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport const TelemetrySdkLanguageValues: TelemetrySdkLanguageValues =\n  /*#__PURE__*/ createConstMap<TelemetrySdkLanguageValues>([\n    TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_GO,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  ]);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates/registry/stable/attributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n/**\n * Rate-limiting result, shows whether the lease was acquired or contains a rejection reason\n * \n * @example acquired\n * @example request_canceled\n */\nexport const ATTR_ASPNETCORE_RATE_LIMITING_RESULT = 'aspnetcore.rate_limiting.result' as const;\n\n/**\n  * Enum value \"acquired\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = \"acquired\" as const;\n\n/**\n  * Enum value \"endpoint_limiter\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = \"endpoint_limiter\" as const;\n\n/**\n  * Enum value \"global_limiter\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = \"global_limiter\" as const;\n\n/**\n  * Enum value \"request_canceled\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = \"request_canceled\" as const;\n\n/**\n * The language of the telemetry SDK.\n */\nexport const ATTR_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language' as const;\n\n/**\n  * Enum value \"cpp\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_CPP = \"cpp\" as const;\n\n/**\n  * Enum value \"dotnet\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = \"dotnet\" as const;\n\n/**\n  * Enum value \"erlang\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = \"erlang\" as const;\n\n/**\n  * Enum value \"go\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_GO = \"go\" as const;\n\n/**\n  * Enum value \"java\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = \"java\" as const;\n\n/**\n  * Enum value \"nodejs\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = \"nodejs\" as const;\n\n/**\n  * Enum value \"php\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_PHP = \"php\" as const;\n\n/**\n  * Enum value \"python\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = \"python\" as const;\n\n/**\n  * Enum value \"ruby\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = \"ruby\" as const;\n\n/**\n  * Enum value \"rust\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_RUST = \"rust\" as const;\n\n/**\n  * Enum value \"swift\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = \"swift\" as const;\n\n/**\n  * Enum value \"webjs\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = \"webjs\" as const;\n\n/**\n * The name of the telemetry SDK as defined above.\n * \n * @example opentelemetry\n * \n * @note The OpenTelemetry SDK **MUST** set the `telemetry.sdk.name` attribute to `opentelemetry`.\n * If another SDK, like a fork or a vendor-provided implementation, is used, this SDK **MUST** set the\n * `telemetry.sdk.name` attribute to the fully-qualified class or module name of this SDK's main entry point\n * or another suitable identifier depending on the language.\n * The identifier `opentelemetry` is reserved and **MUST NOT** be used in this case.\n * All custom identifiers **SHOULD** be stable across different versions of an implementation.\n */\nexport const ATTR_TELEMETRY_SDK_NAME = 'telemetry.sdk.name' as const;\n\n/**\n * The version string of the telemetry SDK.\n * \n * @example 1.2.3\n */\nexport const ATTR_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version' as const;\n\n/**\n * Full type name of the [`IExceptionHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.diagnostics.iexceptionhandler) implementation that handled the exception.\n * \n * @example Contoso.MyHandler\n */\nexport const ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = 'aspnetcore.diagnostics.handler.type' as const;\n\n/**\n * ASP.NET Core exception middleware handling result\n * \n * @example handled\n * @example unhandled\n */\nexport const ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = 'aspnetcore.diagnostics.exception.result' as const;\n\n/**\n  * Enum value \"aborted\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = \"aborted\" as const;\n\n/**\n  * Enum value \"handled\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = \"handled\" as const;\n\n/**\n  * Enum value \"skipped\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = \"skipped\" as const;\n\n/**\n  * Enum value \"unhandled\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = \"unhandled\" as const;\n\n/**\n * Rate limiting policy name.\n * \n * @example fixed\n * @example sliding\n * @example token\n */\nexport const ATTR_ASPNETCORE_RATE_LIMITING_POLICY = 'aspnetcore.rate_limiting.policy' as const;\n\n/**\n * Flag indicating if request was handled by the application pipeline.\n * \n * @example true\n */\nexport const ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = 'aspnetcore.request.is_unhandled' as const;\n\n/**\n * A value that indicates whether the matched route is a fallback route.\n * \n * @example true\n */\nexport const ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = 'aspnetcore.routing.is_fallback' as const;\n\n/**\n * Match result - success or failure\n * \n * @example success\n * @example failure\n */\nexport const ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = 'aspnetcore.routing.match_status' as const;\n\n/**\n  * Enum value \"failure\" for attribute {@link ATTR_ASPNETCORE_ROUTING_MATCH_STATUS}.\n  */\nexport const ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = \"failure\" as const;\n\n/**\n  * Enum value \"success\" for attribute {@link ATTR_ASPNETCORE_ROUTING_MATCH_STATUS}.\n  */\nexport const ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = \"success\" as const;\n\n/**\n * Client address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n * \n * @example client.example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n * \n * @note When observed from the server side, and when communicating through an intermediary, `client.address` **SHOULD** represent the client address behind any intermediaries,  for example proxies, if it's available.\n */\nexport const ATTR_CLIENT_ADDRESS = 'client.address' as const;\n\n/**\n * Client port number.\n * \n * @example 65123\n * \n * @note When observed from the server side, and when communicating through an intermediary, `client.port` **SHOULD** represent the client port behind any intermediaries,  for example proxies, if it's available.\n */\nexport const ATTR_CLIENT_PORT = 'client.port' as const;\n\n/**\n * Describes a class of error the operation ended with.\n * \n * @example timeout\n * @example java.net.UnknownHostException\n * @example server_certificate_invalid\n * @example 500\n * \n * @note The `error.type` **SHOULD** be predictable, and **SHOULD** have low cardinality.\n * \n * When `error.type` is set to a type (e.g., an exception type), its\n * canonical class name identifying the type within the artifact **SHOULD** be used.\n * \n * Instrumentations **SHOULD** document the list of errors they report.\n * \n * The cardinality of `error.type` within one instrumentation library **SHOULD** be low.\n * Telemetry consumers that aggregate data from multiple instrumentation libraries and applications\n * should be prepared for `error.type` to have high cardinality at query time when no\n * additional filters are applied.\n * \n * If the operation has completed successfully, instrumentations **SHOULD NOT** set `error.type`.\n * \n * If a specific domain defines its own set of error identifiers (such as HTTP or gRPC status codes),\n * it's **RECOMMENDED** to:\n * \n *   - Use a domain-specific attribute\n *   - Set `error.type` to capture all errors, regardless of whether they are defined within the domain-specific set or not.\n */\nexport const ATTR_ERROR_TYPE = 'error.type' as const;\n\n/**\n  * Enum value \"_OTHER\" for attribute {@link ATTR_ERROR_TYPE}.\n  */\nexport const ERROR_TYPE_VALUE_OTHER = \"_OTHER\" as const;\n\n/**\n * **SHOULD** be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n * \n * @note An exception is considered to have escaped (or left) the scope of a span,\n * if that span is ended while the exception is still logically \"in flight\".\n * This may be actually \"in flight\" in some languages (e.g. if the exception\n * is passed to a Context manager's `__exit__` method in Python) but will\n * usually be caught at the point of recording the exception in most languages.\n * \n * It is usually not possible to determine at the point where an exception is thrown\n * whether it will escape the scope of a span.\n * However, it is trivial to know that an exception\n * will escape, if one checks for an active exception just before ending the span,\n * as done in the [example for recording span exceptions](https://opentelemetry.io/docs/specs/semconv/exceptions/exceptions-spans/#recording-an-exception).\n * \n * It follows that an exception may still escape the scope of the span\n * even if the `exception.escaped` attribute was not set or set to false,\n * since the event might have been recorded at a time where it was not\n * clear whether the exception will escape.\n */\nexport const ATTR_EXCEPTION_ESCAPED = 'exception.escaped' as const;\n\n/**\n * The exception message.\n * \n * @example Division by zero\n * @example Can't convert 'int' object to str implicitly\n */\nexport const ATTR_EXCEPTION_MESSAGE = 'exception.message' as const;\n\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n * \n * @example \"Exception in thread \"main\" java.lang.RuntimeException: Test exception\\\\n at com.example.GenerateTrace.methodB(GenerateTrace.java:13)\\\\n at com.example.GenerateTrace.methodA(GenerateTrace.java:9)\\\\n at com.example.GenerateTrace.main(GenerateTrace.java:5)\\\\n\"\n */\nexport const ATTR_EXCEPTION_STACKTRACE = 'exception.stacktrace' as const;\n\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n * \n * @example java.net.ConnectException\n * @example OSError\n */\nexport const ATTR_EXCEPTION_TYPE = 'exception.type' as const;\n\n/**\n * HTTP request headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.\n * \n * @example http.request.header.content-type=[\"application/json\"]\n * @example http.request.header.x-forwarded-for=[\"1.2.3.4\", \"1.2.3.5\"]\n * \n * @note Instrumentations **SHOULD** require an explicit configuration of which headers are to be captured. Including all request headers can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * The `User-Agent` header is already captured in the `user_agent.original` attribute. Users **MAY** explicitly configure instrumentations to capture them even though it is not recommended.\n * The attribute value **MUST** consist of either multiple header values as an array of strings or a single-item array containing a possibly comma-concatenated string, depending on the way the HTTP library provides access to headers.\n */\nexport const ATTR_HTTP_REQUEST_HEADER = (key: string) => `http.request.header.${key}`;\n\n/**\n * HTTP request method.\n * \n * @example GET\n * @example POST\n * @example HEAD\n * \n * @note HTTP request method value **SHOULD** be \"known\" to the instrumentation.\n * By default, this convention defines \"known\" methods as the ones listed in [RFC9110](https://www.rfc-editor.org/rfc/rfc9110.html#name-methods)\n * and the PATCH method defined in [RFC5789](https://www.rfc-editor.org/rfc/rfc5789.html).\n * \n * If the HTTP request method is not known to instrumentation, it **MUST** set the `http.request.method` attribute to `_OTHER`.\n * \n * If the HTTP instrumentation could end up converting valid HTTP request methods to `_OTHER`, then it **MUST** provide a way to override\n * the list of known HTTP methods. If this override is done via environment variable, then the environment variable **MUST** be named\n * OTEL_INSTRUMENTATION_HTTP_KNOWN_METHODS and support a comma-separated list of case-sensitive known HTTP methods\n * (this list **MUST** be a full override of the default known method, it is not a list of known methods in addition to the defaults).\n * \n * HTTP method names are case-sensitive and `http.request.method` attribute value **MUST** match a known HTTP method name exactly.\n * Instrumentations for specific web frameworks that consider HTTP methods to be case insensitive, **SHOULD** populate a canonical equivalent.\n * Tracing instrumentations that do so, **MUST** also set `http.request.method_original` to the original value.\n */\nexport const ATTR_HTTP_REQUEST_METHOD = 'http.request.method' as const;\n\n/**\n  * Enum value \"_OTHER\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_OTHER = \"_OTHER\" as const;\n\n/**\n  * Enum value \"CONNECT\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_CONNECT = \"CONNECT\" as const;\n\n/**\n  * Enum value \"DELETE\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_DELETE = \"DELETE\" as const;\n\n/**\n  * Enum value \"GET\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_GET = \"GET\" as const;\n\n/**\n  * Enum value \"HEAD\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_HEAD = \"HEAD\" as const;\n\n/**\n  * Enum value \"OPTIONS\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_OPTIONS = \"OPTIONS\" as const;\n\n/**\n  * Enum value \"PATCH\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_PATCH = \"PATCH\" as const;\n\n/**\n  * Enum value \"POST\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_POST = \"POST\" as const;\n\n/**\n  * Enum value \"PUT\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_PUT = \"PUT\" as const;\n\n/**\n  * Enum value \"TRACE\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_TRACE = \"TRACE\" as const;\n\n/**\n * Original HTTP method sent by the client in the request line.\n * \n * @example GeT\n * @example ACL\n * @example foo\n */\nexport const ATTR_HTTP_REQUEST_METHOD_ORIGINAL = 'http.request.method_original' as const;\n\n/**\n * The ordinal number of request resending attempt (for any reason, including redirects).\n * \n * @example 3\n * \n * @note The resend count **SHOULD** be updated each time an HTTP request gets resent by the client, regardless of what was the cause of the resending (e.g. redirection, authorization failure, 503 Server Unavailable, network issues, or any other).\n */\nexport const ATTR_HTTP_REQUEST_RESEND_COUNT = 'http.request.resend_count' as const;\n\n/**\n * HTTP response headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.\n * \n * @example http.response.header.content-type=[\"application/json\"]\n * @example http.response.header.my-custom-header=[\"abc\", \"def\"]\n * \n * @note Instrumentations **SHOULD** require an explicit configuration of which headers are to be captured. Including all response headers can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * Users **MAY** explicitly configure instrumentations to capture them even though it is not recommended.\n * The attribute value **MUST** consist of either multiple header values as an array of strings or a single-item array containing a possibly comma-concatenated string, depending on the way the HTTP library provides access to headers.\n */\nexport const ATTR_HTTP_RESPONSE_HEADER = (key: string) => `http.response.header.${key}`;\n\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n * \n * @example 200\n */\nexport const ATTR_HTTP_RESPONSE_STATUS_CODE = 'http.response.status_code' as const;\n\n/**\n * The matched route, that is, the path template in the format used by the respective server framework.\n * \n * @example /users/:userID?\n * @example {controller}/{action}/{id?}\n * \n * @note **MUST NOT** be populated when this is not supported by the HTTP server framework as the route attribute should have low-cardinality and the URI path can NOT substitute it.\n * **SHOULD** include the [application root](/docs/http/http-spans.md#http-server-definitions) if there is one.\n */\nexport const ATTR_HTTP_ROUTE = 'http.route' as const;\n\n/**\n * Name of the garbage collector action.\n * \n * @example end of minor GC\n * @example end of major GC\n * \n * @note Garbage collector action is generally obtained via [GarbageCollectionNotificationInfo#getGcAction()](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.management/com/sun/management/GarbageCollectionNotificationInfo.html#getGcAction()).\n */\nexport const ATTR_JVM_GC_ACTION = 'jvm.gc.action' as const;\n\n/**\n * Name of the garbage collector.\n * \n * @example G1 Young Generation\n * @example G1 Old Generation\n * \n * @note Garbage collector name is generally obtained via [GarbageCollectionNotificationInfo#getGcName()](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.management/com/sun/management/GarbageCollectionNotificationInfo.html#getGcName()).\n */\nexport const ATTR_JVM_GC_NAME = 'jvm.gc.name' as const;\n\n/**\n * Name of the memory pool.\n * \n * @example G1 Old Gen\n * @example G1 Eden space\n * @example G1 Survivor Space\n * \n * @note Pool names are generally obtained via [MemoryPoolMXBean#getName()](https://docs.oracle.com/en/java/javase/11/docs/api/java.management/java/lang/management/MemoryPoolMXBean.html#getName()).\n */\nexport const ATTR_JVM_MEMORY_POOL_NAME = 'jvm.memory.pool.name' as const;\n\n/**\n * The type of memory.\n * \n * @example heap\n * @example non_heap\n */\nexport const ATTR_JVM_MEMORY_TYPE = 'jvm.memory.type' as const;\n\n/**\n  * Enum value \"heap\" for attribute {@link ATTR_JVM_MEMORY_TYPE}.\n  */\nexport const JVM_MEMORY_TYPE_VALUE_HEAP = \"heap\" as const;\n\n/**\n  * Enum value \"non_heap\" for attribute {@link ATTR_JVM_MEMORY_TYPE}.\n  */\nexport const JVM_MEMORY_TYPE_VALUE_NON_HEAP = \"non_heap\" as const;\n\n/**\n * Whether the thread is daemon or not.\n */\nexport const ATTR_JVM_THREAD_DAEMON = 'jvm.thread.daemon' as const;\n\n/**\n * State of the thread.\n * \n * @example runnable\n * @example blocked\n */\nexport const ATTR_JVM_THREAD_STATE = 'jvm.thread.state' as const;\n\n/**\n  * Enum value \"blocked\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_BLOCKED = \"blocked\" as const;\n\n/**\n  * Enum value \"new\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_NEW = \"new\" as const;\n\n/**\n  * Enum value \"runnable\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_RUNNABLE = \"runnable\" as const;\n\n/**\n  * Enum value \"terminated\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_TERMINATED = \"terminated\" as const;\n\n/**\n  * Enum value \"timed_waiting\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_TIMED_WAITING = \"timed_waiting\" as const;\n\n/**\n  * Enum value \"waiting\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_WAITING = \"waiting\" as const;\n\n/**\n * Local address of the network connection - IP address or Unix domain socket name.\n * \n * @example 10.1.2.80\n * @example /tmp/my.sock\n */\nexport const ATTR_NETWORK_LOCAL_ADDRESS = 'network.local.address' as const;\n\n/**\n * Local port number of the network connection.\n * \n * @example 65123\n */\nexport const ATTR_NETWORK_LOCAL_PORT = 'network.local.port' as const;\n\n/**\n * Peer address of the network connection - IP address or Unix domain socket name.\n * \n * @example 10.1.2.80\n * @example /tmp/my.sock\n */\nexport const ATTR_NETWORK_PEER_ADDRESS = 'network.peer.address' as const;\n\n/**\n * Peer port number of the network connection.\n * \n * @example 65123\n */\nexport const ATTR_NETWORK_PEER_PORT = 'network.peer.port' as const;\n\n/**\n * [OSI application layer](https://osi-model.com/application-layer/) or non-OSI equivalent.\n * \n * @example amqp\n * @example http\n * @example mqtt\n * \n * @note The value **SHOULD** be normalized to lowercase.\n */\nexport const ATTR_NETWORK_PROTOCOL_NAME = 'network.protocol.name' as const;\n\n/**\n * The actual version of the protocol used for network communication.\n * \n * @example 1.1\n * @example 2\n * \n * @note If protocol version is subject to negotiation (for example using [ALPN](https://www.rfc-editor.org/rfc/rfc7301.html)), this attribute **SHOULD** be set to the negotiated version. If the actual protocol version is not known, this attribute **SHOULD NOT** be set.\n */\nexport const ATTR_NETWORK_PROTOCOL_VERSION = 'network.protocol.version' as const;\n\n/**\n * [OSI transport layer](https://osi-model.com/transport-layer/) or [inter-process communication method](https://wikipedia.org/wiki/Inter-process_communication).\n * \n * @example tcp\n * @example udp\n * \n * @note The value **SHOULD** be normalized to lowercase.\n * \n * Consider always setting the transport when setting a port number, since\n * a port number is ambiguous without knowing the transport. For example\n * different processes could be listening on TCP port 12345 and UDP port 12345.\n */\nexport const ATTR_NETWORK_TRANSPORT = 'network.transport' as const;\n\n/**\n  * Enum value \"pipe\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_PIPE = \"pipe\" as const;\n\n/**\n  * Enum value \"quic\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_QUIC = \"quic\" as const;\n\n/**\n  * Enum value \"tcp\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_TCP = \"tcp\" as const;\n\n/**\n  * Enum value \"udp\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_UDP = \"udp\" as const;\n\n/**\n  * Enum value \"unix\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_UNIX = \"unix\" as const;\n\n/**\n * [OSI network layer](https://osi-model.com/network-layer/) or non-OSI equivalent.\n * \n * @example ipv4\n * @example ipv6\n * \n * @note The value **SHOULD** be normalized to lowercase.\n */\nexport const ATTR_NETWORK_TYPE = 'network.type' as const;\n\n/**\n  * Enum value \"ipv4\" for attribute {@link ATTR_NETWORK_TYPE}.\n  */\nexport const NETWORK_TYPE_VALUE_IPV4 = \"ipv4\" as const;\n\n/**\n  * Enum value \"ipv6\" for attribute {@link ATTR_NETWORK_TYPE}.\n  */\nexport const NETWORK_TYPE_VALUE_IPV6 = \"ipv6\" as const;\n\n/**\n * The name of the instrumentation scope - (`InstrumentationScope.Name` in OTLP).\n * \n * @example io.opentelemetry.contrib.mongodb\n */\nexport const ATTR_OTEL_SCOPE_NAME = 'otel.scope.name' as const;\n\n/**\n * The version of the instrumentation scope - (`InstrumentationScope.Version` in OTLP).\n * \n * @example 1.0.0\n */\nexport const ATTR_OTEL_SCOPE_VERSION = 'otel.scope.version' as const;\n\n/**\n * Name of the code, either \"OK\" or \"ERROR\". **MUST NOT** be set if the status code is UNSET.\n */\nexport const ATTR_OTEL_STATUS_CODE = 'otel.status_code' as const;\n\n/**\n  * Enum value \"ERROR\" for attribute {@link ATTR_OTEL_STATUS_CODE}.\n  */\nexport const OTEL_STATUS_CODE_VALUE_ERROR = \"ERROR\" as const;\n\n/**\n  * Enum value \"OK\" for attribute {@link ATTR_OTEL_STATUS_CODE}.\n  */\nexport const OTEL_STATUS_CODE_VALUE_OK = \"OK\" as const;\n\n/**\n * Description of the Status if it has a value, otherwise not set.\n * \n * @example resource not found\n */\nexport const ATTR_OTEL_STATUS_DESCRIPTION = 'otel.status_description' as const;\n\n/**\n * Server domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n * \n * @example example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n * \n * @note When observed from the client side, and when communicating through an intermediary, `server.address` **SHOULD** represent the server address behind any intermediaries, for example proxies, if it's available.\n */\nexport const ATTR_SERVER_ADDRESS = 'server.address' as const;\n\n/**\n * Server port number.\n * \n * @example 80\n * @example 8080\n * @example 443\n * \n * @note When observed from the client side, and when communicating through an intermediary, `server.port` **SHOULD** represent the server port behind any intermediaries, for example proxies, if it's available.\n */\nexport const ATTR_SERVER_PORT = 'server.port' as const;\n\n/**\n * Logical name of the service.\n * \n * @example shoppingcart\n * \n * @note **MUST** be the same for all instances of horizontally scaled services. If the value was not specified, SDKs **MUST** fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value **MUST** be set to `unknown_service`.\n */\nexport const ATTR_SERVICE_NAME = 'service.name' as const;\n\n/**\n * The version string of the service API or implementation. The format is not defined by these conventions.\n * \n * @example 2.0.0\n * @example a01dbef8a\n */\nexport const ATTR_SERVICE_VERSION = 'service.version' as const;\n\n/**\n * SignalR HTTP connection closure status.\n * \n * @example app_shutdown\n * @example timeout\n */\nexport const ATTR_SIGNALR_CONNECTION_STATUS = 'signalr.connection.status' as const;\n\n/**\n  * Enum value \"app_shutdown\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport const SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = \"app_shutdown\" as const;\n\n/**\n  * Enum value \"normal_closure\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport const SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = \"normal_closure\" as const;\n\n/**\n  * Enum value \"timeout\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport const SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = \"timeout\" as const;\n\n/**\n * [SignalR transport type](https://github.com/dotnet/aspnetcore/blob/main/src/SignalR/docs/specs/TransportProtocols.md)\n * \n * @example web_sockets\n * @example long_polling\n */\nexport const ATTR_SIGNALR_TRANSPORT = 'signalr.transport' as const;\n\n/**\n  * Enum value \"long_polling\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport const SIGNALR_TRANSPORT_VALUE_LONG_POLLING = \"long_polling\" as const;\n\n/**\n  * Enum value \"server_sent_events\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport const SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = \"server_sent_events\" as const;\n\n/**\n  * Enum value \"web_sockets\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport const SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = \"web_sockets\" as const;\n\n/**\n * The [URI fragment](https://www.rfc-editor.org/rfc/rfc3986#section-3.5) component\n * \n * @example SemConv\n */\nexport const ATTR_URL_FRAGMENT = 'url.fragment' as const;\n\n/**\n * Absolute URL describing a network resource according to [RFC3986](https://www.rfc-editor.org/rfc/rfc3986)\n * \n * @example https://www.foo.bar/search?q=OpenTelemetry#SemConv\n * @example //localhost\n * \n * @note For network calls, URL usually has `scheme://host[:port][path][?query][#fragment]` format, where the fragment is not transmitted over HTTP, but if it is known, it **SHOULD** be included nevertheless.\n * `url.full` **MUST NOT** contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case username and password **SHOULD** be redacted and attribute's value **SHOULD** be `https://REDACTED:REDACTED@www.example.com/`.\n * `url.full` **SHOULD** capture the absolute URL when it is available (or can be reconstructed). Sensitive content provided in `url.full` **SHOULD** be scrubbed when instrumentations can identify it.\n */\nexport const ATTR_URL_FULL = 'url.full' as const;\n\n/**\n * The [URI path](https://www.rfc-editor.org/rfc/rfc3986#section-3.3) component\n * \n * @example /search\n * \n * @note Sensitive content provided in `url.path` **SHOULD** be scrubbed when instrumentations can identify it.\n */\nexport const ATTR_URL_PATH = 'url.path' as const;\n\n/**\n * The [URI query](https://www.rfc-editor.org/rfc/rfc3986#section-3.4) component\n * \n * @example q=OpenTelemetry\n * \n * @note Sensitive content provided in `url.query` **SHOULD** be scrubbed when instrumentations can identify it.\n */\nexport const ATTR_URL_QUERY = 'url.query' as const;\n\n/**\n * The [URI scheme](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) component identifying the used protocol.\n * \n * @example https\n * @example ftp\n * @example telnet\n */\nexport const ATTR_URL_SCHEME = 'url.scheme' as const;\n\n/**\n * Value of the [HTTP User-Agent](https://www.rfc-editor.org/rfc/rfc9110.html#field.user-agent) header sent by the client.\n * \n * @example CERN-LineMode/2.15 libwww/2.17b3\n * @example Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1\n * @example YourApp/1.0.0 grpc-java-okhttp/1.27.2\n */\nexport const ATTR_USER_AGENT_ORIGINAL = 'user_agent.original' as const;\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates/register/stable/metrics.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n/**\n * Number of exceptions caught by exception handling middleware.\n * \n * @note Meter name: `Microsoft.AspNetCore.Diagnostics`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_ASPNETCORE_DIAGNOSTICS_EXCEPTIONS = 'aspnetcore.diagnostics.exceptions' as const;\n\n/**\n * Number of requests that are currently active on the server that hold a rate limiting lease.\n * \n * @note Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_ASPNETCORE_RATE_LIMITING_ACTIVE_REQUEST_LEASES = 'aspnetcore.rate_limiting.active_request_leases' as const;\n\n/**\n * Number of requests that are currently queued, waiting to acquire a rate limiting lease.\n * \n * @note Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_ASPNETCORE_RATE_LIMITING_QUEUED_REQUESTS = 'aspnetcore.rate_limiting.queued_requests' as const;\n\n/**\n * The time the request spent in a queue waiting to acquire a rate limiting lease.\n * \n * @note Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_TIME_IN_QUEUE = 'aspnetcore.rate_limiting.request.time_in_queue' as const;\n\n/**\n * The duration of rate limiting lease held by requests on the server.\n * \n * @note Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_LEASE_DURATION = 'aspnetcore.rate_limiting.request_lease.duration' as const;\n\n/**\n * Number of requests that tried to acquire a rate limiting lease.\n * \n * @note Requests could be:\n * \n *   - Rejected by global or endpoint rate limiting policies\n *   - Canceled while waiting for the lease.\n * \n * Meter name: `Microsoft.AspNetCore.RateLimiting`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_ASPNETCORE_RATE_LIMITING_REQUESTS = 'aspnetcore.rate_limiting.requests' as const;\n\n/**\n * Number of requests that were attempted to be matched to an endpoint.\n * \n * @note Meter name: `Microsoft.AspNetCore.Routing`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_ASPNETCORE_ROUTING_MATCH_ATTEMPTS = 'aspnetcore.routing.match_attempts' as const;\n\n/**\n * Duration of HTTP client requests.\n */\nexport const METRIC_HTTP_CLIENT_REQUEST_DURATION = 'http.client.request.duration' as const;\n\n/**\n * Duration of HTTP server requests.\n */\nexport const METRIC_HTTP_SERVER_REQUEST_DURATION = 'http.server.request.duration' as const;\n\n/**\n * Number of classes currently loaded.\n */\nexport const METRIC_JVM_CLASS_COUNT = 'jvm.class.count' as const;\n\n/**\n * Number of classes loaded since JVM start.\n */\nexport const METRIC_JVM_CLASS_LOADED = 'jvm.class.loaded' as const;\n\n/**\n * Number of classes unloaded since JVM start.\n */\nexport const METRIC_JVM_CLASS_UNLOADED = 'jvm.class.unloaded' as const;\n\n/**\n * Number of processors available to the Java virtual machine.\n */\nexport const METRIC_JVM_CPU_COUNT = 'jvm.cpu.count' as const;\n\n/**\n * Recent CPU utilization for the process as reported by the JVM.\n * \n * @note The value range is [0.0,1.0]. This utilization is not defined as being for the specific interval since last measurement (unlike `system.cpu.utilization`). [Reference](https://docs.oracle.com/en/java/javase/17/docs/api/jdk.management/com/sun/management/OperatingSystemMXBean.html#getProcessCpuLoad()).\n */\nexport const METRIC_JVM_CPU_RECENT_UTILIZATION = 'jvm.cpu.recent_utilization' as const;\n\n/**\n * CPU time used by the process as reported by the JVM.\n */\nexport const METRIC_JVM_CPU_TIME = 'jvm.cpu.time' as const;\n\n/**\n * Duration of JVM garbage collection actions.\n */\nexport const METRIC_JVM_GC_DURATION = 'jvm.gc.duration' as const;\n\n/**\n * Measure of memory committed.\n */\nexport const METRIC_JVM_MEMORY_COMMITTED = 'jvm.memory.committed' as const;\n\n/**\n * Measure of max obtainable memory.\n */\nexport const METRIC_JVM_MEMORY_LIMIT = 'jvm.memory.limit' as const;\n\n/**\n * Measure of memory used.\n */\nexport const METRIC_JVM_MEMORY_USED = 'jvm.memory.used' as const;\n\n/**\n * Measure of memory used, as measured after the most recent garbage collection event on this pool.\n */\nexport const METRIC_JVM_MEMORY_USED_AFTER_LAST_GC = 'jvm.memory.used_after_last_gc' as const;\n\n/**\n * Number of executing platform threads.\n */\nexport const METRIC_JVM_THREAD_COUNT = 'jvm.thread.count' as const;\n\n/**\n * Number of connections that are currently active on the server.\n * \n * @note Meter name: `Microsoft.AspNetCore.Server.Kestrel`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_KESTREL_ACTIVE_CONNECTIONS = 'kestrel.active_connections' as const;\n\n/**\n * Number of TLS handshakes that are currently in progress on the server.\n * \n * @note Meter name: `Microsoft.AspNetCore.Server.Kestrel`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_KESTREL_ACTIVE_TLS_HANDSHAKES = 'kestrel.active_tls_handshakes' as const;\n\n/**\n * The duration of connections on the server.\n * \n * @note Meter name: `Microsoft.AspNetCore.Server.Kestrel`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_KESTREL_CONNECTION_DURATION = 'kestrel.connection.duration' as const;\n\n/**\n * Number of connections that are currently queued and are waiting to start.\n * \n * @note Meter name: `Microsoft.AspNetCore.Server.Kestrel`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_KESTREL_QUEUED_CONNECTIONS = 'kestrel.queued_connections' as const;\n\n/**\n * Number of HTTP requests on multiplexed connections (HTTP/2 and HTTP/3) that are currently queued and are waiting to start.\n * \n * @note Meter name: `Microsoft.AspNetCore.Server.Kestrel`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_KESTREL_QUEUED_REQUESTS = 'kestrel.queued_requests' as const;\n\n/**\n * Number of connections rejected by the server.\n * \n * @note Connections are rejected when the currently active count exceeds the value configured with `MaxConcurrentConnections`.\n * Meter name: `Microsoft.AspNetCore.Server.Kestrel`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_KESTREL_REJECTED_CONNECTIONS = 'kestrel.rejected_connections' as const;\n\n/**\n * The duration of TLS handshakes on the server.\n * \n * @note Meter name: `Microsoft.AspNetCore.Server.Kestrel`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_KESTREL_TLS_HANDSHAKE_DURATION = 'kestrel.tls_handshake.duration' as const;\n\n/**\n * Number of connections that are currently upgraded (WebSockets). .\n * \n * @note The counter only tracks HTTP/1.1 connections.\n * \n * Meter name: `Microsoft.AspNetCore.Server.Kestrel`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_KESTREL_UPGRADED_CONNECTIONS = 'kestrel.upgraded_connections' as const;\n\n/**\n * Number of connections that are currently active on the server.\n * \n * @note Meter name: `Microsoft.AspNetCore.Http.Connections`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_SIGNALR_SERVER_ACTIVE_CONNECTIONS = 'signalr.server.active_connections' as const;\n\n/**\n * The duration of connections on the server.\n * \n * @note Meter name: `Microsoft.AspNetCore.Http.Connections`; Added in: ASP.NET Core 8.0\n */\nexport const METRIC_SIGNALR_SERVER_CONNECTION_DURATION = 'signalr.server.connection.duration' as const;\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer: number): void {}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to extract with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey, Span } from '@opentelemetry/api';\n\nconst RPC_METADATA_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key RPC_METADATA'\n);\n\nexport enum RPCType {\n  HTTP = 'http',\n}\n\ntype HTTPMetadata = {\n  type: RPCType.HTTP;\n  route?: string;\n  span: Span;\n};\n\n/**\n * Allows for future rpc metadata to be used with this mechanism\n */\nexport type RPCMetadata = HTTPMetadata;\n\nexport function setRPCMetadata(context: Context, meta: RPCMetadata): Context {\n  return context.setValue(RPC_METADATA_KEY, meta);\n}\n\nexport function deleteRPCMetadata(context: Context): Context {\n  return context.deleteValue(RPC_METADATA_KEY);\n}\n\nexport function getRPCMetadata(context: Context): RPCMetadata | undefined {\n  return context.getValue(RPC_METADATA_KEY) as RPCMetadata | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  Sampler,\n  SamplingResult,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  isValidTraceId,\n} from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<\n    any,\n    ObjectInto[]\n  >();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return (\n    !isPrimitive(value) &&\n    !isArray(value) &&\n    !isFunction(value) &&\n    typeof value === 'object'\n  );\n}\n\nfunction isPrimitive(value: any): boolean {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null\n  );\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function (arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (\n    typeof Ctor == 'function' &&\n    Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString\n  );\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(\n  promise: Promise<T>,\n  timeout: number\n): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(\n    _resolve,\n    reject\n  ) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(\n    result => {\n      clearTimeout(timeoutHandle);\n      return result;\n    },\n    reason => {\n      clearTimeout(timeoutHandle);\n      throw reason;\n    }\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from '../common/types';\n\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport { ExportResult } from '../ExportResult';\nimport { suppressTracing } from '../trace/suppress-tracing';\n\nexport interface Exporter<T> {\n  export(arg: T, resultCallback: (result: ExportResult) => void): void;\n}\n\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppression of Traces.\n */\nexport function _export<T>(\n  exporter: Exporter<T>,\n  arg: T\n): Promise<ExportResult> {\n  return new Promise(resolve => {\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      exporter.export(arg, (result: ExportResult) => {\n        resolve(result);\n      });\n    });\n  });\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  diag,\n  Exception,\n  HrTime,\n  Link,\n  Span as APISpan,\n  SpanAttributes,\n  SpanAttributeValue,\n  SpanContext,\n  SpanKind,\n  SpanStatus,\n  SpanStatusCode,\n  TimeInput,\n} from '@opentelemetry/api';\nimport {\n  addHrTimes,\n  millisToHrTime,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  InstrumentationLibrary,\n  isAttributeValue,\n  isTimeInput,\n  isTimeInputHrTime,\n  otperformance,\n  sanitizeAttributes,\n} from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport {\n  SEMATTRS_EXCEPTION_MESSAGE,\n  SEMATTRS_EXCEPTION_STACKTRACE,\n  SEMATTRS_EXCEPTION_TYPE,\n} from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { SpanProcessor } from './SpanProcessor';\nimport { TimedEvent } from './TimedEvent';\nimport { Tracer } from './Tracer';\nimport { SpanLimits } from './types';\n\n/**\n * This class represents a span.\n */\nexport class Span implements APISpan, ReadableSpan {\n  // Below properties are included to implement ReadableSpan for export\n  // purposes but are not intended to be written-to directly.\n  private readonly _spanContext: SpanContext;\n  readonly kind: SpanKind;\n  readonly parentSpanId?: string;\n  readonly attributes: SpanAttributes = {};\n  readonly links: Link[] = [];\n  readonly events: TimedEvent[] = [];\n  readonly startTime: HrTime;\n  readonly resource: IResource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  private _droppedAttributesCount = 0;\n  private _droppedEventsCount: number = 0;\n  private _droppedLinksCount: number = 0;\n\n  name: string;\n  status: SpanStatus = {\n    code: SpanStatusCode.UNSET,\n  };\n  endTime: HrTime = [0, 0];\n  private _ended = false;\n  private _duration: HrTime = [-1, -1];\n  private readonly _spanProcessor: SpanProcessor;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _attributeValueLengthLimit: number;\n\n  private readonly _performanceStartTime: number;\n  private readonly _performanceOffset: number;\n  private readonly _startTimeProvided: boolean;\n\n  /**\n   * Constructs a new Span instance.\n   *\n   * @deprecated calling Span constructor directly is not supported. Please use tracer.startSpan.\n   * */\n  constructor(\n    parentTracer: Tracer,\n    context: Context,\n    spanName: string,\n    spanContext: SpanContext,\n    kind: SpanKind,\n    parentSpanId?: string,\n    links: Link[] = [],\n    startTime?: TimeInput,\n    _deprecatedClock?: unknown, // keeping this argument even though it is unused to ensure backwards compatibility\n    attributes?: SpanAttributes\n  ) {\n    this.name = spanName;\n    this._spanContext = spanContext;\n    this.parentSpanId = parentSpanId;\n    this.kind = kind;\n    this.links = links;\n\n    const now = Date.now();\n    this._performanceStartTime = otperformance.now();\n    this._performanceOffset =\n      now - (this._performanceStartTime + getTimeOrigin());\n    this._startTimeProvided = startTime != null;\n\n    this.startTime = this._getTime(startTime ?? now);\n\n    this.resource = parentTracer.resource;\n    this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n    this._spanLimits = parentTracer.getSpanLimits();\n    this._attributeValueLengthLimit =\n      this._spanLimits.attributeValueLengthLimit || 0;\n\n    if (attributes != null) {\n      this.setAttributes(attributes);\n    }\n\n    this._spanProcessor = parentTracer.getActiveSpanProcessor();\n    this._spanProcessor.onStart(this, context);\n  }\n\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  setAttribute(key: string, value?: SpanAttributeValue): this;\n  setAttribute(key: string, value: unknown): this {\n    if (value == null || this._isSpanEnded()) return this;\n    if (key.length === 0) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (!isAttributeValue(value)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n\n    if (\n      Object.keys(this.attributes).length >=\n        this._spanLimits.attributeCountLimit! &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      this._droppedAttributesCount++;\n      return this;\n    }\n    this.attributes[key] = this._truncateToSize(value);\n    return this;\n  }\n\n  setAttributes(attributes: SpanAttributes): this {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param name Span Name\n   * @param [attributesOrStartTime] Span attributes or start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [timeStamp] Specified time stamp for the event\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: SpanAttributes | TimeInput,\n    timeStamp?: TimeInput\n  ): this {\n    if (this._isSpanEnded()) return this;\n    if (this._spanLimits.eventCountLimit === 0) {\n      diag.warn('No events allowed.');\n      this._droppedEventsCount++;\n      return this;\n    }\n    if (this.events.length >= this._spanLimits.eventCountLimit!) {\n      if (this._droppedEventsCount === 0) {\n        diag.debug('Dropping extra events.');\n      }\n      this.events.shift();\n      this._droppedEventsCount++;\n    }\n\n    if (isTimeInput(attributesOrStartTime)) {\n      if (!isTimeInput(timeStamp)) {\n        timeStamp = attributesOrStartTime;\n      }\n      attributesOrStartTime = undefined;\n    }\n\n    const attributes = sanitizeAttributes(attributesOrStartTime);\n\n    this.events.push({\n      name,\n      attributes,\n      time: this._getTime(timeStamp),\n      droppedAttributesCount: 0,\n    });\n    return this;\n  }\n\n  addLink(link: Link): this {\n    this.links.push(link);\n    return this;\n  }\n\n  addLinks(links: Link[]): this {\n    this.links.push(...links);\n    return this;\n  }\n\n  setStatus(status: SpanStatus): this {\n    if (this._isSpanEnded()) return this;\n    this.status = { ...status };\n\n    // When using try-catch, the caught \"error\" is of type `any`. When then assigning `any` to `status.message`,\n    // TypeScript will not error. While this can happen during use of any API, it is more common on Span#setStatus()\n    // as it's likely used in a catch-block. Therefore, we validate if `status.message` is actually a string, null, or\n    // undefined to avoid an incorrect type causing issues downstream.\n    if (this.status.message != null && typeof status.message !== 'string') {\n      diag.warn(\n        `Dropping invalid status.message of type '${typeof status.message}', expected 'string'`\n      );\n      delete this.status.message;\n    }\n\n    return this;\n  }\n\n  updateName(name: string): this {\n    if (this._isSpanEnded()) return this;\n    this.name = name;\n    return this;\n  }\n\n  end(endTime?: TimeInput): void {\n    if (this._isSpanEnded()) {\n      diag.error(\n        `${this.name} ${this._spanContext.traceId}-${this._spanContext.spanId} - You can only call end() on a span once.`\n      );\n      return;\n    }\n    this._ended = true;\n\n    this.endTime = this._getTime(endTime);\n    this._duration = hrTimeDuration(this.startTime, this.endTime);\n\n    if (this._duration[0] < 0) {\n      diag.warn(\n        'Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.',\n        this.startTime,\n        this.endTime\n      );\n      this.endTime = this.startTime.slice() as HrTime;\n      this._duration = [0, 0];\n    }\n\n    if (this._droppedEventsCount > 0) {\n      diag.warn(\n        `Dropped ${this._droppedEventsCount} events because eventCountLimit reached`\n      );\n    }\n\n    this._spanProcessor.onEnd(this);\n  }\n\n  private _getTime(inp?: TimeInput): HrTime {\n    if (typeof inp === 'number' && inp <= otperformance.now()) {\n      // must be a performance timestamp\n      // apply correction and convert to hrtime\n      return hrTime(inp + this._performanceOffset);\n    }\n\n    if (typeof inp === 'number') {\n      return millisToHrTime(inp);\n    }\n\n    if (inp instanceof Date) {\n      return millisToHrTime(inp.getTime());\n    }\n\n    if (isTimeInputHrTime(inp)) {\n      return inp;\n    }\n\n    if (this._startTimeProvided) {\n      // if user provided a time for the start manually\n      // we can't use duration to calculate event/end times\n      return millisToHrTime(Date.now());\n    }\n\n    const msDuration = otperformance.now() - this._performanceStartTime;\n    return addHrTimes(this.startTime, millisToHrTime(msDuration));\n  }\n\n  isRecording(): boolean {\n    return this._ended === false;\n  }\n\n  recordException(exception: Exception, time?: TimeInput): void {\n    const attributes: SpanAttributes = {};\n    if (typeof exception === 'string') {\n      attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception;\n    } else if (exception) {\n      if (exception.code) {\n        attributes[SEMATTRS_EXCEPTION_TYPE] = exception.code.toString();\n      } else if (exception.name) {\n        attributes[SEMATTRS_EXCEPTION_TYPE] = exception.name;\n      }\n      if (exception.message) {\n        attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception.message;\n      }\n      if (exception.stack) {\n        attributes[SEMATTRS_EXCEPTION_STACKTRACE] = exception.stack;\n      }\n    }\n\n    // these are minimum requirements from spec\n    if (\n      attributes[SEMATTRS_EXCEPTION_TYPE] ||\n      attributes[SEMATTRS_EXCEPTION_MESSAGE]\n    ) {\n      this.addEvent(ExceptionEventName, attributes, time);\n    } else {\n      diag.warn(`Failed to record an exception ${exception}`);\n    }\n  }\n\n  get duration(): HrTime {\n    return this._duration;\n  }\n\n  get ended(): boolean {\n    return this._ended;\n  }\n\n  get droppedAttributesCount(): number {\n    return this._droppedAttributesCount;\n  }\n\n  get droppedEventsCount(): number {\n    return this._droppedEventsCount;\n  }\n\n  get droppedLinksCount(): number {\n    return this._droppedLinksCount;\n  }\n\n  private _isSpanEnded(): boolean {\n    if (this._ended) {\n      diag.warn(\n        `Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`\n      );\n    }\n    return this._ended;\n  }\n\n  // Utility function to truncate given value within size\n  // for value type of string, will truncate to given limit\n  // for type of non-string, will return same value\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substring(0, limit);\n  }\n\n  /**\n   * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n   * return string with truncated to {@code attributeValueLengthLimit} characters\n   *\n   * If the given attribute value is array of strings then\n   * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n   *\n   * Otherwise return same Attribute {@code value}\n   *\n   * @param value Attribute value\n   * @returns truncated attribute value if required, otherwise same value\n   */\n  private _truncateToSize(value: SpanAttributeValue): SpanAttributeValue {\n    const limit = this._attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val =>\n        typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val\n      );\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { Sampler } from './Sampler';\nimport { SpanLimits, TracerConfig, GeneralLimits } from './types';\nimport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  getEnvWithoutDefaults,\n} from '@opentelemetry/core';\n\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig: TracerConfig): TracerConfig & {\n  sampler: Sampler;\n  spanLimits: SpanLimits;\n  generalLimits: GeneralLimits;\n} {\n  const perInstanceDefaults: Partial<TracerConfig> = {\n    sampler: buildSamplerFromEnv(),\n  };\n\n  const DEFAULT_CONFIG = loadDefaultConfig();\n\n  const target = Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    perInstanceDefaults,\n    userConfig\n  );\n\n  target.generalLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.generalLimits,\n    userConfig.generalLimits || {}\n  );\n\n  target.spanLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.spanLimits,\n    userConfig.spanLimits || {}\n  );\n\n  return target;\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig: TracerConfig): TracerConfig {\n  const spanLimits = Object.assign({}, userConfig.spanLimits);\n\n  const parsedEnvConfig = getEnvWithoutDefaults();\n\n  /**\n   * Reassign span attribute count limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeCountLimit =\n    userConfig.spanLimits?.attributeCountLimit ??\n    userConfig.generalLimits?.attributeCountLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT ??\n    DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n\n  /**\n   * Reassign span attribute value length limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeValueLengthLimit =\n    userConfig.spanLimits?.attributeValueLengthLimit ??\n    userConfig.generalLimits?.attributeValueLengthLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n\n  return Object.assign({}, userConfig, { spanLimits });\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, TracesSamplerValues, ENVIRONMENT } from '@opentelemetry/core';\nimport { Sampler } from './Sampler';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\n\nconst env = getEnv();\nconst FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nconst DEFAULT_RATIO = 1;\n\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n  const _env = getEnv();\n\n  return {\n    sampler: buildSamplerFromEnv(env),\n    forceFlushTimeoutMillis: 30000,\n    generalLimits: {\n      attributeValueLengthLimit: _env.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: _env.OTEL_ATTRIBUTE_COUNT_LIMIT,\n    },\n    spanLimits: {\n      attributeValueLengthLimit: _env.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: _env.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n      linkCountLimit: _env.OTEL_SPAN_LINK_COUNT_LIMIT,\n      eventCountLimit: _env.OTEL_SPAN_EVENT_COUNT_LIMIT,\n      attributePerEventCountLimit:\n        _env.OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n      attributePerLinkCountLimit: _env.OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n    },\n    mergeResourceWithDefaults: true,\n  };\n}\n\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(\n  environment: Required<ENVIRONMENT> = getEnv()\n): Sampler {\n  switch (environment.OTEL_TRACES_SAMPLER) {\n    case TracesSamplerValues.AlwaysOn:\n      return new AlwaysOnSampler();\n    case TracesSamplerValues.AlwaysOff:\n      return new AlwaysOffSampler();\n    case TracesSamplerValues.ParentBasedAlwaysOn:\n      return new ParentBasedSampler({\n        root: new AlwaysOnSampler(),\n      });\n    case TracesSamplerValues.ParentBasedAlwaysOff:\n      return new ParentBasedSampler({\n        root: new AlwaysOffSampler(),\n      });\n    case TracesSamplerValues.TraceIdRatio:\n      return new TraceIdRatioBasedSampler(\n        getSamplerProbabilityFromEnv(environment)\n      );\n    case TracesSamplerValues.ParentBasedTraceIdRatio:\n      return new ParentBasedSampler({\n        root: new TraceIdRatioBasedSampler(\n          getSamplerProbabilityFromEnv(environment)\n        ),\n      });\n    default:\n      diag.error(\n        `OTEL_TRACES_SAMPLER value \"${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`\n      );\n      return new AlwaysOnSampler();\n  }\n}\n\nfunction getSamplerProbabilityFromEnv(\n  environment: Required<ENVIRONMENT>\n): number | undefined {\n  if (\n    environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n    environment.OTEL_TRACES_SAMPLER_ARG === ''\n  ) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  const probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n\n  if (isNaN(probability)) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  if (probability < 0 || probability > 1) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  return probability;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples no traces. */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceState,\n} from '@opentelemetry/api';\n\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n\n/**\n * This interface represent a sampler. Sampling is a mechanism to control the\n * noise and overhead introduced by OpenTelemetry by reducing the number of\n * samples of traces collected and sent to the backend.\n */\nexport interface Sampler {\n  /**\n   * Checks whether span needs to be created and tracked.\n   *\n   * @param context Parent Context which may contain a span.\n   * @param traceId of the span to be created. It can be different from the\n   *     traceId in the {@link SpanContext}. Typically in situations when the\n   *     span to be created starts a new trace.\n   * @param spanName of the span to be created.\n   * @param spanKind of the span to be created.\n   * @param attributes Initial set of SpanAttributes for the Span being constructed.\n   * @param links Collection of links that will be associated with the Span to\n   *     be created. Typically useful for batch operations.\n   * @returns a {@link SamplingResult}.\n   */\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult;\n\n  /** Returns the sampler name or short description with the configuration. */\n  toString(): string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples all traces. */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\nimport { Sampler, SamplingResult } from '../Sampler';\n\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { BatchSpanProcessor } from './export/BatchSpanProcessor';\nexport { RandomIdGenerator } from './RandomIdGenerator';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { SpanExporter } from '../../../export/SpanExporter';\nimport { BatchSpanProcessorBrowserConfig } from '../../../types';\nimport { globalErrorHandler } from '@opentelemetry/core';\n\nexport class BatchSpanProcessor extends BatchSpanProcessorBase<BatchSpanProcessorBrowserConfig> {\n  private _visibilityChangeListener?: () => void;\n  private _pageHideListener?: () => void;\n\n  constructor(\n    _exporter: SpanExporter,\n    config?: BatchSpanProcessorBrowserConfig\n  ) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n\n  private onInit(config?: BatchSpanProcessorBrowserConfig): void {\n    if (\n      config?.disableAutoFlushOnDocumentHide !== true &&\n      typeof document !== 'undefined'\n    ) {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          this.forceFlush().catch(error => {\n            globalErrorHandler(error);\n          });\n        }\n      };\n      this._pageHideListener = () => {\n        this.forceFlush().catch(error => {\n          globalErrorHandler(error);\n        });\n      };\n      document.addEventListener(\n        'visibilitychange',\n        this._visibilityChangeListener\n      );\n\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n\n  protected onShutdown(): void {\n    if (typeof document !== 'undefined') {\n      if (this._visibilityChangeListener) {\n        document.removeEventListener(\n          'visibilitychange',\n          this._visibilityChangeListener\n        );\n      }\n      if (this._pageHideListener) {\n        document.removeEventListener('pagehide', this._pageHideListener);\n      }\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, diag, TraceFlags } from '@opentelemetry/api';\nimport {\n  BindOnceFuture,\n  ExportResultCode,\n  getEnv,\n  globalErrorHandler,\n  suppressTracing,\n  unrefTimer,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { BufferConfig } from '../types';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nexport abstract class BatchSpanProcessorBase<T extends BufferConfig>\n  implements SpanProcessor\n{\n  private readonly _maxExportBatchSize: number;\n  private readonly _maxQueueSize: number;\n  private readonly _scheduledDelayMillis: number;\n  private readonly _exportTimeoutMillis: number;\n\n  private _isExporting = false;\n  private _finishedSpans: ReadableSpan[] = [];\n  private _timer: NodeJS.Timeout | undefined;\n  private _shutdownOnce: BindOnceFuture<void>;\n  private _droppedSpansCount: number = 0;\n\n  constructor(\n    private readonly _exporter: SpanExporter,\n    config?: T\n  ) {\n    const env = getEnv();\n    this._maxExportBatchSize =\n      typeof config?.maxExportBatchSize === 'number'\n        ? config.maxExportBatchSize\n        : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n    this._maxQueueSize =\n      typeof config?.maxQueueSize === 'number'\n        ? config.maxQueueSize\n        : env.OTEL_BSP_MAX_QUEUE_SIZE;\n    this._scheduledDelayMillis =\n      typeof config?.scheduledDelayMillis === 'number'\n        ? config.scheduledDelayMillis\n        : env.OTEL_BSP_SCHEDULE_DELAY;\n    this._exportTimeoutMillis =\n      typeof config?.exportTimeoutMillis === 'number'\n        ? config.exportTimeoutMillis\n        : env.OTEL_BSP_EXPORT_TIMEOUT;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n\n    if (this._maxExportBatchSize > this._maxQueueSize) {\n      diag.warn(\n        'BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize'\n      );\n      this._maxExportBatchSize = this._maxQueueSize;\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      return this._shutdownOnce.promise;\n    }\n    return this._flushAll();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    this._addToBuffer(span);\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown() {\n    return Promise.resolve()\n      .then(() => {\n        return this.onShutdown();\n      })\n      .then(() => {\n        return this._flushAll();\n      })\n      .then(() => {\n        return this._exporter.shutdown();\n      });\n  }\n\n  /** Add a span in the buffer. */\n  private _addToBuffer(span: ReadableSpan) {\n    if (this._finishedSpans.length >= this._maxQueueSize) {\n      // limit reached, drop span\n\n      if (this._droppedSpansCount === 0) {\n        diag.debug('maxQueueSize reached, dropping spans');\n      }\n      this._droppedSpansCount++;\n\n      return;\n    }\n\n    if (this._droppedSpansCount > 0) {\n      // some spans were dropped, log once with count of spans dropped\n      diag.warn(\n        `Dropped ${this._droppedSpansCount} spans because maxQueueSize reached`\n      );\n      this._droppedSpansCount = 0;\n    }\n\n    this._finishedSpans.push(span);\n    this._maybeStartTimer();\n  }\n\n  /**\n   * Send all spans to the exporter respecting the batch size limit\n   * This function is used only on forceFlush or shutdown,\n   * for all other cases _flush should be used\n   * */\n  private _flushAll(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      // calculate number of batches\n      const count = Math.ceil(\n        this._finishedSpans.length / this._maxExportBatchSize\n      );\n      for (let i = 0, j = count; i < j; i++) {\n        promises.push(this._flushOneBatch());\n      }\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  private _flushOneBatch(): Promise<void> {\n    this._clearTimer();\n    if (this._finishedSpans.length === 0) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        // don't wait anymore for export, this way the next batch can start\n        reject(new Error('Timeout'));\n      }, this._exportTimeoutMillis);\n      // prevent downstream exporter calls from generating spans\n      context.with(suppressTracing(context.active()), () => {\n        // Reset the finished spans buffer here because the next invocations of the _flush method\n        // could pass the same finished spans to the exporter if the buffer is cleared\n        // outside the execution of this callback.\n        let spans: ReadableSpan[];\n        if (this._finishedSpans.length <= this._maxExportBatchSize) {\n          spans = this._finishedSpans;\n          this._finishedSpans = [];\n        } else {\n          spans = this._finishedSpans.splice(0, this._maxExportBatchSize);\n        }\n\n        const doExport = () =>\n          this._exporter.export(spans, result => {\n            clearTimeout(timer);\n            if (result.code === ExportResultCode.SUCCESS) {\n              resolve();\n            } else {\n              reject(\n                result.error ??\n                  new Error('BatchSpanProcessor: span export failed')\n              );\n            }\n          });\n\n        let pendingResources: Array<Promise<void>> | null = null;\n        for (let i = 0, len = spans.length; i < len; i++) {\n          const span = spans[i];\n          if (\n            span.resource.asyncAttributesPending &&\n            span.resource.waitForAsyncAttributes\n          ) {\n            pendingResources ??= [];\n            pendingResources.push(span.resource.waitForAsyncAttributes());\n          }\n        }\n\n        // Avoid scheduling a promise to make the behavior more predictable and easier to test\n        if (pendingResources === null) {\n          doExport();\n        } else {\n          Promise.all(pendingResources).then(doExport, err => {\n            globalErrorHandler(err);\n            reject(err);\n          });\n        }\n      });\n    });\n  }\n\n  private _maybeStartTimer() {\n    if (this._isExporting) return;\n    const flush = () => {\n      this._isExporting = true;\n      this._flushOneBatch()\n        .finally(() => {\n          this._isExporting = false;\n          if (this._finishedSpans.length > 0) {\n            this._clearTimer();\n            this._maybeStartTimer();\n          }\n        })\n        .catch(e => {\n          this._isExporting = false;\n          globalErrorHandler(e);\n        });\n    };\n    // we only wait if the queue doesn't have enough elements yet\n    if (this._finishedSpans.length >= this._maxExportBatchSize) {\n      return flush();\n    }\n    if (this._timer !== undefined) return;\n    this._timer = setTimeout(() => flush(), this._scheduledDelayMillis);\n    unrefTimer(this._timer);\n  }\n\n  private _clearTimer() {\n    if (this._timer !== undefined) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n  }\n\n  protected abstract onShutdown(): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdGenerator } from '../../IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  diag,\n  propagation,\n  TextMapPropagator,\n  trace,\n  TracerProvider,\n} from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  W3CTraceContextPropagator,\n  getEnv,\n  merge,\n} from '@opentelemetry/core';\nimport { IResource, Resource } from '@opentelemetry/resources';\nimport { SpanProcessor, Tracer } from '.';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { SDKRegistrationConfig, TracerConfig } from './types';\nimport { SpanExporter } from './export/SpanExporter';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\n\nexport type PROPAGATOR_FACTORY = () => TextMapPropagator;\nexport type EXPORTER_FACTORY = () => SpanExporter;\n\nexport enum ForceFlushState {\n  'resolved',\n  'timeout',\n  'error',\n  'unresolved',\n}\n\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nexport class BasicTracerProvider implements TracerProvider {\n  protected static readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ['tracecontext', () => new W3CTraceContextPropagator()],\n    ['baggage', () => new W3CBaggagePropagator()],\n  ]);\n\n  protected static readonly _registeredExporters = new Map<\n    string,\n    EXPORTER_FACTORY\n  >();\n\n  private readonly _config: TracerConfig;\n  private readonly _registeredSpanProcessors: SpanProcessor[] = [];\n  private readonly _tracers: Map<string, Tracer> = new Map();\n\n  activeSpanProcessor: SpanProcessor;\n  readonly resource: IResource;\n\n  constructor(config: TracerConfig = {}) {\n    const mergedConfig = merge(\n      {},\n      loadDefaultConfig(),\n      reconfigureLimits(config)\n    );\n    this.resource = mergedConfig.resource ?? Resource.empty();\n\n    if (mergedConfig.mergeResourceWithDefaults) {\n      this.resource = Resource.default().merge(this.resource);\n    }\n\n    this._config = Object.assign({}, mergedConfig, {\n      resource: this.resource,\n    });\n\n    if (config.spanProcessors?.length) {\n      this._registeredSpanProcessors = [...config.spanProcessors];\n      this.activeSpanProcessor = new MultiSpanProcessor(\n        this._registeredSpanProcessors\n      );\n    } else {\n      const defaultExporter = this._buildExporterFromEnv();\n      if (defaultExporter !== undefined) {\n        const batchProcessor = new BatchSpanProcessor(defaultExporter);\n        this.activeSpanProcessor = batchProcessor;\n      } else {\n        this.activeSpanProcessor = new NoopSpanProcessor();\n      }\n    }\n  }\n\n  getTracer(\n    name: string,\n    version?: string,\n    options?: { schemaUrl?: string }\n  ): Tracer {\n    const key = `${name}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._tracers.has(key)) {\n      this._tracers.set(\n        key,\n        new Tracer(\n          { name, version, schemaUrl: options?.schemaUrl },\n          this._config,\n          this\n        )\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._tracers.get(key)!;\n  }\n\n  /**\n   * @deprecated please use {@link TracerConfig} spanProcessors property\n   * Adds a new {@link SpanProcessor} to this tracer.\n   * @param spanProcessor the new SpanProcessor to be added.\n   */\n  addSpanProcessor(spanProcessor: SpanProcessor): void {\n    if (this._registeredSpanProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this.activeSpanProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current span processor',\n            err\n          )\n        );\n    }\n    this._registeredSpanProcessors.push(spanProcessor);\n    this.activeSpanProcessor = new MultiSpanProcessor(\n      this._registeredSpanProcessors\n    );\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this.activeSpanProcessor;\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  register(config: SDKRegistrationConfig = {}): void {\n    trace.setGlobalTracerProvider(this);\n    if (config.propagator === undefined) {\n      config.propagator = this._buildPropagatorFromEnv();\n    }\n\n    if (config.contextManager) {\n      context.setGlobalContextManager(config.contextManager);\n    }\n\n    if (config.propagator) {\n      propagation.setGlobalPropagator(config.propagator);\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    const timeout = this._config.forceFlushTimeoutMillis;\n    const promises = this._registeredSpanProcessors.map(\n      (spanProcessor: SpanProcessor) => {\n        return new Promise(resolve => {\n          let state: ForceFlushState;\n          const timeoutInterval = setTimeout(() => {\n            resolve(\n              new Error(\n                `Span processor did not completed within timeout period of ${timeout} ms`\n              )\n            );\n            state = ForceFlushState.timeout;\n          }, timeout);\n\n          spanProcessor\n            .forceFlush()\n            .then(() => {\n              clearTimeout(timeoutInterval);\n              if (state !== ForceFlushState.timeout) {\n                state = ForceFlushState.resolved;\n                resolve(state);\n              }\n            })\n            .catch(error => {\n              clearTimeout(timeoutInterval);\n              state = ForceFlushState.error;\n              resolve(error);\n            });\n        });\n      }\n    );\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all(promises)\n        .then(results => {\n          const errors = results.filter(\n            result => result !== ForceFlushState.resolved\n          );\n          if (errors.length > 0) {\n            reject(errors);\n          } else {\n            resolve();\n          }\n        })\n        .catch(error => reject([error]));\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this.activeSpanProcessor.shutdown();\n  }\n\n  /**\n   * TS cannot yet infer the type of this.constructor:\n   * https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n   * There is no need to override either of the getters in your child class.\n   * The type of the registered component maps should be the same across all\n   * classes in the inheritance tree.\n   */\n  protected _getPropagator(name: string): TextMapPropagator | undefined {\n    return (\n      this.constructor as typeof BasicTracerProvider\n    )._registeredPropagators.get(name)?.();\n  }\n\n  protected _getSpanExporter(name: string): SpanExporter | undefined {\n    return (\n      this.constructor as typeof BasicTracerProvider\n    )._registeredExporters.get(name)?.();\n  }\n\n  protected _buildPropagatorFromEnv(): TextMapPropagator | undefined {\n    // per spec, propagators from env must be deduplicated\n    const uniquePropagatorNames = Array.from(\n      new Set(getEnv().OTEL_PROPAGATORS)\n    );\n\n    const propagators = uniquePropagatorNames.map(name => {\n      const propagator = this._getPropagator(name);\n      if (!propagator) {\n        diag.warn(\n          `Propagator \"${name}\" requested through environment variable is unavailable.`\n        );\n      }\n\n      return propagator;\n    });\n    const validPropagators = propagators.reduce<TextMapPropagator[]>(\n      (list, item) => {\n        if (item) {\n          list.push(item);\n        }\n        return list;\n      },\n      []\n    );\n\n    if (validPropagators.length === 0) {\n      return;\n    } else if (uniquePropagatorNames.length === 1) {\n      return validPropagators[0];\n    } else {\n      return new CompositePropagator({\n        propagators: validPropagators,\n      });\n    }\n  }\n\n  protected _buildExporterFromEnv(): SpanExporter | undefined {\n    const exporterName = getEnv().OTEL_TRACES_EXPORTER;\n    if (exporterName === 'none' || exporterName === '') return;\n    const exporter = this._getSpanExporter(exporterName);\n    if (!exporter) {\n      diag.error(\n        `Exporter \"${exporterName}\" requested through environment variable is unavailable.`\n      );\n    }\n    return exporter;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Resource } from './Resource';\nexport { IResource } from './IResource';\nexport { defaultServiceName } from './platform';\nexport { DetectorSync, ResourceAttributes, Detector } from './types';\nexport { ResourceDetectionConfig } from './config';\nexport {\n  browserDetector,\n  browserDetectorSync,\n  envDetector,\n  envDetectorSync,\n  hostDetector,\n  hostDetectorSync,\n  osDetector,\n  osDetectorSync,\n  processDetector,\n  processDetectorSync,\n  serviceInstanceIdDetectorSync,\n} from './detectors';\nexport { detectResourcesSync, detectResources } from './detect-resources';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  SEMRESATTRS_SERVICE_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ResourceAttributes } from './types';\nimport { defaultServiceName } from './platform';\nimport { IResource } from './IResource';\n\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nexport class Resource implements IResource {\n  static readonly EMPTY = new Resource({});\n  private _syncAttributes?: ResourceAttributes;\n  private _asyncAttributesPromise?: Promise<ResourceAttributes>;\n  private _attributes?: ResourceAttributes;\n\n  /**\n   * Check if async attributes have resolved. This is useful to avoid awaiting\n   * waitForAsyncAttributes (which will introduce asynchronous behavior) when not necessary.\n   *\n   * @returns true if the resource \"attributes\" property is not yet settled to its final value\n   */\n  public asyncAttributesPending?: boolean;\n\n  /**\n   * Returns an empty Resource\n   */\n  static empty(): IResource {\n    return Resource.EMPTY;\n  }\n\n  /**\n   * Returns a Resource that identifies the SDK in use.\n   */\n  static default(): IResource {\n    return new Resource({\n      [SEMRESATTRS_SERVICE_NAME]: defaultServiceName(),\n      [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_LANGUAGE],\n      [SEMRESATTRS_TELEMETRY_SDK_NAME]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_NAME],\n      [SEMRESATTRS_TELEMETRY_SDK_VERSION]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_VERSION],\n    });\n  }\n\n  constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes: ResourceAttributes,\n    asyncAttributesPromise?: Promise<ResourceAttributes>\n  ) {\n    this._attributes = attributes;\n    this.asyncAttributesPending = asyncAttributesPromise != null;\n    this._syncAttributes = this._attributes ?? {};\n    this._asyncAttributesPromise = asyncAttributesPromise?.then(\n      asyncAttributes => {\n        this._attributes = Object.assign({}, this._attributes, asyncAttributes);\n        this.asyncAttributesPending = false;\n        return asyncAttributes;\n      },\n      err => {\n        diag.debug(\"a resource's async attributes promise rejected: %s\", err);\n        this.asyncAttributesPending = false;\n        return {};\n      }\n    );\n  }\n\n  get attributes(): ResourceAttributes {\n    if (this.asyncAttributesPending) {\n      diag.error(\n        'Accessing resource attributes before async attributes settled'\n      );\n    }\n\n    return this._attributes ?? {};\n  }\n\n  /**\n   * Returns a promise that will never be rejected. Resolves when all async attributes have finished being added to\n   * this Resource's attributes. This is useful in exporters to block until resource detection\n   * has finished.\n   */\n  async waitForAsyncAttributes?(): Promise<void> {\n    if (this.asyncAttributesPending) {\n      await this._asyncAttributesPromise;\n    }\n  }\n\n  /**\n   * Returns a new, merged {@link Resource} by merging the current Resource\n   * with the other Resource. In case of a collision, other Resource takes\n   * precedence.\n   *\n   * @param other the Resource that will be merged with this.\n   * @returns the newly merged Resource.\n   */\n  merge(other: IResource | null): IResource {\n    if (!other) return this;\n\n    // SpanAttributes from other resource overwrite attributes from this resource.\n    const mergedSyncAttributes = {\n      ...this._syncAttributes,\n      //Support for old resource implementation where _syncAttributes is not defined\n      ...((other as Resource)._syncAttributes ?? other.attributes),\n    };\n\n    if (\n      !this._asyncAttributesPromise &&\n      !(other as Resource)._asyncAttributesPromise\n    ) {\n      return new Resource(mergedSyncAttributes);\n    }\n\n    const mergedAttributesPromise = Promise.all([\n      this._asyncAttributesPromise,\n      (other as Resource)._asyncAttributesPromise,\n    ]).then(([thisAsyncAttributes, otherAsyncAttributes]) => {\n      return {\n        ...this._syncAttributes,\n        ...thisAsyncAttributes,\n        //Support for old resource implementation where _syncAttributes is not defined\n        ...((other as Resource)._syncAttributes ?? other.attributes),\n        ...otherAsyncAttributes,\n      };\n    });\n\n    return new Resource(mergedSyncAttributes, mergedAttributesPromise);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { defaultServiceName } from './default-service-name';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultServiceName(): string {\n  return 'unknown_service';\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nexport class MultiSpanProcessor implements SpanProcessor {\n  constructor(private readonly _spanProcessors: SpanProcessor[]) {}\n\n  forceFlush(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.forceFlush());\n    }\n    return new Promise(resolve => {\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(error => {\n          globalErrorHandler(\n            error || new Error('MultiSpanProcessor: forceFlush failed')\n          );\n          resolve();\n        });\n    });\n  }\n\n  onStart(span: Span, context: Context): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onStart(span, context);\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onEnd(span);\n    }\n  }\n\n  shutdown(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.shutdown());\n    }\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './ReadableSpan';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\n\n/** No-op implementation of SpanProcessor */\nexport class NoopSpanProcessor implements SpanProcessor {\n  onStart(_span: Span, _context: Context): void {}\n  onEnd(_span: ReadableSpan): void {}\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ContextManager, ROOT_CONTEXT } from '@opentelemetry/api';\n\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nexport class StackContextManager implements ContextManager {\n  /**\n   * whether the context manager is enabled or not\n   */\n  private _enabled = false;\n\n  /**\n   * Keeps the reference to current context\n   */\n  public _currentContext = ROOT_CONTEXT;\n\n  /**\n   *\n   * @param context\n   * @param target Function to be executed within the context\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _bindFunction<T extends Function>(\n    context = ROOT_CONTEXT,\n    target: T\n  ): T {\n    const manager = this;\n    const contextWrapper = function (this: unknown, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    return contextWrapper as unknown as T;\n  }\n\n  /**\n   * Returns the active context\n   */\n  active(): Context {\n    return this._currentContext;\n  }\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T): T {\n    // if no specific context to propagate is given, we use the current one\n    if (context === undefined) {\n      context = this.active();\n    }\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    }\n    return target;\n  }\n\n  /**\n   * Disable the context manager (clears the current context)\n   */\n  disable(): this {\n    this._currentContext = ROOT_CONTEXT;\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Enables the context manager and creates a default(root) context\n   */\n  enable(): this {\n    if (this._enabled) {\n      return this;\n    }\n    this._enabled = true;\n    this._currentContext = ROOT_CONTEXT;\n    return this;\n  }\n\n  /**\n   * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n   * The context will be set as active\n   * @param context\n   * @param fn Callback function\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context | null,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const previousContext = this._currentContext;\n    this._currentContext = context || ROOT_CONTEXT;\n\n    try {\n      return fn.call(thisArg, ...args);\n    } finally {\n      this._currentContext = previousContext;\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum PerformanceTimingNames {\n  CONNECT_END = 'connectEnd',\n  CONNECT_START = 'connectStart',\n  DECODED_BODY_SIZE = 'decodedBodySize',\n  DOM_COMPLETE = 'domComplete',\n  DOM_CONTENT_LOADED_EVENT_END = 'domContentLoadedEventEnd',\n  DOM_CONTENT_LOADED_EVENT_START = 'domContentLoadedEventStart',\n  DOM_INTERACTIVE = 'domInteractive',\n  DOMAIN_LOOKUP_END = 'domainLookupEnd',\n  DOMAIN_LOOKUP_START = 'domainLookupStart',\n  ENCODED_BODY_SIZE = 'encodedBodySize',\n  FETCH_START = 'fetchStart',\n  LOAD_EVENT_END = 'loadEventEnd',\n  LOAD_EVENT_START = 'loadEventStart',\n  NAVIGATION_START = 'navigationStart',\n  REDIRECT_END = 'redirectEnd',\n  REDIRECT_START = 'redirectStart',\n  REQUEST_START = 'requestStart',\n  RESPONSE_END = 'responseEnd',\n  RESPONSE_START = 'responseStart',\n  SECURE_CONNECTION_START = 'secureConnectionStart',\n  UNLOAD_EVENT_END = 'unloadEventEnd',\n  UNLOAD_EVENT_START = 'unloadEventStart',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PerformanceEntries,\n  PerformanceResourceTimingInfo,\n  PropagateTraceHeaderCorsUrls,\n} from './types';\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport * as api from '@opentelemetry/api';\nimport {\n  hrTimeToNanoseconds,\n  timeInputToHrTime,\n  urlMatches,\n} from '@opentelemetry/core';\nimport {\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH,\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n} from '@opentelemetry/semantic-conventions';\n\n// Used to normalize relative URLs\nlet urlNormalizingAnchor: HTMLAnchorElement | undefined;\nfunction getUrlNormalizingAnchor(): HTMLAnchorElement {\n  if (!urlNormalizingAnchor) {\n    urlNormalizingAnchor = document.createElement('a');\n  }\n\n  return urlNormalizingAnchor;\n}\n\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey<O extends object>(\n  obj: O,\n  key: keyof any\n): key is keyof O {\n  return key in obj;\n}\n\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n * @param refPerfName name of performance entry to use for reference\n */\nexport function addSpanNetworkEvent(\n  span: api.Span,\n  performanceName: string,\n  entries: PerformanceEntries,\n  refPerfName?: string\n): api.Span | undefined {\n  let perfTime = undefined;\n  let refTime = undefined;\n  if (\n    hasKey(entries, performanceName) &&\n    typeof entries[performanceName] === 'number'\n  ) {\n    perfTime = entries[performanceName];\n  }\n  const refName = refPerfName || PTN.FETCH_START;\n  // Use a reference time which is the earliest possible value so that the performance timings that are earlier should not be added\n  // using FETCH START time in case no reference is provided\n  if (hasKey(entries, refName) && typeof entries[refName] === 'number') {\n    refTime = entries[refName];\n  }\n  if (perfTime !== undefined && refTime !== undefined && perfTime >= refTime) {\n    span.addEvent(performanceName, perfTime);\n    return span;\n  }\n  return undefined;\n}\n\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(\n  span: api.Span,\n  resource: PerformanceEntries\n): void {\n  addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n  if (\n    hasKey(resource as PerformanceResourceTiming, 'name') &&\n    (resource as PerformanceResourceTiming)['name'].startsWith('https:')\n  ) {\n    addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n  }\n  addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n  addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n  const encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n  if (encodedLength !== undefined) {\n    span.setAttribute(SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n  }\n  const decodedLength = resource[PTN.DECODED_BODY_SIZE];\n  // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n  if (decodedLength !== undefined && encodedLength !== decodedLength) {\n    span.setAttribute(\n      SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n      decodedLength\n    );\n  }\n}\n\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(\n  filteredResources: PerformanceResourceTiming[]\n): PerformanceResourceTiming[] {\n  return filteredResources.slice().sort((a, b) => {\n    const valueA = a[PTN.FETCH_START];\n    const valueB = b[PTN.FETCH_START];\n    if (valueA > valueB) {\n      return 1;\n    } else if (valueA < valueB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n\n/** Returns the origin if present (if in browser context). */\nfunction getOrigin(): string | undefined {\n  return typeof location !== 'undefined' ? location.origin : undefined;\n}\n\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming> = new WeakSet<PerformanceResourceTiming>(),\n  initiatorType?: string\n): PerformanceResourceTimingInfo {\n  // de-relativize the URL before usage (does no harm to absolute URLs)\n  const parsedSpanUrl = parseUrl(spanUrl);\n  spanUrl = parsedSpanUrl.toString();\n\n  const filteredResources = filterResourcesForSpan(\n    spanUrl,\n    startTimeHR,\n    endTimeHR,\n    resources,\n    ignoredResources,\n    initiatorType\n  );\n\n  if (filteredResources.length === 0) {\n    return {\n      mainRequest: undefined,\n    };\n  }\n  if (filteredResources.length === 1) {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n  const sorted = sortResources(filteredResources);\n\n  if (parsedSpanUrl.origin !== getOrigin() && sorted.length > 1) {\n    let corsPreFlightRequest: PerformanceResourceTiming | undefined = sorted[0];\n    let mainRequest: PerformanceResourceTiming = findMainRequest(\n      sorted,\n      corsPreFlightRequest[PTN.RESPONSE_END],\n      endTimeHR\n    );\n\n    const responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n    const fetchStart = mainRequest[PTN.FETCH_START];\n\n    // no corsPreFlightRequest\n    if (fetchStart < responseEnd) {\n      mainRequest = corsPreFlightRequest;\n      corsPreFlightRequest = undefined;\n    }\n\n    return {\n      corsPreFlightRequest,\n      mainRequest,\n    };\n  } else {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n}\n\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(\n  resources: PerformanceResourceTiming[],\n  corsPreFlightRequestEndTime: number,\n  spanEndTimeHR: api.HrTime\n): PerformanceResourceTiming {\n  const spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n  const minTime = hrTimeToNanoseconds(\n    timeInputToHrTime(corsPreFlightRequestEndTime)\n  );\n\n  let mainRequest: PerformanceResourceTiming = resources[1];\n  let bestGap;\n\n  const length = resources.length;\n  for (let i = 1; i < length; i++) {\n    const resource = resources[i];\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    const currentGap = spanEndTime - resourceEndTime;\n\n    if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n      bestGap = currentGap;\n      mainRequest = resource;\n    }\n  }\n  return mainRequest;\n}\n\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming>,\n  initiatorType?: string\n) {\n  const startTime = hrTimeToNanoseconds(startTimeHR);\n  const endTime = hrTimeToNanoseconds(endTimeHR);\n  let filteredResources = resources.filter(resource => {\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    return (\n      resource.initiatorType.toLowerCase() ===\n        (initiatorType || 'xmlhttprequest') &&\n      resource.name === spanUrl &&\n      resourceStartTime >= startTime &&\n      resourceEndTime <= endTime\n    );\n  });\n\n  if (filteredResources.length > 0) {\n    filteredResources = filteredResources.filter(resource => {\n      return !ignoredResources.has(resource);\n    });\n  }\n\n  return filteredResources;\n}\n\n/**\n * The URLLike interface represents an URL and HTMLAnchorElement compatible fields.\n */\nexport interface URLLike {\n  hash: string;\n  host: string;\n  hostname: string;\n  href: string;\n  readonly origin: string;\n  password: string;\n  pathname: string;\n  port: string;\n  protocol: string;\n  search: string;\n  username: string;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url: string): URLLike {\n  if (typeof URL === 'function') {\n    return new URL(\n      url,\n      typeof document !== 'undefined'\n        ? document.baseURI\n        : typeof location !== 'undefined' // Some JS runtimes (e.g. Deno) don't define this\n          ? location.href\n          : undefined\n    );\n  }\n  const element = getUrlNormalizingAnchor();\n  element.href = url;\n  return element;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url: string): string {\n  const urlLike = parseUrl(url);\n  return urlLike.href;\n}\n\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target: any, optimised?: boolean): string {\n  if (target.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n  const targetValue = getNodeValue(target, optimised);\n  if (optimised && targetValue.indexOf('@id') > 0) {\n    return targetValue;\n  }\n  let xpath = '';\n  if (target.parentNode) {\n    xpath += getElementXPath(target.parentNode, false);\n  }\n  xpath += targetValue;\n\n  return xpath;\n}\n\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target: HTMLElement): number {\n  if (!target.parentNode) {\n    return 0;\n  }\n  const allowedTypes = [target.nodeType];\n  if (target.nodeType === Node.CDATA_SECTION_NODE) {\n    allowedTypes.push(Node.TEXT_NODE);\n  }\n  let elements = Array.from(target.parentNode.childNodes);\n  elements = elements.filter((element: Node) => {\n    const localName = (element as HTMLElement).localName;\n    return (\n      allowedTypes.indexOf(element.nodeType) >= 0 &&\n      localName === target.localName\n    );\n  });\n  if (elements.length >= 1) {\n    return elements.indexOf(target) + 1; // xpath starts from 1\n  }\n  // if there are no other similar child xpath doesn't need index\n  return 0;\n}\n\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target: HTMLElement, optimised?: boolean): string {\n  const nodeType = target.nodeType;\n  const index = getNodeIndex(target);\n  let nodeValue = '';\n  if (nodeType === Node.ELEMENT_NODE) {\n    const id = target.getAttribute('id');\n    if (optimised && id) {\n      return `//*[@id=\"${id}\"]`;\n    }\n    nodeValue = target.localName;\n  } else if (\n    nodeType === Node.TEXT_NODE ||\n    nodeType === Node.CDATA_SECTION_NODE\n  ) {\n    nodeValue = 'text()';\n  } else if (nodeType === Node.COMMENT_NODE) {\n    nodeValue = 'comment()';\n  } else {\n    return '';\n  }\n  // if index is 1 it can be omitted in xpath\n  if (nodeValue && index > 1) {\n    return `/${nodeValue}[${index}]`;\n  }\n  return `/${nodeValue}`;\n}\n\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(\n  spanUrl: string,\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls\n): boolean {\n  let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n  if (\n    typeof propagateTraceHeaderUrls === 'string' ||\n    propagateTraceHeaderUrls instanceof RegExp\n  ) {\n    propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n  }\n  const parsedSpanUrl = parseUrl(spanUrl);\n\n  if (parsedSpanUrl.origin === getOrigin()) {\n    return true;\n  } else {\n    return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl =>\n      urlMatches(spanUrl, propagateTraceHeaderUrl)\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './enums/AttributeNames';\nexport * from './types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  propagation,\n  trace,\n  Span,\n  ROOT_CONTEXT,\n} from '@opentelemetry/api';\nimport { otperformance, TRACE_PARENT_HEADER } from '@opentelemetry/core';\nimport {\n  addSpanNetworkEvent,\n  addSpanNetworkEvents,\n  hasKey,\n  PerformanceEntries,\n  PerformanceTimingNames as PTN,\n} from '@opentelemetry/sdk-trace-web';\nimport {\n  InstrumentationBase,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  DocumentLoadCustomAttributeFunction,\n  DocumentLoadInstrumentationConfig,\n  ResourceFetchCustomAttributeFunction,\n} from './types';\nimport { AttributeNames } from './enums/AttributeNames';\n/** @knipignore */\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport {\n  SEMATTRS_HTTP_URL,\n  SEMATTRS_HTTP_USER_AGENT,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  addSpanPerformancePaintEvents,\n  getPerformanceNavigationEntries,\n} from './utils';\n\n/**\n * This class represents a document load plugin\n */\nexport class DocumentLoadInstrumentation extends InstrumentationBase<DocumentLoadInstrumentationConfig> {\n  readonly component: string = 'document-load';\n  readonly version: string = '1';\n  moduleName = this.component;\n\n  constructor(config: DocumentLoadInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {}\n\n  /**\n   * callback to be executed when page is loaded\n   */\n  private _onDocumentLoaded() {\n    // Timeout is needed as load event doesn't have yet the performance metrics for loadEnd.\n    // Support for event \"loadend\" is very limited and cannot be used\n    window.setTimeout(() => {\n      this._collectPerformance();\n    });\n  }\n\n  /**\n   * Adds spans for all resources\n   * @param rootSpan\n   */\n  private _addResourcesSpans(rootSpan: Span): void {\n    const resources: PerformanceResourceTiming[] = (\n      otperformance as unknown as Performance\n    ).getEntriesByType?.('resource') as PerformanceResourceTiming[];\n    if (resources) {\n      resources.forEach(resource => {\n        this._initResourceSpan(resource, rootSpan);\n      });\n    }\n  }\n\n  /**\n   * Collects information about performance and creates appropriate spans\n   */\n  private _collectPerformance() {\n    const metaElement = Array.from(document.getElementsByTagName('meta')).find(\n      e => e.getAttribute('name') === TRACE_PARENT_HEADER\n    );\n    const entries = getPerformanceNavigationEntries();\n    const traceparent = (metaElement && metaElement.content) || '';\n    context.with(propagation.extract(ROOT_CONTEXT, { traceparent }), () => {\n      const rootSpan = this._startSpan(\n        AttributeNames.DOCUMENT_LOAD,\n        PTN.FETCH_START,\n        entries\n      );\n      if (!rootSpan) {\n        return;\n      }\n      context.with(trace.setSpan(context.active(), rootSpan), () => {\n        const fetchSpan = this._startSpan(\n          AttributeNames.DOCUMENT_FETCH,\n          PTN.FETCH_START,\n          entries\n        );\n        if (fetchSpan) {\n          fetchSpan.setAttribute(SEMATTRS_HTTP_URL, location.href);\n          context.with(trace.setSpan(context.active(), fetchSpan), () => {\n            if (!this.getConfig().ignoreNetworkEvents) {\n              addSpanNetworkEvents(fetchSpan, entries);\n            }\n            this._addCustomAttributesOnSpan(\n              fetchSpan,\n              this.getConfig().applyCustomAttributesOnSpan?.documentFetch\n            );\n            this._endSpan(fetchSpan, PTN.RESPONSE_END, entries);\n          });\n        }\n      });\n\n      rootSpan.setAttribute(SEMATTRS_HTTP_URL, location.href);\n      rootSpan.setAttribute(SEMATTRS_HTTP_USER_AGENT, navigator.userAgent);\n\n      this._addResourcesSpans(rootSpan);\n\n      if (!this.getConfig().ignoreNetworkEvents) {\n        addSpanNetworkEvent(rootSpan, PTN.FETCH_START, entries);\n        addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_START, entries);\n        addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_END, entries);\n        addSpanNetworkEvent(rootSpan, PTN.DOM_INTERACTIVE, entries);\n        addSpanNetworkEvent(\n          rootSpan,\n          PTN.DOM_CONTENT_LOADED_EVENT_START,\n          entries\n        );\n        addSpanNetworkEvent(\n          rootSpan,\n          PTN.DOM_CONTENT_LOADED_EVENT_END,\n          entries\n        );\n        addSpanNetworkEvent(rootSpan, PTN.DOM_COMPLETE, entries);\n        addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_START, entries);\n        addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_END, entries);\n      }\n\n      if (!this.getConfig().ignorePerformancePaintEvents) {\n        addSpanPerformancePaintEvents(rootSpan);\n      }\n\n      this._addCustomAttributesOnSpan(\n        rootSpan,\n        this.getConfig().applyCustomAttributesOnSpan?.documentLoad\n      );\n      this._endSpan(rootSpan, PTN.LOAD_EVENT_END, entries);\n    });\n  }\n\n  /**\n   * Helper function for ending span\n   * @param span\n   * @param performanceName name of performance entry for time end\n   * @param entries\n   */\n  private _endSpan(\n    span: Span | undefined,\n    performanceName: string,\n    entries: PerformanceEntries\n  ) {\n    // span can be undefined when entries are missing the certain performance - the span will not be created\n    if (span) {\n      if (hasKey(entries, performanceName)) {\n        span.end(entries[performanceName]);\n      } else {\n        // just end span\n        span.end();\n      }\n    }\n  }\n\n  /**\n   * Creates and ends a span with network information about resource added as timed events\n   * @param resource\n   * @param parentSpan\n   */\n  private _initResourceSpan(\n    resource: PerformanceResourceTiming,\n    parentSpan: Span\n  ) {\n    const span = this._startSpan(\n      AttributeNames.RESOURCE_FETCH,\n      PTN.FETCH_START,\n      resource,\n      parentSpan\n    );\n    if (span) {\n      span.setAttribute(SEMATTRS_HTTP_URL, resource.name);\n      if (!this.getConfig().ignoreNetworkEvents) {\n        addSpanNetworkEvents(span, resource);\n      }\n      this._addCustomAttributesOnResourceSpan(\n        span,\n        resource,\n        this.getConfig().applyCustomAttributesOnSpan?.resourceFetch\n      );\n      this._endSpan(span, PTN.RESPONSE_END, resource);\n    }\n  }\n\n  /**\n   * Helper function for starting a span\n   * @param spanName name of span\n   * @param performanceName name of performance entry for time start\n   * @param entries\n   * @param parentSpan\n   */\n  private _startSpan(\n    spanName: string,\n    performanceName: string,\n    entries: PerformanceEntries,\n    parentSpan?: Span\n  ): Span | undefined {\n    if (\n      hasKey(entries, performanceName) &&\n      typeof entries[performanceName] === 'number'\n    ) {\n      const span = this.tracer.startSpan(\n        spanName,\n        {\n          startTime: entries[performanceName],\n        },\n        parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined\n      );\n      return span;\n    }\n    return undefined;\n  }\n\n  /**\n   * executes callback {_onDocumentLoaded} when the page is loaded\n   */\n  private _waitForPageLoad() {\n    if (window.document.readyState === 'complete') {\n      this._onDocumentLoaded();\n    } else {\n      this._onDocumentLoaded = this._onDocumentLoaded.bind(this);\n      window.addEventListener('load', this._onDocumentLoaded);\n    }\n  }\n\n  /**\n   * adds custom attributes to root span if configured\n   */\n  private _addCustomAttributesOnSpan(\n    span: Span,\n    applyCustomAttributesOnSpan: DocumentLoadCustomAttributeFunction | undefined\n  ) {\n    if (applyCustomAttributesOnSpan) {\n      safeExecuteInTheMiddle(\n        () => applyCustomAttributesOnSpan(span),\n        error => {\n          if (!error) {\n            return;\n          }\n\n          this._diag.error('addCustomAttributesOnSpan', error);\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * adds custom attributes to span if configured\n   */\n  private _addCustomAttributesOnResourceSpan(\n    span: Span,\n    resource: PerformanceResourceTiming,\n    applyCustomAttributesOnSpan:\n      | ResourceFetchCustomAttributeFunction\n      | undefined\n  ) {\n    if (applyCustomAttributesOnSpan) {\n      safeExecuteInTheMiddle(\n        () => applyCustomAttributesOnSpan(span, resource),\n        error => {\n          if (!error) {\n            return;\n          }\n\n          this._diag.error('addCustomAttributesOnResourceSpan', error);\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * implements enable function\n   */\n  override enable() {\n    // remove previously attached load to avoid adding the same event twice\n    // in case of multiple enable calling.\n    window.removeEventListener('load', this._onDocumentLoaded);\n    this._waitForPageLoad();\n  }\n\n  /**\n   * implements disable function\n   */\n  override disable() {\n    window.removeEventListener('load', this._onDocumentLoaded);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { registerInstrumentations } from './autoLoader';\nexport { InstrumentationBase } from './platform/index';\nexport { InstrumentationNodeModuleDefinition } from './instrumentationNodeModuleDefinition';\nexport { InstrumentationNodeModuleFile } from './instrumentationNodeModuleFile';\nexport {\n  Instrumentation,\n  InstrumentationConfig,\n  InstrumentationModuleDefinition,\n  InstrumentationModuleFile,\n  ShimWrapped,\n  SpanCustomizationHook,\n} from './types';\nexport { AutoLoaderOptions, AutoLoaderResult } from './types_internal';\nexport {\n  isWrapped,\n  safeExecuteInTheMiddle,\n  safeExecuteInTheMiddleAsync,\n} from './utils';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trace, metrics } from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport {\n  disableInstrumentations,\n  enableInstrumentations,\n} from './autoLoaderUtils';\nimport { AutoLoaderOptions } from './types_internal';\n\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(\n  options: AutoLoaderOptions\n): () => void {\n  const tracerProvider = options.tracerProvider || trace.getTracerProvider();\n  const meterProvider = options.meterProvider || metrics.getMeterProvider();\n  const loggerProvider = options.loggerProvider || logs.getLoggerProvider();\n  const instrumentations = options.instrumentations?.flat() ?? [];\n\n  enableInstrumentations(\n    instrumentations,\n    tracerProvider,\n    meterProvider,\n    loggerProvider\n  );\n\n  return () => {\n    disableInstrumentations(instrumentations);\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Logger } from './types/Logger';\nexport { LoggerProvider } from './types/LoggerProvider';\nexport {\n  LogAttributes,\n  LogBody,\n  LogRecord,\n  SeverityNumber,\n} from './types/LogRecord';\nexport { LoggerOptions } from './types/LoggerOptions';\nexport { AnyValue, AnyValueMap } from './types/AnyValue';\nexport { NOOP_LOGGER, NoopLogger } from './NoopLogger';\nexport { NOOP_LOGGER_PROVIDER, NoopLoggerProvider } from './NoopLoggerProvider';\nexport { ProxyLogger } from './ProxyLogger';\nexport { ProxyLoggerProvider } from './ProxyLoggerProvider';\n\nimport { LogsAPI } from './api/logs';\nexport const logs = LogsAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './types/Logger';\nimport { LogRecord } from './types/LogRecord';\n\nexport class NoopLogger implements Logger {\n  emit(_logRecord: LogRecord): void {}\n}\n\nexport const NOOP_LOGGER = new NoopLogger();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NoopLogger } from './NoopLogger';\n\nexport class NoopLoggerProvider implements LoggerProvider {\n  getLogger(\n    _name: string,\n    _version?: string | undefined,\n    _options?: LoggerOptions | undefined\n  ): Logger {\n    return new NoopLogger();\n  }\n}\n\nexport const NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NOOP_LOGGER } from './NoopLogger';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { LogRecord } from './types/LogRecord';\n\nexport class ProxyLogger implements Logger {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Logger;\n\n  constructor(\n    private _provider: LoggerDelegator,\n    public readonly name: string,\n    public readonly version?: string | undefined,\n    public readonly options?: LoggerOptions | undefined\n  ) {}\n\n  /**\n   * Emit a log record. This method should only be used by log appenders.\n   *\n   * @param logRecord\n   */\n  emit(logRecord: LogRecord): void {\n    this._getLogger().emit(logRecord);\n  }\n\n  /**\n   * Try to get a logger from the proxy logger provider.\n   * If the proxy logger provider has no delegate, return a noop logger.\n   */\n  private _getLogger() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n    const logger = this._provider.getDelegateLogger(\n      this.name,\n      this.version,\n      this.options\n    );\n    if (!logger) {\n      return NOOP_LOGGER;\n    }\n    this._delegate = logger;\n    return this._delegate;\n  }\n}\n\nexport interface LoggerDelegator {\n  getDelegateLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NOOP_LOGGER_PROVIDER } from './NoopLoggerProvider';\nimport { ProxyLogger } from './ProxyLogger';\n\nexport class ProxyLoggerProvider implements LoggerProvider {\n  private _delegate?: LoggerProvider;\n\n  getLogger(\n    name: string,\n    version?: string | undefined,\n    options?: LoggerOptions | undefined\n  ): Logger {\n    return (\n      this.getDelegateLogger(name, version, options) ??\n      new ProxyLogger(this, name, version, options)\n    );\n  }\n\n  getDelegate(): LoggerProvider {\n    return this._delegate ?? NOOP_LOGGER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate logger provider\n   */\n  setDelegate(delegate: LoggerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateLogger(\n    name: string,\n    version?: string | undefined,\n    options?: LoggerOptions | undefined\n  ): Logger | undefined {\n    return this._delegate?.getLogger(name, version, options);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_LOGS_API_KEY,\n  _global,\n  makeGetter,\n} from '../internal/global-utils';\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { Logger } from '../types/Logger';\nimport { LoggerOptions } from '../types/LoggerOptions';\nimport { ProxyLoggerProvider } from '../ProxyLoggerProvider';\n\nexport class LogsAPI {\n  private static _instance?: LogsAPI;\n\n  private _proxyLoggerProvider = new ProxyLoggerProvider();\n\n  private constructor() {}\n\n  public static getInstance(): LogsAPI {\n    if (!this._instance) {\n      this._instance = new LogsAPI();\n    }\n\n    return this._instance;\n  }\n\n  public setGlobalLoggerProvider(provider: LoggerProvider): LoggerProvider {\n    if (_global[GLOBAL_LOGS_API_KEY]) {\n      return this.getLoggerProvider();\n    }\n\n    _global[GLOBAL_LOGS_API_KEY] = makeGetter<LoggerProvider>(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_LOGGER_PROVIDER\n    );\n    this._proxyLoggerProvider.setDelegate(provider);\n\n    return provider;\n  }\n\n  /**\n   * Returns the global logger provider.\n   *\n   * @returns LoggerProvider\n   */\n  public getLoggerProvider(): LoggerProvider {\n    return (\n      _global[GLOBAL_LOGS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      this._proxyLoggerProvider\n    );\n  }\n\n  /**\n   * Returns a logger from the global logger provider.\n   *\n   * @returns Logger\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger {\n    return this.getLoggerProvider().getLogger(name, version, options);\n  }\n\n  /** Remove the global logger provider */\n  public disable(): void {\n    delete _global[GLOBAL_LOGS_API_KEY];\n    this._proxyLoggerProvider = new ProxyLoggerProvider();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_LOGS_API_KEY]: Get<LoggerProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { _globalThis } from './globalThis';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : ({} as typeof globalThis);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider } from '@opentelemetry/api';\nimport { Instrumentation } from './types';\nimport { LoggerProvider } from '@opentelemetry/api-logs';\n\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(\n  instrumentations: Instrumentation[],\n  tracerProvider?: TracerProvider,\n  meterProvider?: MeterProvider,\n  loggerProvider?: LoggerProvider\n): void {\n  for (let i = 0, j = instrumentations.length; i < j; i++) {\n    const instrumentation = instrumentations[i];\n    if (tracerProvider) {\n      instrumentation.setTracerProvider(tracerProvider);\n    }\n    if (meterProvider) {\n      instrumentation.setMeterProvider(meterProvider);\n    }\n    if (loggerProvider && instrumentation.setLoggerProvider) {\n      instrumentation.setLoggerProvider(loggerProvider);\n    }\n    // instrumentations have been already enabled during creation\n    // so enable only if user prevented that by setting enabled to false\n    // this is to prevent double enabling but when calling register all\n    // instrumentations should be now enabled\n    if (!instrumentation.getConfig().enabled) {\n      instrumentation.enable();\n    }\n  }\n}\n\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(\n  instrumentations: Instrumentation[]\n): void {\n  instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { InstrumentationBase } from './instrumentation';\nexport { normalize } from './noop-normalize';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationAbstract } from '../../instrumentation';\nimport * as types from '../../types';\nimport { InstrumentationConfig } from '../../types';\n\n/**\n * Base abstract class for instrumenting web plugins\n */\nexport abstract class InstrumentationBase<\n    ConfigType extends InstrumentationConfig = InstrumentationConfig,\n  >\n  extends InstrumentationAbstract<ConfigType>\n  implements types.Instrumentation<ConfigType>\n{\n  constructor(\n    instrumentationName: string,\n    instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    super(instrumentationName, instrumentationVersion, config);\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  DiagLogger,\n  metrics,\n  Meter,\n  MeterProvider,\n  trace,\n  Tracer,\n  TracerProvider,\n  Span,\n} from '@opentelemetry/api';\nimport { Logger, LoggerProvider, logs } from '@opentelemetry/api-logs';\nimport * as shimmer from 'shimmer';\nimport {\n  InstrumentationModuleDefinition,\n  Instrumentation,\n  InstrumentationConfig,\n  SpanCustomizationHook,\n} from './types';\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nexport abstract class InstrumentationAbstract<\n  ConfigType extends InstrumentationConfig = InstrumentationConfig,\n> implements Instrumentation<ConfigType>\n{\n  protected _config: ConfigType = {} as ConfigType;\n\n  private _tracer: Tracer;\n  private _meter: Meter;\n  private _logger: Logger;\n  protected _diag: DiagLogger;\n\n  constructor(\n    public readonly instrumentationName: string,\n    public readonly instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    this.setConfig(config);\n\n    this._diag = diag.createComponentLogger({\n      namespace: instrumentationName,\n    });\n\n    this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n    this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n    this._logger = logs.getLogger(instrumentationName, instrumentationVersion);\n    this._updateMetricInstruments();\n  }\n\n  /* Api to wrap instrumented method */\n  protected _wrap = shimmer.wrap;\n  /* Api to unwrap instrumented methods */\n  protected _unwrap = shimmer.unwrap;\n  /* Api to mass wrap instrumented method */\n  protected _massWrap = shimmer.massWrap;\n  /* Api to mass unwrap instrumented methods */\n  protected _massUnwrap = shimmer.massUnwrap;\n\n  /* Returns meter */\n  protected get meter(): Meter {\n    return this._meter;\n  }\n\n  /**\n   * Sets MeterProvider to this plugin\n   * @param meterProvider\n   */\n  public setMeterProvider(meterProvider: MeterProvider): void {\n    this._meter = meterProvider.getMeter(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n\n    this._updateMetricInstruments();\n  }\n\n  /* Returns logger */\n  protected get logger(): Logger {\n    return this._logger;\n  }\n\n  /**\n   * Sets LoggerProvider to this plugin\n   * @param loggerProvider\n   */\n  public setLoggerProvider(loggerProvider: LoggerProvider): void {\n    this._logger = loggerProvider.getLogger(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /**\n   * @experimental\n   *\n   * Get module definitions defined by {@link init}.\n   * This can be used for experimental compile-time instrumentation.\n   *\n   * @returns an array of {@link InstrumentationModuleDefinition}\n   */\n  public getModuleDefinitions(): InstrumentationModuleDefinition[] {\n    const initResult = this.init() ?? [];\n    if (!Array.isArray(initResult)) {\n      return [initResult];\n    }\n\n    return initResult;\n  }\n\n  /**\n   * Sets the new metric instruments with the current Meter.\n   */\n  protected _updateMetricInstruments(): void {\n    return;\n  }\n\n  /* Returns InstrumentationConfig */\n  public getConfig(): ConfigType {\n    return this._config;\n  }\n\n  /**\n   * Sets InstrumentationConfig to this plugin\n   * @param config\n   */\n  public setConfig(config: ConfigType): void {\n    // copy config first level properties to ensure they are immutable.\n    // nested properties are not copied, thus are mutable from the outside.\n    this._config = {\n      enabled: true,\n      ...config,\n    };\n  }\n\n  /**\n   * Sets TraceProvider to this plugin\n   * @param tracerProvider\n   */\n  public setTracerProvider(tracerProvider: TracerProvider): void {\n    this._tracer = tracerProvider.getTracer(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /* Returns tracer */\n  protected get tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /* Enable plugin */\n  public abstract enable(): void;\n\n  /* Disable plugin */\n  public abstract disable(): void;\n\n  /**\n   * Init method in which plugin should define _modules and patches for\n   * methods.\n   */\n  protected abstract init():\n    | InstrumentationModuleDefinition\n    | InstrumentationModuleDefinition[]\n    | void;\n\n  /**\n   * Execute span customization hook, if configured, and log any errors.\n   * Any semantics of the trigger and info are defined by the specific instrumentation.\n   * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n   * @param triggerName The name of the trigger for executing the hook for logging purposes\n   * @param span The span to which the hook should be applied\n   * @param info The info object to be passed to the hook, with useful data the hook may use\n   */\n  protected _runSpanCustomizationHook<SpanCustomizationInfoType>(\n    hookHandler: SpanCustomizationHook<SpanCustomizationInfoType> | undefined,\n    triggerName: string,\n    span: Span,\n    info: SpanCustomizationInfoType\n  ) {\n    if (!hookHandler) {\n      return;\n    }\n\n    try {\n      hookHandler(span, info);\n    } catch (e) {\n      this._diag.error(\n        `Error running span customization hook due to exception in handler`,\n        { triggerName },\n        e\n      );\n    }\n  }\n}\n","'use strict'\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from './types';\n\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): T {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport async function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  DOCUMENT_LOAD = 'documentLoad',\n  DOCUMENT_FETCH = 'documentFetch',\n  RESOURCE_FETCH = 'resourceFetch',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.42.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-document-load';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Span } from '@opentelemetry/api';\nimport { otperformance } from '@opentelemetry/core';\nimport {\n  hasKey,\n  PerformanceEntries,\n  PerformanceLegacy,\n  PerformanceTimingNames as PTN,\n} from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\n\nexport const getPerformanceNavigationEntries = (): PerformanceEntries => {\n  const entries: PerformanceEntries = {};\n  const performanceNavigationTiming = (\n    otperformance as unknown as Performance\n  ).getEntriesByType?.('navigation')[0] as PerformanceEntries;\n\n  if (performanceNavigationTiming) {\n    const keys = Object.values(PTN);\n    keys.forEach((key: string) => {\n      if (hasKey(performanceNavigationTiming, key)) {\n        const value = performanceNavigationTiming[key];\n        if (typeof value === 'number') {\n          entries[key] = value;\n        }\n      }\n    });\n  } else {\n    // // fallback to previous version\n    const perf: typeof otperformance & PerformanceLegacy = otperformance;\n    const performanceTiming = perf.timing;\n    if (performanceTiming) {\n      const keys = Object.values(PTN);\n      keys.forEach((key: string) => {\n        if (hasKey(performanceTiming, key)) {\n          const value = performanceTiming[key];\n          if (typeof value === 'number') {\n            entries[key] = value;\n          }\n        }\n      });\n    }\n  }\n\n  return entries;\n};\n\nconst performancePaintNames = {\n  'first-paint': EventNames.FIRST_PAINT,\n  'first-contentful-paint': EventNames.FIRST_CONTENTFUL_PAINT,\n};\n\nexport const addSpanPerformancePaintEvents = (span: Span) => {\n  const performancePaintTiming = (\n    otperformance as unknown as Performance\n  ).getEntriesByType?.('paint');\n  if (performancePaintTiming) {\n    performancePaintTiming.forEach(({ name, startTime }) => {\n      if (hasKey(performancePaintNames, name)) {\n        span.addEvent(performancePaintNames[name], startTime);\n      }\n    });\n  }\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum EventNames {\n  FIRST_PAINT = 'firstPaint',\n  FIRST_CONTENTFUL_PAINT = 'firstContentfulPaint',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface DocumentLoadCustomAttributeFunction {\n  (span: Span): void;\n}\n\nexport interface ResourceFetchCustomAttributeFunction {\n  (span: Span, resource: PerformanceResourceTiming): void;\n}\n\n/**\n * DocumentLoadInstrumentationPlugin Config\n */\nexport interface DocumentLoadInstrumentationConfig\n  extends InstrumentationConfig {\n  /** Function for adding custom attributes on the document load, document fetch and or resource fetch spans */\n  applyCustomAttributesOnSpan?: {\n    documentLoad?: DocumentLoadCustomAttributeFunction;\n    documentFetch?: DocumentLoadCustomAttributeFunction;\n    resourceFetch?: ResourceFetchCustomAttributeFunction;\n  };\n\n  /** Ignore adding network events as span events for document fetch and resource fetch spans.\n   * This instrumentation will send the following span events by default:\n   * connectEnd\n   * connectStart\n   * decodedBodySize\n   * domComplete\n   * domContentLoadedEventEnd\n   * domContentLoadedEventStart\n   * domInteractive\n   * domainLookupEnd\n   * domainLookupStart\n   * encodedBodySize\n   * fetchStart\n   * loadEventEnd\n   * loadEventStart\n   * navigationStart\n   * redirectEnd\n   * redirectStart\n   * requestStart\n   * responseEnd\n   * responseStart\n   * secureConnectionStart\n   * unloadEventEnd\n   * unloadEventStart\n   */\n  ignoreNetworkEvents?: boolean;\n\n  /** Ignore adding performance paint span events on document load spans\n   * This instrumentation will send the following span events by default:\n   * firstContentfulPaint\n   * firstPaint\n   */\n  ignorePerformancePaintEvents?: boolean;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  Func,\n  TargetWithEvents,\n  ZoneContextManager,\n} from '@opentelemetry/context-zone-peer-dep';\nimport 'zone.js';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { ZoneContextManager } from './ZoneContextManager';\nexport { Func, TargetWithEvents } from './types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/// <reference types=\"zone.js\" />\nimport { Context, ContextManager, ROOT_CONTEXT } from '@opentelemetry/api';\nimport { TargetWithEvents } from './types';\nimport { isListenerObject } from './util';\n\n/* Key name to be used to save a context reference in Zone */\nconst ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\n\n/**\n * ZoneContextManager\n * This module provides an easy functionality for tracing action between asynchronous operations in web.\n * It was not possible with standard [StackContextManager]{@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-web/src/StackContextManager.ts}.\n * It heavily depends on [zone.js]{@link https://www.npmjs.com/package/zone.js}.\n * It stores the information about context in zone. Each Context will have always new Zone;\n * It also supports binding a certain Span to a target that has \"addEventListener\" and \"removeEventListener\".\n * When this happens a new zone is being created and the provided Span is being assigned to this zone.\n */\nexport class ZoneContextManager implements ContextManager {\n  /**\n   * whether the context manager is enabled or not\n   */\n  private _enabled = false;\n\n  /**\n   * Helps to create a unique name for the zones - part of zone name\n   */\n  private _zoneCounter = 0;\n\n  /**\n   * Returns the active context from certain zone name\n   * @param activeZone\n   */\n  private _activeContextFromZone(activeZone: Zone | undefined): Context {\n    return (activeZone && activeZone.get(ZONE_CONTEXT_KEY)) || ROOT_CONTEXT;\n  }\n\n  /**\n   * @param context A context (span) to be executed within target function\n   * @param target Function to be executed within the context\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _bindFunction<T extends Function>(context: Context, target: T): T {\n    const manager = this;\n    const contextWrapper = function (this: unknown, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    return contextWrapper as unknown as T;\n  }\n\n  /**\n   * @param context A context (span) to be bind to target\n   * @param obj target object on which the listeners will be patched\n   */\n  private _bindListener<T>(context: Context, obj: T): T {\n    const target = obj as unknown as TargetWithEvents;\n    if (target.__ot_listeners !== undefined) {\n      return obj;\n    }\n    target.__ot_listeners = {};\n\n    if (typeof target.addEventListener === 'function') {\n      target.addEventListener = this._patchAddEventListener(\n        target,\n        target.addEventListener,\n        context\n      );\n    }\n\n    if (typeof target.removeEventListener === 'function') {\n      target.removeEventListener = this._patchRemoveEventListener(\n        target,\n        target.removeEventListener\n      );\n    }\n\n    return obj;\n  }\n\n  /**\n   * Creates a new unique zone name\n   */\n  private _createZoneName() {\n    this._zoneCounter++;\n    const random = Math.random();\n    return `${this._zoneCounter}-${random}`;\n  }\n\n  /**\n   * Creates a new zone\n   * @param zoneName zone name\n   * @param context A context (span) to be bind with Zone\n   */\n  private _createZone(zoneName: string, context: unknown): Zone {\n    return Zone.current.fork({\n      name: zoneName,\n      properties: {\n        [ZONE_CONTEXT_KEY]: context,\n      },\n    });\n  }\n\n  /**\n   * Returns the active zone\n   */\n  private _getActiveZone(): Zone | undefined {\n    return Zone.current;\n  }\n\n  /**\n   * Patches addEventListener method\n   * @param target any target that has \"addEventListener\" method\n   * @param original reference to the patched method\n   * @param [context] context to be bind to the listener\n   */\n  private _patchAddEventListener(\n    target: TargetWithEvents,\n    original: NonNullable<TargetWithEvents['addEventListener']>,\n    context: Context\n  ) {\n    const contextManager = this;\n\n    return function (this: TargetWithEvents, event, listener, opts) {\n      if (target.__ot_listeners === undefined) {\n        target.__ot_listeners = {};\n      }\n      let listeners = target.__ot_listeners[event];\n      if (listeners === undefined) {\n        listeners = new WeakMap();\n        target.__ot_listeners[event] = listeners;\n      }\n      const patchedListener = contextManager.bind(context, listener);\n      // store a weak reference of the user listener to ours\n      listeners.set(listener, patchedListener);\n      return original.call(this, event, patchedListener, opts);\n    } as TargetWithEvents['addEventListener'];\n  }\n\n  /**\n   * Patches removeEventListener method\n   * @param target any target that has \"removeEventListener\" method\n   * @param original reference to the patched method\n   */\n  private _patchRemoveEventListener(\n    target: TargetWithEvents,\n    original: NonNullable<TargetWithEvents['removeEventListener']>\n  ) {\n    return function (this: TargetWithEvents, event, listener) {\n      if (\n        target.__ot_listeners === undefined ||\n        target.__ot_listeners[event] === undefined\n      ) {\n        return original.call(this, event, listener);\n      }\n      const events = target.__ot_listeners[event];\n      const patchedListener = events.get(listener);\n      events.delete(listener);\n      return original.call(this, event, patchedListener || listener);\n    } as TargetWithEvents['removeEventListener'];\n  }\n\n  /**\n   * Returns the active context\n   */\n  active(): Context {\n    if (!this._enabled) {\n      return ROOT_CONTEXT;\n    }\n    const activeZone = this._getActiveZone();\n\n    const active = this._activeContextFromZone(activeZone);\n    if (active) {\n      return active;\n    }\n\n    return ROOT_CONTEXT;\n  }\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T | TargetWithEvents): T {\n    // if no specific context to propagate is given, we use the current one\n    if (context === undefined) {\n      context = this.active();\n    }\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    } else if (isListenerObject(target)) {\n      this._bindListener(context, target);\n    }\n    return target as unknown as T;\n  }\n\n  /**\n   * Disable the context manager (clears all the contexts)\n   */\n  disable(): this {\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Enables the context manager and creates a default(root) context\n   */\n  enable(): this {\n    this._enabled = true;\n    return this;\n  }\n\n  /**\n   * Calls the callback function [fn] with the provided [context].\n   *     If [context] is undefined then it will use the active context.\n   *     The context will be set as active\n   * @param context A context (span) to be called with provided callback\n   * @param fn Callback function\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context | null,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const zoneName = this._createZoneName();\n\n    const newZone = this._createZone(zoneName, context);\n\n    return newZone.run(fn, thisArg, args);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * check if an object has addEventListener and removeEventListener functions then it will return true.\n * Generally only called with a `TargetWithEvents` but may be called with an unknown / any.\n * @param obj - The object to check.\n */\nexport function isListenerObject(obj: any = {}): boolean {\n  return (\n    typeof obj.addEventListener === 'function' &&\n    typeof obj.removeEventListener === 'function'\n  );\n}\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            const zoneTask = task;\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            const { type, data: { isPeriodic = false, isRefreshable = false } = {} } = task;\n            if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && zoneTask._transitionTo(running, scheduled);\n            const previousTask = _currentTask;\n            _currentTask = zoneTask;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                const state = task.state;\n                if (state !== notScheduled && state !== unknown) {\n                    if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                        reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                    }\n                    else {\n                        const zoneDelegates = zoneTask._zoneDelegates;\n                        this._updateTaskCount(zoneTask, -1);\n                        reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                        if (isRefreshable) {\n                            zoneTask._zoneDelegates = zoneDelegates;\n                        }\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = -1;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (\n        // https://github.com/angular/angular/issues/47579\n        // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n        // This is the only specific case we should check for. The spec defines that the\n        // `returnValue` attribute represents the message to show the user. When the event\n        // is created, this attribute must be set to the empty string.\n        event.type === 'beforeunload' &&\n            // To prevent any breaking changes resulting from this change, given that\n            // it was already causing a significant number of failures in G3, we have hidden\n            // that behavior behind a global configuration flag. Consumers can enable this\n            // flag explicitly if they want the `beforeunload` event to be handled as defined\n            // in the specification.\n            _global[enableBeforeunloadSymbol] &&\n            // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n            // `typeof result` is a string.\n            typeof result === 'string') {\n            event.returnValue = result;\n        }\n        else if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// Note that passive event listeners are now supported by most modern browsers,\n// including Chrome, Firefox, Safari, and Edge. There's a pending change that\n// would remove support for legacy browsers by zone.js. Removing `passiveSupported`\n// from the codebase will reduce the final code size for existing apps that still use zone.js.\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n        // eliminating the need to create a new object solely for passing data.\n        // WARNING: This object has a static lifetime, meaning it is not created\n        // each time `addEventListener` is called. It is instantiated only once\n        // and captured by reference inside the `addEventListener` and\n        // `removeEventListener` functions. Do not add any new properties to this\n        // object, as doing so would necessitate maintaining the information\n        // between `addEventListener` calls.\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        /**\n         * In the context of events and listeners, this function will be\n         * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n         * Cancelling a task is primarily used to remove event listeners from\n         * the task target.\n         */\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (task.removeAbortListener) {\n                                task.removeAbortListener();\n                                task.removeAbortListener = null;\n                            }\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        function copyEventListenerOptions(options) {\n            if (typeof options === 'object' && options !== null) {\n                // We need to destructure the target `options` object since it may\n                // be frozen or sealed (possibly provided implicitly by a third-party\n                // library), or its properties may be readonly.\n                const newOptions = { ...options };\n                // The `signal` option was recently introduced, which caused regressions in\n                // third-party scenarios where `AbortController` was directly provided to\n                // `addEventListener` as options. For instance, in cases like\n                // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                // which is valid because `AbortController` includes a `signal` getter, spreading\n                // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                // isn't feasible since `AbortController` is a built-in object type, and attempting\n                // to create a new object directly with it as the prototype might result in\n                // unexpected behavior.\n                if (options.signal) {\n                    newOptions.signal = options.signal;\n                }\n                return newOptions;\n            }\n            return options;\n        }\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // In the code below, `options` should no longer be reassigned; instead, it\n                // should only be mutated. This is because we pass that object to the native\n                // `addEventListener`.\n                // It's generally recommended to use the same object reference for options.\n                // This ensures consistency and avoids potential issues.\n                taskData.options = options;\n                if (once) {\n                    // When using `addEventListener` with the `once` option, we don't pass\n                    // the `once` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `once` setting and handle it ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // When using `addEventListener` with the `signal` option, we don't pass\n                    // the `signal` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `signal` setting and handle it ourselves.\n                    taskData.options.signal = undefined;\n                }\n                // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                // is updated before scheduling the task, as `customScheduleGlobal` uses\n                // `taskData.options` to pass it to the native `addEventListener`.\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    taskData.options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            // `existingTasks` may not exist if the `addEventListener` was called before\n            // it was patched by zone.js. Please refer to the attached issue for\n            // clarification, particularly after the `if` condition, before calling\n            // the native `removeEventListener`.\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // In all other conditions, when `addEventListener` is called after being\n                        // patched by zone.js, we would always find an event task on the `EventTarget`.\n                        // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                        // which ultimately removes an event listener and cleans up the abort listener\n                        // (if an `AbortSignal` was provided when scheduling a task).\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // https://github.com/angular/zone.js/issues/930\n            // We may encounter a situation where the `addEventListener` was\n            // called on the event target before zone.js is loaded, resulting\n            // in no task being stored on the event target due to its invocation\n            // of the native implementation. In this scenario, we simply need to\n            // invoke the native `removeEventListener`.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        const handleOrId = setNative.apply(window, data.args);\n        // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n        // to this so that we do not cause potentally leaks when using `setTimeout`\n        // since this can be periodic when using `.refresh`.\n        if (isNumber(handleOrId)) {\n            data.handleId = handleOrId;\n        }\n        else {\n            data.handle = handleOrId;\n            // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n            data.isRefreshable = isFunction(handleOrId.refresh);\n        }\n        return task;\n    }\n    function clearTask(task) {\n        const { handle, handleId } = task.data;\n        return clearNative.call(window, handle ?? handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (isFunction(args[0])) {\n            const options = {\n                isRefreshable: false,\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    const { handle, handleId, isPeriodic, isRefreshable } = options;\n                    if (!isPeriodic && !isRefreshable) {\n                        if (handleId) {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[handleId];\n                        }\n                        else if (handle) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            handle[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const { handleId, handle, isRefreshable, isPeriodic } = task.data;\n            if (handleId) {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handleId] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n                if (isRefreshable && !isPeriodic) {\n                    const originalRefresh = handle.refresh;\n                    handle.refresh = function () {\n                        const { zone, state } = task;\n                        if (state === 'notScheduled') {\n                            task._state = 'scheduled';\n                            zone._updateTaskCount(task, 1);\n                        }\n                        else if (state === 'running') {\n                            task._state = 'scheduling';\n                        }\n                        return originalRefresh.call(this);\n                    };\n                }\n            }\n            return handle ?? handleId ?? task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (isNumber(id)) {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n            delete tasksByHandleId[id];\n        }\n        else {\n            // nodejs env ?? other environments.\n            task = id?.[taskSymbol];\n            if (task) {\n                id[taskSymbol] = null;\n            }\n            else {\n                task = id;\n            }\n        }\n        if (task?.type) {\n            if (task.cancelFn) {\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricDescriptor } from './export/MetricData';\n\nexport {\n  Sum,\n  LastValue,\n  Histogram,\n  ExponentialHistogram,\n} from './aggregator/types';\n\nexport {\n  AggregationSelector,\n  AggregationTemporalitySelector,\n} from './export/AggregationSelector';\n\nexport { AggregationTemporality } from './export/AggregationTemporality';\n\nexport {\n  DataPoint,\n  DataPointType,\n  SumMetricData,\n  GaugeMetricData,\n  HistogramMetricData,\n  ExponentialHistogramMetricData,\n  ResourceMetrics,\n  ScopeMetrics,\n  MetricData,\n  MetricDescriptor,\n  CollectionResult,\n} from './export/MetricData';\n\nexport { PushMetricExporter } from './export/MetricExporter';\n\nexport { MetricReader, MetricReaderOptions } from './export/MetricReader';\n\nexport {\n  PeriodicExportingMetricReader,\n  PeriodicExportingMetricReaderOptions,\n} from './export/PeriodicExportingMetricReader';\n\nexport { InMemoryMetricExporter } from './export/InMemoryMetricExporter';\n\nexport { ConsoleMetricExporter } from './export/ConsoleMetricExporter';\n\nexport { MetricCollectOptions, MetricProducer } from './export/MetricProducer';\n\nexport { InstrumentType } from './InstrumentDescriptor';\n/**\n * @deprecated Use {@link MetricDescriptor} instead.\n */\nexport type InstrumentDescriptor = MetricDescriptor;\n\nexport { MeterProvider, MeterProviderOptions } from './MeterProvider';\n\nexport {\n  DefaultAggregation,\n  ExplicitBucketHistogramAggregation,\n  ExponentialHistogramAggregation,\n  DropAggregation,\n  HistogramAggregation,\n  LastValueAggregation,\n  SumAggregation,\n  Aggregation,\n} from './view/Aggregation';\n\nexport { View, ViewOptions } from './view/View';\n\nexport { TimeoutError } from './utils';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * AggregationTemporality indicates the way additive quantities are expressed.\n */\nexport enum AggregationTemporality {\n  DELTA,\n  CUMULATIVE,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime, Attributes, ValueType } from '@opentelemetry/api';\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { Histogram, ExponentialHistogram } from '../aggregator/types';\n\nexport interface MetricDescriptor {\n  readonly name: string;\n  readonly description: string;\n  readonly unit: string;\n  /**\n   * @deprecated exporter should avoid depending on the type of the instrument\n   * as their resulting aggregator can be re-mapped with views.\n   */\n  readonly type: InstrumentType;\n  readonly valueType: ValueType;\n}\n\n/**\n * Basic metric data fields.\n */\ninterface BaseMetricData {\n  readonly descriptor: MetricDescriptor;\n  readonly aggregationTemporality: AggregationTemporality;\n  /**\n   * DataPointType of the metric instrument.\n   */\n  readonly dataPointType: DataPointType;\n}\n\n/**\n * Represents a metric data aggregated by either a LastValueAggregation or\n * SumAggregation.\n */\nexport interface SumMetricData extends BaseMetricData {\n  readonly dataPointType: DataPointType.SUM;\n  readonly dataPoints: DataPoint<number>[];\n  readonly isMonotonic: boolean;\n}\n\nexport interface GaugeMetricData extends BaseMetricData {\n  readonly dataPointType: DataPointType.GAUGE;\n  readonly dataPoints: DataPoint<number>[];\n}\n\n/**\n * Represents a metric data aggregated by a HistogramAggregation.\n */\nexport interface HistogramMetricData extends BaseMetricData {\n  readonly dataPointType: DataPointType.HISTOGRAM;\n  readonly dataPoints: DataPoint<Histogram>[];\n}\n\n/**\n * Represents a metric data aggregated by a ExponentialHistogramAggregation.\n */\nexport interface ExponentialHistogramMetricData extends BaseMetricData {\n  readonly dataPointType: DataPointType.EXPONENTIAL_HISTOGRAM;\n  readonly dataPoints: DataPoint<ExponentialHistogram>[];\n}\n\n/**\n * Represents an aggregated metric data.\n */\nexport type MetricData =\n  | SumMetricData\n  | GaugeMetricData\n  | HistogramMetricData\n  | ExponentialHistogramMetricData;\n\nexport interface ScopeMetrics {\n  scope: InstrumentationScope;\n  metrics: MetricData[];\n}\n\nexport interface ResourceMetrics {\n  resource: IResource;\n  scopeMetrics: ScopeMetrics[];\n}\n\n/**\n * Represents the collection result of the metrics. If there are any\n * non-critical errors in the collection, like throwing in a single observable\n * callback, these errors are aggregated in the {@link CollectionResult.errors}\n * array and other successfully collected metrics are returned.\n */\nexport interface CollectionResult {\n  /**\n   * Collected metrics.\n   */\n  resourceMetrics: ResourceMetrics;\n  /**\n   * Arbitrary JavaScript exception values.\n   */\n  errors: unknown[];\n}\n\n/**\n * The aggregated point data type.\n */\nexport enum DataPointType {\n  /**\n   * A histogram data point contains a histogram statistics of collected\n   * values with a list of explicit bucket boundaries and statistics such\n   * as min, max, count, and sum of all collected values.\n   */\n  HISTOGRAM,\n  /**\n   * An exponential histogram data point contains a histogram statistics of\n   * collected values where bucket boundaries are automatically calculated\n   * using an exponential function, and statistics such as min, max, count,\n   * and sum of all collected values.\n   */\n  EXPONENTIAL_HISTOGRAM,\n  /**\n   * A gauge metric data point has only a single numeric value.\n   */\n  GAUGE,\n  /**\n   * A sum metric data point has a single numeric value and a\n   * monotonicity-indicator.\n   */\n  SUM,\n}\n\n/**\n * Represents an aggregated point data with start time, end time and their\n * associated attributes and points.\n */\nexport interface DataPoint<T> {\n  /**\n   * The start epoch timestamp of the DataPoint, usually the time when\n   * the metric was created when the preferred AggregationTemporality is\n   * CUMULATIVE, or last collection time otherwise.\n   */\n  readonly startTime: HrTime;\n  /**\n   * The end epoch timestamp when data were collected, usually it represents\n   * the moment when `MetricReader.collect` was called.\n   */\n  readonly endTime: HrTime;\n  /**\n   * The attributes associated with this DataPoint.\n   */\n  readonly attributes: Attributes;\n  /**\n   * The value for this DataPoint. The type of the value is indicated by the\n   * {@link DataPointType}.\n   */\n  readonly value: T;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { MetricProducer } from './MetricProducer';\nimport { CollectionResult } from './MetricData';\nimport { FlatMap, callWithTimeout } from '../utils';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport {\n  CollectionOptions,\n  ForceFlushOptions,\n  ShutdownOptions,\n} from '../types';\nimport { Aggregation } from '../view/Aggregation';\nimport {\n  AggregationSelector,\n  AggregationTemporalitySelector,\n  DEFAULT_AGGREGATION_SELECTOR,\n  DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR,\n} from './AggregationSelector';\nimport { CardinalitySelector } from './CardinalitySelector';\n\nexport interface MetricReaderOptions {\n  /**\n   * Aggregation selector based on metric instrument types. If no views are\n   * configured for a metric instrument, a per-metric-reader aggregation is\n   * selected with this selector.\n   */\n  aggregationSelector?: AggregationSelector;\n  /**\n   * Aggregation temporality selector based on metric instrument types. If\n   * not configured, cumulative is used for all instruments.\n   */\n  aggregationTemporalitySelector?: AggregationTemporalitySelector;\n  /**\n   * Cardinality selector based on metric instrument types. If not configured,\n   * a default value is used.\n   */\n  cardinalitySelector?: CardinalitySelector;\n  /**\n   * **Note, this option is experimental**. Additional MetricProducers to use as a source of\n   * aggregated metric data in addition to the SDK's metric data. The resource returned by\n   * these MetricProducers is ignored; the SDK's resource will be used instead.\n   * @experimental\n   */\n  metricProducers?: MetricProducer[];\n}\n\n/**\n * A registered reader of metrics that, when linked to a {@link MetricProducer}, offers global\n * control over metrics.\n */\nexport abstract class MetricReader {\n  // Tracks the shutdown state.\n  // TODO: use BindOncePromise here once a new version of @opentelemetry/core is available.\n  private _shutdown = false;\n  // Additional MetricProducers which will be combined with the SDK's output\n  private _metricProducers: MetricProducer[];\n  // MetricProducer used by this instance which produces metrics from the SDK\n  private _sdkMetricProducer?: MetricProducer;\n  private readonly _aggregationTemporalitySelector: AggregationTemporalitySelector;\n  private readonly _aggregationSelector: AggregationSelector;\n  private readonly _cardinalitySelector?: CardinalitySelector;\n\n  constructor(options?: MetricReaderOptions) {\n    this._aggregationSelector =\n      options?.aggregationSelector ?? DEFAULT_AGGREGATION_SELECTOR;\n    this._aggregationTemporalitySelector =\n      options?.aggregationTemporalitySelector ??\n      DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR;\n    this._metricProducers = options?.metricProducers ?? [];\n    this._cardinalitySelector = options?.cardinalitySelector;\n  }\n\n  /**\n   * Set the {@link MetricProducer} used by this instance. **This should only be called by the\n   * SDK and should be considered internal.**\n   *\n   * To add additional {@link MetricProducer}s to a {@link MetricReader}, pass them to the\n   * constructor as {@link MetricReaderOptions.metricProducers}.\n   *\n   * @internal\n   * @param metricProducer\n   */\n  setMetricProducer(metricProducer: MetricProducer) {\n    if (this._sdkMetricProducer) {\n      throw new Error(\n        'MetricReader can not be bound to a MeterProvider again.'\n      );\n    }\n    this._sdkMetricProducer = metricProducer;\n    this.onInitialized();\n  }\n\n  /**\n   * Select the {@link Aggregation} for the given {@link InstrumentType} for this\n   * reader.\n   */\n  selectAggregation(instrumentType: InstrumentType): Aggregation {\n    return this._aggregationSelector(instrumentType);\n  }\n\n  /**\n   * Select the {@link AggregationTemporality} for the given\n   * {@link InstrumentType} for this reader.\n   */\n  selectAggregationTemporality(\n    instrumentType: InstrumentType\n  ): AggregationTemporality {\n    return this._aggregationTemporalitySelector(instrumentType);\n  }\n\n  /**\n   * Select the cardinality limit for the given {@link InstrumentType} for this\n   * reader.\n   */\n  selectCardinalityLimit(instrumentType: InstrumentType): number {\n    return this._cardinalitySelector\n      ? this._cardinalitySelector(instrumentType)\n      : 2000; // default value if no selector is provided\n  }\n\n  /**\n   * Handle once the SDK has initialized this {@link MetricReader}\n   * Overriding this method is optional.\n   */\n  protected onInitialized(): void {\n    // Default implementation is empty.\n  }\n\n  /**\n   * Handle a shutdown signal by the SDK.\n   *\n   * <p> For push exporters, this should shut down any intervals and close any open connections.\n   * @protected\n   */\n  protected abstract onShutdown(): Promise<void>;\n\n  /**\n   * Handle a force flush signal by the SDK.\n   *\n   * <p> In all scenarios metrics should be collected via {@link collect()}.\n   * <p> For push exporters, this should collect and report metrics.\n   * @protected\n   */\n  protected abstract onForceFlush(): Promise<void>;\n\n  /**\n   * Collect all metrics from the associated {@link MetricProducer}\n   */\n  async collect(options?: CollectionOptions): Promise<CollectionResult> {\n    if (this._sdkMetricProducer === undefined) {\n      throw new Error('MetricReader is not bound to a MetricProducer');\n    }\n\n    // Subsequent invocations to collect are not allowed. SDKs SHOULD return some failure for these calls.\n    if (this._shutdown) {\n      throw new Error('MetricReader is shutdown');\n    }\n\n    const [sdkCollectionResults, ...additionalCollectionResults] =\n      await Promise.all([\n        this._sdkMetricProducer.collect({\n          timeoutMillis: options?.timeoutMillis,\n        }),\n        ...this._metricProducers.map(producer =>\n          producer.collect({\n            timeoutMillis: options?.timeoutMillis,\n          })\n        ),\n      ]);\n\n    // Merge the results, keeping the SDK's Resource\n    const errors = sdkCollectionResults.errors.concat(\n      FlatMap(additionalCollectionResults, result => result.errors)\n    );\n    const resource = sdkCollectionResults.resourceMetrics.resource;\n    const scopeMetrics =\n      sdkCollectionResults.resourceMetrics.scopeMetrics.concat(\n        FlatMap(\n          additionalCollectionResults,\n          result => result.resourceMetrics.scopeMetrics\n        )\n      );\n    return {\n      resourceMetrics: {\n        resource,\n        scopeMetrics,\n      },\n      errors,\n    };\n  }\n\n  /**\n   * Shuts down the metric reader, the promise will reject after the optional timeout or resolve after completion.\n   *\n   * <p> NOTE: this operation will continue even after the promise rejects due to a timeout.\n   * @param options options with timeout.\n   */\n  async shutdown(options?: ShutdownOptions): Promise<void> {\n    // Do not call shutdown again if it has already been called.\n    if (this._shutdown) {\n      api.diag.error('Cannot call shutdown twice.');\n      return;\n    }\n\n    // No timeout if timeoutMillis is undefined or null.\n    if (options?.timeoutMillis == null) {\n      await this.onShutdown();\n    } else {\n      await callWithTimeout(this.onShutdown(), options.timeoutMillis);\n    }\n\n    this._shutdown = true;\n  }\n\n  /**\n   * Flushes metrics read by this reader, the promise will reject after the optional timeout or resolve after completion.\n   *\n   * <p> NOTE: this operation will continue even after the promise rejects due to a timeout.\n   * @param options options with timeout.\n   */\n  async forceFlush(options?: ForceFlushOptions): Promise<void> {\n    if (this._shutdown) {\n      api.diag.warn('Cannot forceFlush on already shutdown MetricReader.');\n      return;\n    }\n\n    // No timeout if timeoutMillis is undefined or null.\n    if (options?.timeoutMillis == null) {\n      await this.onForceFlush();\n      return;\n    }\n\n    await callWithTimeout(this.onForceFlush(), options.timeoutMillis);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\nimport { InstrumentationScope } from '@opentelemetry/core';\n\nexport type Maybe<T> = T | undefined;\n\nexport function isNotNullish<T>(item: Maybe<T>): item is T {\n  return item !== undefined && item !== null;\n}\n\n/**\n * Converting the unordered attributes into unique identifier string.\n * @param attributes user provided unordered Attributes.\n */\nexport function hashAttributes(attributes: Attributes): string {\n  let keys = Object.keys(attributes);\n  if (keys.length === 0) return '';\n\n  // Return a string that is stable on key orders.\n  keys = keys.sort();\n  return JSON.stringify(keys.map(key => [key, attributes[key]]));\n}\n\n/**\n * Converting the instrumentation scope object to a unique identifier string.\n * @param instrumentationScope\n */\nexport function instrumentationScopeId(\n  instrumentationScope: InstrumentationScope\n): string {\n  return `${instrumentationScope.name}:${instrumentationScope.version ?? ''}:${\n    instrumentationScope.schemaUrl ?? ''\n  }`;\n}\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(\n  promise: Promise<T>,\n  timeout: number\n): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(\n    _resolve,\n    reject\n  ) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(\n    result => {\n      clearTimeout(timeoutHandle);\n      return result;\n    },\n    reason => {\n      clearTimeout(timeoutHandle);\n      throw reason;\n    }\n  );\n}\n\nexport interface PromiseAllSettledFulfillResult<T> {\n  status: 'fulfilled';\n  value: T;\n}\n\nexport interface PromiseAllSettledRejectionResult {\n  status: 'rejected';\n  reason: unknown;\n}\n\nexport type PromiseAllSettledResult<T> =\n  | PromiseAllSettledFulfillResult<T>\n  | PromiseAllSettledRejectionResult;\n\n/**\n * Node.js v12.9 lower and browser compatible `Promise.allSettled`.\n */\nexport async function PromiseAllSettled<T>(\n  promises: Promise<T>[]\n): Promise<PromiseAllSettledResult<T>[]> {\n  return Promise.all(\n    promises.map<Promise<PromiseAllSettledResult<T>>>(async p => {\n      try {\n        const ret = await p;\n        return {\n          status: 'fulfilled',\n          value: ret,\n        };\n      } catch (e) {\n        return {\n          status: 'rejected',\n          reason: e,\n        };\n      }\n    })\n  );\n}\n\nexport function isPromiseAllSettledRejectionResult(\n  it: PromiseAllSettledResult<unknown>\n): it is PromiseAllSettledRejectionResult {\n  return it.status === 'rejected';\n}\n\n/**\n * Node.js v11.0 lower and browser compatible `Array.prototype.flatMap`.\n */\nexport function FlatMap<T, R>(arr: T[], fn: (it: T) => R[]): R[] {\n  const result: R[] = [];\n  arr.forEach(it => {\n    result.push(...fn(it));\n  });\n  return result;\n}\n\nexport function setEquals(lhs: Set<unknown>, rhs: Set<unknown>): boolean {\n  if (lhs.size !== rhs.size) {\n    return false;\n  }\n  for (const item of lhs) {\n    if (!rhs.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Binary search the sorted array to the find upper bound for the value.\n * @param arr\n * @param value\n * @returns\n */\nexport function binarySearchUB(arr: number[], value: number): number {\n  let lo = 0;\n  let hi = arr.length - 1;\n  let ret = arr.length;\n\n  while (hi >= lo) {\n    const mid = lo + Math.trunc((hi - lo) / 2);\n    if (arr[mid] < value) {\n      lo = mid + 1;\n    } else {\n      ret = mid;\n      hi = mid - 1;\n    }\n  }\n\n  return ret;\n}\n\nexport function equalsCaseInsensitive(lhs: string, rhs: string): boolean {\n  return lhs.toLowerCase() === rhs.toLowerCase();\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { Aggregation } from '../view/Aggregation';\nimport { AggregationTemporality } from './AggregationTemporality';\n\n/**\n * Aggregation selector based on metric instrument types.\n */\nexport type AggregationSelector = (\n  instrumentType: InstrumentType\n) => Aggregation;\n\n/**\n * Aggregation temporality selector based on metric instrument types.\n */\nexport type AggregationTemporalitySelector = (\n  instrumentType: InstrumentType\n) => AggregationTemporality;\n\nexport const DEFAULT_AGGREGATION_SELECTOR: AggregationSelector =\n  _instrumentType => Aggregation.Default();\nexport const DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR: AggregationTemporalitySelector =\n  _instrumentType => AggregationTemporality.CUMULATIVE;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  Aggregator,\n  SumAggregator,\n  DropAggregator,\n  LastValueAggregator,\n  HistogramAggregator,\n  ExponentialHistogramAggregator,\n} from '../aggregator';\nimport { Accumulation } from '../aggregator/types';\nimport { InstrumentDescriptor, InstrumentType } from '../InstrumentDescriptor';\nimport { Maybe } from '../utils';\n\n/**\n * Configures how measurements are combined into metrics for views.\n *\n * Aggregation provides a set of built-in aggregations via static methods.\n */\nexport abstract class Aggregation {\n  abstract createAggregator(\n    instrument: InstrumentDescriptor\n  ): Aggregator<Maybe<Accumulation>>;\n\n  static Drop(): Aggregation {\n    return DROP_AGGREGATION;\n  }\n\n  static Sum(): Aggregation {\n    return SUM_AGGREGATION;\n  }\n\n  static LastValue(): Aggregation {\n    return LAST_VALUE_AGGREGATION;\n  }\n\n  static Histogram(): Aggregation {\n    return HISTOGRAM_AGGREGATION;\n  }\n\n  static ExponentialHistogram(): Aggregation {\n    return EXPONENTIAL_HISTOGRAM_AGGREGATION;\n  }\n\n  static Default(): Aggregation {\n    return DEFAULT_AGGREGATION;\n  }\n}\n\n/**\n * The default drop aggregation.\n */\nexport class DropAggregation extends Aggregation {\n  private static DEFAULT_INSTANCE = new DropAggregator();\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return DropAggregation.DEFAULT_INSTANCE;\n  }\n}\n\n/**\n * The default sum aggregation.\n */\nexport class SumAggregation extends Aggregation {\n  private static MONOTONIC_INSTANCE = new SumAggregator(true);\n  private static NON_MONOTONIC_INSTANCE = new SumAggregator(false);\n  createAggregator(instrument: InstrumentDescriptor) {\n    switch (instrument.type) {\n      case InstrumentType.COUNTER:\n      case InstrumentType.OBSERVABLE_COUNTER:\n      case InstrumentType.HISTOGRAM: {\n        return SumAggregation.MONOTONIC_INSTANCE;\n      }\n      default: {\n        return SumAggregation.NON_MONOTONIC_INSTANCE;\n      }\n    }\n  }\n}\n\n/**\n * The default last value aggregation.\n */\nexport class LastValueAggregation extends Aggregation {\n  private static DEFAULT_INSTANCE = new LastValueAggregator();\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return LastValueAggregation.DEFAULT_INSTANCE;\n  }\n}\n\n/**\n * The default histogram aggregation.\n */\nexport class HistogramAggregation extends Aggregation {\n  private static DEFAULT_INSTANCE = new HistogramAggregator(\n    [0, 5, 10, 25, 50, 75, 100, 250, 500, 750, 1000, 2500, 5000, 7500, 10000],\n    true\n  );\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return HistogramAggregation.DEFAULT_INSTANCE;\n  }\n}\n\n/**\n * The explicit bucket histogram aggregation.\n */\nexport class ExplicitBucketHistogramAggregation extends Aggregation {\n  private _boundaries: number[];\n\n  /**\n   * @param boundaries the bucket boundaries of the histogram aggregation\n   * @param _recordMinMax If set to true, min and max will be recorded. Otherwise, min and max will not be recorded.\n   */\n  constructor(\n    boundaries: number[],\n    private readonly _recordMinMax = true\n  ) {\n    super();\n    if (boundaries == null) {\n      throw new Error(\n        'ExplicitBucketHistogramAggregation should be created with explicit boundaries, if a single bucket histogram is required, please pass an empty array'\n      );\n    }\n    // Copy the boundaries array for modification.\n    boundaries = boundaries.concat();\n    // We need to an ordered set to be able to correctly compute count for each\n    // boundary since we'll iterate on each in order.\n    boundaries = boundaries.sort((a, b) => a - b);\n    // Remove all Infinity from the boundaries.\n    const minusInfinityIndex = boundaries.lastIndexOf(-Infinity);\n    let infinityIndex: number | undefined = boundaries.indexOf(Infinity);\n    if (infinityIndex === -1) {\n      infinityIndex = undefined;\n    }\n    this._boundaries = boundaries.slice(minusInfinityIndex + 1, infinityIndex);\n  }\n\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return new HistogramAggregator(this._boundaries, this._recordMinMax);\n  }\n}\n\nexport class ExponentialHistogramAggregation extends Aggregation {\n  constructor(\n    private readonly _maxSize: number = 160,\n    private readonly _recordMinMax = true\n  ) {\n    super();\n  }\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return new ExponentialHistogramAggregator(\n      this._maxSize,\n      this._recordMinMax\n    );\n  }\n}\n\n/**\n * The default aggregation.\n */\nexport class DefaultAggregation extends Aggregation {\n  private _resolve(instrument: InstrumentDescriptor): Aggregation {\n    // cast to unknown to disable complaints on the (unreachable) fallback.\n    switch (instrument.type as unknown) {\n      case InstrumentType.COUNTER:\n      case InstrumentType.UP_DOWN_COUNTER:\n      case InstrumentType.OBSERVABLE_COUNTER:\n      case InstrumentType.OBSERVABLE_UP_DOWN_COUNTER: {\n        return SUM_AGGREGATION;\n      }\n      case InstrumentType.GAUGE:\n      case InstrumentType.OBSERVABLE_GAUGE: {\n        return LAST_VALUE_AGGREGATION;\n      }\n      case InstrumentType.HISTOGRAM: {\n        if (instrument.advice.explicitBucketBoundaries) {\n          return new ExplicitBucketHistogramAggregation(\n            instrument.advice.explicitBucketBoundaries\n          );\n        }\n        return HISTOGRAM_AGGREGATION;\n      }\n    }\n    api.diag.warn(`Unable to recognize instrument type: ${instrument.type}`);\n    return DROP_AGGREGATION;\n  }\n\n  createAggregator(\n    instrument: InstrumentDescriptor\n  ): Aggregator<Maybe<Accumulation>> {\n    return this._resolve(instrument).createAggregator(instrument);\n  }\n}\n\nconst DROP_AGGREGATION = new DropAggregation();\nconst SUM_AGGREGATION = new SumAggregation();\nconst LAST_VALUE_AGGREGATION = new LastValueAggregation();\nconst HISTOGRAM_AGGREGATION = new HistogramAggregation();\nconst EXPONENTIAL_HISTOGRAM_AGGREGATION = new ExponentialHistogramAggregation();\nconst DEFAULT_AGGREGATION = new DefaultAggregation();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { DropAggregator } from './Drop';\nexport { HistogramAccumulation, HistogramAggregator } from './Histogram';\nexport {\n  ExponentialHistogramAccumulation,\n  ExponentialHistogramAggregator,\n} from './ExponentialHistogram';\nexport { LastValueAccumulation, LastValueAggregator } from './LastValue';\nexport { SumAccumulation, SumAggregator } from './Sum';\nexport { Aggregator } from './types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { MetricData, MetricDescriptor } from '../export/MetricData';\nimport { Maybe } from '../utils';\nimport { AggregatorKind, Aggregator, AccumulationRecord } from './types';\n\n/** Basic aggregator for None which keeps no recorded value. */\nexport class DropAggregator implements Aggregator<undefined> {\n  kind: AggregatorKind.DROP = AggregatorKind.DROP;\n\n  createAccumulation() {\n    return undefined;\n  }\n\n  merge(_previous: undefined, _delta: undefined) {\n    return undefined;\n  }\n\n  diff(_previous: undefined, _current: undefined) {\n    return undefined;\n  }\n\n  toMetricData(\n    _descriptor: MetricDescriptor,\n    _aggregationTemporality: AggregationTemporality,\n    _accumulationByAttributes: AccumulationRecord<undefined>[],\n    _endTime: HrTime\n  ): Maybe<MetricData> {\n    return undefined;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime, Attributes } from '@opentelemetry/api';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { MetricData, MetricDescriptor } from '../export/MetricData';\nimport { Maybe } from '../utils';\n\n/** The kind of aggregator. */\nexport enum AggregatorKind {\n  DROP,\n  SUM,\n  LAST_VALUE,\n  HISTOGRAM,\n  EXPONENTIAL_HISTOGRAM,\n}\n\n/** DataPoint value type for SumAggregation. */\nexport type Sum = number;\n\n/** DataPoint value type for LastValueAggregation. */\nexport type LastValue = number;\n\n/** DataPoint value type for HistogramAggregation. */\nexport interface Histogram {\n  /**\n   * Buckets are implemented using two different arrays:\n   *  - boundaries: contains every finite bucket boundary, which are inclusive upper bounds\n   *  - counts: contains event counts for each bucket\n   *\n   * Note that we'll always have n+1 buckets, where n is the number of boundaries.\n   * This is because we need to count events that are higher than the upper boundary.\n   *\n   * Example: if we measure the values: [5, 30, 5, 40, 5, 15, 15, 15, 25]\n   *  with the boundaries [ 10, 20, 30 ], we will have the following state:\n   *\n   * buckets: {\n   *\tboundaries: [10, 20, 30],\n   *\tcounts: [3, 3, 2, 1],\n   * }\n   */\n  buckets: {\n    boundaries: number[];\n    counts: number[];\n  };\n  sum?: number;\n  count: number;\n  min?: number;\n  max?: number;\n}\n\n/** DataPoint value type for ExponentialHistogramAggregation. */\nexport interface ExponentialHistogram {\n  count: number;\n  sum?: number;\n  scale: number;\n  zeroCount: number;\n  positive: {\n    offset: number;\n    bucketCounts: number[];\n  };\n  negative: {\n    offset: number;\n    bucketCounts: number[];\n  };\n  min?: number;\n  max?: number;\n}\n\n/**\n * An Aggregator accumulation state.\n */\nexport interface Accumulation {\n  setStartTime(startTime: HrTime): void;\n  record(value: number): void;\n}\n\nexport type AccumulationRecord<T> = [Attributes, T];\n\n/**\n * Base interface for aggregators. Aggregators are responsible for holding\n * aggregated values and taking a snapshot of these values upon export.\n */\nexport interface Aggregator<T> {\n  /** The kind of the aggregator. */\n  kind: AggregatorKind;\n\n  /**\n   * Create a clean state of accumulation.\n   */\n  createAccumulation(startTime: HrTime): T;\n\n  /**\n   * Returns the result of the merge of the given accumulations.\n   *\n   * This should always assume that the accumulations do not overlap and merge together for a new\n   * cumulative report.\n   *\n   * @param previous the previously captured accumulation\n   * @param delta the newly captured (delta) accumulation\n   * @returns the result of the merge of the given accumulations\n   */\n  merge(previous: T, delta: T): T;\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   *\n   * @param previous the previously captured accumulation\n   * @param current the newly captured (cumulative) accumulation\n   * @returns The resulting delta accumulation\n   */\n  diff(previous: T, current: T): T;\n\n  /**\n   * Returns the {@link MetricData} that this {@link Aggregator} will produce.\n   *\n   * @param descriptor the metric descriptor.\n   * @param aggregationTemporality the temporality of the resulting {@link MetricData}\n   * @param accumulationByAttributes the array of attributes and accumulation pairs.\n   * @param endTime the end time of the metric data.\n   * @return the {@link MetricData} that this {@link Aggregator} will produce.\n   */\n  toMetricData(\n    descriptor: MetricDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<T>[],\n    endTime: HrTime\n  ): Maybe<MetricData>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Accumulation,\n  AccumulationRecord,\n  Aggregator,\n  AggregatorKind,\n} from './types';\nimport {\n  DataPointType,\n  HistogramMetricData,\n  MetricDescriptor,\n} from '../export/MetricData';\nimport { HrTime } from '@opentelemetry/api';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { binarySearchUB, Maybe } from '../utils';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\n\n/**\n * Internal value type for HistogramAggregation.\n * Differs from the exported type as undefined sum/min/max complicate arithmetic\n * performed by this aggregation, but are required to be undefined in the exported types.\n */\ninterface InternalHistogram {\n  buckets: {\n    boundaries: number[];\n    counts: number[];\n  };\n  sum: number;\n  count: number;\n  hasMinMax: boolean;\n  min: number;\n  max: number;\n}\n\nfunction createNewEmptyCheckpoint(boundaries: number[]): InternalHistogram {\n  const counts = boundaries.map(() => 0);\n  counts.push(0);\n  return {\n    buckets: {\n      boundaries,\n      counts,\n    },\n    sum: 0,\n    count: 0,\n    hasMinMax: false,\n    min: Infinity,\n    max: -Infinity,\n  };\n}\n\nexport class HistogramAccumulation implements Accumulation {\n  constructor(\n    public startTime: HrTime,\n    private readonly _boundaries: number[],\n    private _recordMinMax = true,\n    private _current: InternalHistogram = createNewEmptyCheckpoint(_boundaries)\n  ) {}\n\n  record(value: number): void {\n    // NaN does not fall into any bucket, is not zero and should not be counted,\n    // NaN is never greater than max nor less than min, therefore return as there's nothing for us to do.\n    if (Number.isNaN(value)) {\n      return;\n    }\n\n    this._current.count += 1;\n    this._current.sum += value;\n\n    if (this._recordMinMax) {\n      this._current.min = Math.min(value, this._current.min);\n      this._current.max = Math.max(value, this._current.max);\n      this._current.hasMinMax = true;\n    }\n\n    const idx = binarySearchUB(this._boundaries, value);\n    this._current.buckets.counts[idx] += 1;\n  }\n\n  setStartTime(startTime: HrTime): void {\n    this.startTime = startTime;\n  }\n\n  toPointValue(): InternalHistogram {\n    return this._current;\n  }\n}\n\n/**\n * Basic aggregator which observes events and counts them in pre-defined buckets\n * and provides the total sum and count of all observations.\n */\nexport class HistogramAggregator implements Aggregator<HistogramAccumulation> {\n  public kind: AggregatorKind.HISTOGRAM = AggregatorKind.HISTOGRAM;\n\n  /**\n   * @param _boundaries sorted upper bounds of recorded values.\n   * @param _recordMinMax If set to true, min and max will be recorded. Otherwise, min and max will not be recorded.\n   */\n  constructor(\n    private readonly _boundaries: number[],\n    private readonly _recordMinMax: boolean\n  ) {}\n\n  createAccumulation(startTime: HrTime) {\n    return new HistogramAccumulation(\n      startTime,\n      this._boundaries,\n      this._recordMinMax\n    );\n  }\n\n  /**\n   * Return the result of the merge of two histogram accumulations. As long as one Aggregator\n   * instance produces all Accumulations with constant boundaries we don't need to worry about\n   * merging accumulations with different boundaries.\n   */\n  merge(\n    previous: HistogramAccumulation,\n    delta: HistogramAccumulation\n  ): HistogramAccumulation {\n    const previousValue = previous.toPointValue();\n    const deltaValue = delta.toPointValue();\n\n    const previousCounts = previousValue.buckets.counts;\n    const deltaCounts = deltaValue.buckets.counts;\n\n    const mergedCounts = new Array(previousCounts.length);\n    for (let idx = 0; idx < previousCounts.length; idx++) {\n      mergedCounts[idx] = previousCounts[idx] + deltaCounts[idx];\n    }\n\n    let min = Infinity;\n    let max = -Infinity;\n\n    if (this._recordMinMax) {\n      if (previousValue.hasMinMax && deltaValue.hasMinMax) {\n        min = Math.min(previousValue.min, deltaValue.min);\n        max = Math.max(previousValue.max, deltaValue.max);\n      } else if (previousValue.hasMinMax) {\n        min = previousValue.min;\n        max = previousValue.max;\n      } else if (deltaValue.hasMinMax) {\n        min = deltaValue.min;\n        max = deltaValue.max;\n      }\n    }\n\n    return new HistogramAccumulation(\n      previous.startTime,\n      previousValue.buckets.boundaries,\n      this._recordMinMax,\n      {\n        buckets: {\n          boundaries: previousValue.buckets.boundaries,\n          counts: mergedCounts,\n        },\n        count: previousValue.count + deltaValue.count,\n        sum: previousValue.sum + deltaValue.sum,\n        hasMinMax:\n          this._recordMinMax &&\n          (previousValue.hasMinMax || deltaValue.hasMinMax),\n        min: min,\n        max: max,\n      }\n    );\n  }\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   */\n  diff(\n    previous: HistogramAccumulation,\n    current: HistogramAccumulation\n  ): HistogramAccumulation {\n    const previousValue = previous.toPointValue();\n    const currentValue = current.toPointValue();\n\n    const previousCounts = previousValue.buckets.counts;\n    const currentCounts = currentValue.buckets.counts;\n\n    const diffedCounts = new Array(previousCounts.length);\n    for (let idx = 0; idx < previousCounts.length; idx++) {\n      diffedCounts[idx] = currentCounts[idx] - previousCounts[idx];\n    }\n\n    return new HistogramAccumulation(\n      current.startTime,\n      previousValue.buckets.boundaries,\n      this._recordMinMax,\n      {\n        buckets: {\n          boundaries: previousValue.buckets.boundaries,\n          counts: diffedCounts,\n        },\n        count: currentValue.count - previousValue.count,\n        sum: currentValue.sum - previousValue.sum,\n        hasMinMax: false,\n        min: Infinity,\n        max: -Infinity,\n      }\n    );\n  }\n\n  toMetricData(\n    descriptor: MetricDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<HistogramAccumulation>[],\n    endTime: HrTime\n  ): Maybe<HistogramMetricData> {\n    return {\n      descriptor,\n      aggregationTemporality,\n      dataPointType: DataPointType.HISTOGRAM,\n      dataPoints: accumulationByAttributes.map(([attributes, accumulation]) => {\n        const pointValue = accumulation.toPointValue();\n\n        // determine if instrument allows negative values.\n        const allowsNegativeValues =\n          descriptor.type === InstrumentType.GAUGE ||\n          descriptor.type === InstrumentType.UP_DOWN_COUNTER ||\n          descriptor.type === InstrumentType.OBSERVABLE_GAUGE ||\n          descriptor.type === InstrumentType.OBSERVABLE_UP_DOWN_COUNTER;\n\n        return {\n          attributes,\n          startTime: accumulation.startTime,\n          endTime,\n          value: {\n            min: pointValue.hasMinMax ? pointValue.min : undefined,\n            max: pointValue.hasMinMax ? pointValue.max : undefined,\n            sum: !allowsNegativeValues ? pointValue.sum : undefined,\n            buckets: pointValue.buckets,\n            count: pointValue.count,\n          },\n        };\n      }),\n    };\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricOptions, ValueType, diag } from '@opentelemetry/api';\nimport { View } from './view/View';\nimport { equalsCaseInsensitive } from './utils';\n\n/**\n * Supported types of metric instruments.\n */\nexport enum InstrumentType {\n  COUNTER = 'COUNTER',\n  GAUGE = 'GAUGE',\n  HISTOGRAM = 'HISTOGRAM',\n  UP_DOWN_COUNTER = 'UP_DOWN_COUNTER',\n  OBSERVABLE_COUNTER = 'OBSERVABLE_COUNTER',\n  OBSERVABLE_GAUGE = 'OBSERVABLE_GAUGE',\n  OBSERVABLE_UP_DOWN_COUNTER = 'OBSERVABLE_UP_DOWN_COUNTER',\n}\n\n/**\n * An internal interface describing the instrument.\n *\n * This is intentionally distinguished from the public MetricDescriptor (a.k.a. InstrumentDescriptor)\n * which may not contains internal fields like metric advice.\n */\nexport interface InstrumentDescriptor {\n  readonly name: string;\n  readonly description: string;\n  readonly unit: string;\n  readonly type: InstrumentType;\n  readonly valueType: ValueType;\n  /**\n   * @experimental\n   *\n   * This is intentionally not using the API's type as it's only available from @opentelemetry/api 1.7.0 and up.\n   * In SDK 2.0 we'll be able to bump the minimum API version and remove this workaround.\n   */\n  readonly advice: {\n    /**\n     * Hint the explicit bucket boundaries for SDK if the metric has been\n     * aggregated with a HistogramAggregator.\n     */\n    explicitBucketBoundaries?: number[];\n  };\n}\n\nexport function createInstrumentDescriptor(\n  name: string,\n  type: InstrumentType,\n  options?: MetricOptions\n): InstrumentDescriptor {\n  if (!isValidName(name)) {\n    diag.warn(\n      `Invalid metric name: \"${name}\". The metric name should be a ASCII string with a length no greater than 255 characters.`\n    );\n  }\n  return {\n    name,\n    type,\n    description: options?.description ?? '',\n    unit: options?.unit ?? '',\n    valueType: options?.valueType ?? ValueType.DOUBLE,\n    advice: options?.advice ?? {},\n  };\n}\n\nexport function createInstrumentDescriptorWithView(\n  view: View,\n  instrument: InstrumentDescriptor\n): InstrumentDescriptor {\n  return {\n    name: view.name ?? instrument.name,\n    description: view.description ?? instrument.description,\n    type: instrument.type,\n    unit: instrument.unit,\n    valueType: instrument.valueType,\n    advice: instrument.advice,\n  };\n}\n\nexport function isDescriptorCompatibleWith(\n  descriptor: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  // Names are case-insensitive strings.\n  return (\n    equalsCaseInsensitive(descriptor.name, otherDescriptor.name) &&\n    descriptor.unit === otherDescriptor.unit &&\n    descriptor.type === otherDescriptor.type &&\n    descriptor.valueType === otherDescriptor.valueType\n  );\n}\n\n// ASCII string with a length no greater than 255 characters.\n// NB: the first character counted separately from the rest.\nconst NAME_REGEXP = /^[a-z][a-z0-9_.\\-/]{0,254}$/i;\nexport function isValidName(name: string): boolean {\n  return name.match(NAME_REGEXP) != null;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Accumulation,\n  AccumulationRecord,\n  Aggregator,\n  AggregatorKind,\n  ExponentialHistogram,\n} from './types';\nimport {\n  DataPointType,\n  ExponentialHistogramMetricData,\n  MetricDescriptor,\n} from '../export/MetricData';\nimport { diag, HrTime } from '@opentelemetry/api';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { Maybe } from '../utils';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { Buckets } from './exponential-histogram/Buckets';\nimport { getMapping } from './exponential-histogram/mapping/getMapping';\nimport { Mapping } from './exponential-histogram/mapping/types';\nimport { nextGreaterSquare } from './exponential-histogram/util';\n\n/**\n * Internal value type for ExponentialHistogramAggregation.\n * Differs from the exported type as undefined sum/min/max complicate arithmetic\n * performed by this aggregation, but are required to be undefined in the exported types.\n */\ninterface InternalHistogram extends ExponentialHistogram {\n  hasMinMax: boolean;\n  min: number;\n  max: number;\n  sum: number;\n}\n\n// HighLow is a utility class used for computing a common scale for\n// two exponential histogram accumulations\nclass HighLow {\n  static combine(h1: HighLow, h2: HighLow): HighLow {\n    return new HighLow(Math.min(h1.low, h2.low), Math.max(h1.high, h2.high));\n  }\n  constructor(\n    public low: number,\n    public high: number\n  ) {}\n}\n\nconst MAX_SCALE = 20;\nconst DEFAULT_MAX_SIZE = 160;\nconst MIN_MAX_SIZE = 2;\n\nexport class ExponentialHistogramAccumulation implements Accumulation {\n  constructor(\n    public startTime: HrTime = startTime,\n    private _maxSize = DEFAULT_MAX_SIZE,\n    private _recordMinMax = true,\n    private _sum = 0,\n    private _count = 0,\n    private _zeroCount = 0,\n    private _min = Number.POSITIVE_INFINITY,\n    private _max = Number.NEGATIVE_INFINITY,\n    private _positive = new Buckets(),\n    private _negative = new Buckets(),\n    private _mapping: Mapping = getMapping(MAX_SCALE)\n  ) {\n    if (this._maxSize < MIN_MAX_SIZE) {\n      diag.warn(`Exponential Histogram Max Size set to ${this._maxSize}, \\\n                changing to the minimum size of: ${MIN_MAX_SIZE}`);\n      this._maxSize = MIN_MAX_SIZE;\n    }\n  }\n\n  /**\n   * record updates a histogram with a single count\n   * @param {Number} value\n   */\n  record(value: number) {\n    this.updateByIncrement(value, 1);\n  }\n\n  /**\n   * Sets the start time for this accumulation\n   * @param {HrTime} startTime\n   */\n  setStartTime(startTime: HrTime): void {\n    this.startTime = startTime;\n  }\n\n  /**\n   * Returns the datapoint representation of this accumulation\n   * @param {HrTime} startTime\n   */\n  toPointValue(): InternalHistogram {\n    return {\n      hasMinMax: this._recordMinMax,\n      min: this.min,\n      max: this.max,\n      sum: this.sum,\n      positive: {\n        offset: this.positive.offset,\n        bucketCounts: this.positive.counts(),\n      },\n      negative: {\n        offset: this.negative.offset,\n        bucketCounts: this.negative.counts(),\n      },\n      count: this.count,\n      scale: this.scale,\n      zeroCount: this.zeroCount,\n    };\n  }\n\n  /**\n   * @returns {Number} The sum of values recorded by this accumulation\n   */\n  get sum(): number {\n    return this._sum;\n  }\n\n  /**\n   * @returns {Number} The minimum value recorded by this accumulation\n   */\n  get min(): number {\n    return this._min;\n  }\n\n  /**\n   * @returns {Number} The maximum value recorded by this accumulation\n   */\n  get max(): number {\n    return this._max;\n  }\n\n  /**\n   * @returns {Number} The count of values recorded by this accumulation\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * @returns {Number} The number of 0 values recorded by this accumulation\n   */\n  get zeroCount(): number {\n    return this._zeroCount;\n  }\n\n  /**\n   * @returns {Number} The scale used by this accumulation\n   */\n  get scale(): number {\n    if (this._count === this._zeroCount) {\n      // all zeros! scale doesn't matter, use zero\n      return 0;\n    }\n    return this._mapping.scale;\n  }\n\n  /**\n   * positive holds the positive values\n   * @returns {Buckets}\n   */\n  get positive(): Buckets {\n    return this._positive;\n  }\n\n  /**\n   * negative holds the negative values by their absolute value\n   * @returns {Buckets}\n   */\n  get negative(): Buckets {\n    return this._negative;\n  }\n\n  /**\n   * updateByIncr supports updating a histogram with a non-negative\n   * increment.\n   * @param value\n   * @param increment\n   */\n  updateByIncrement(value: number, increment: number) {\n    // NaN does not fall into any bucket, is not zero and should not be counted,\n    // NaN is never greater than max nor less than min, therefore return as there's nothing for us to do.\n    if (Number.isNaN(value)) {\n      return;\n    }\n\n    if (value > this._max) {\n      this._max = value;\n    }\n    if (value < this._min) {\n      this._min = value;\n    }\n\n    this._count += increment;\n\n    if (value === 0) {\n      this._zeroCount += increment;\n      return;\n    }\n\n    this._sum += value * increment;\n\n    if (value > 0) {\n      this._updateBuckets(this._positive, value, increment);\n    } else {\n      this._updateBuckets(this._negative, -value, increment);\n    }\n  }\n\n  /**\n   * merge combines data from previous value into self\n   * @param {ExponentialHistogramAccumulation} previous\n   */\n  merge(previous: ExponentialHistogramAccumulation) {\n    if (this._count === 0) {\n      this._min = previous.min;\n      this._max = previous.max;\n    } else if (previous.count !== 0) {\n      if (previous.min < this.min) {\n        this._min = previous.min;\n      }\n      if (previous.max > this.max) {\n        this._max = previous.max;\n      }\n    }\n\n    this.startTime = previous.startTime;\n    this._sum += previous.sum;\n    this._count += previous.count;\n    this._zeroCount += previous.zeroCount;\n\n    const minScale = this._minScale(previous);\n\n    this._downscale(this.scale - minScale);\n\n    this._mergeBuckets(this.positive, previous, previous.positive, minScale);\n    this._mergeBuckets(this.negative, previous, previous.negative, minScale);\n  }\n\n  /**\n   * diff subtracts other from self\n   * @param {ExponentialHistogramAccumulation} other\n   */\n  diff(other: ExponentialHistogramAccumulation) {\n    this._min = Infinity;\n    this._max = -Infinity;\n    this._sum -= other.sum;\n    this._count -= other.count;\n    this._zeroCount -= other.zeroCount;\n\n    const minScale = this._minScale(other);\n\n    this._downscale(this.scale - minScale);\n\n    this._diffBuckets(this.positive, other, other.positive, minScale);\n    this._diffBuckets(this.negative, other, other.negative, minScale);\n  }\n\n  /**\n   * clone returns a deep copy of self\n   * @returns {ExponentialHistogramAccumulation}\n   */\n  clone(): ExponentialHistogramAccumulation {\n    return new ExponentialHistogramAccumulation(\n      this.startTime,\n      this._maxSize,\n      this._recordMinMax,\n      this._sum,\n      this._count,\n      this._zeroCount,\n      this._min,\n      this._max,\n      this.positive.clone(),\n      this.negative.clone(),\n      this._mapping\n    );\n  }\n\n  /**\n   * _updateBuckets maps the incoming value to a bucket index for the current\n   * scale. If the bucket index is outside of the range of the backing array,\n   * it will rescale the backing array and update the mapping for the new scale.\n   */\n  private _updateBuckets(buckets: Buckets, value: number, increment: number) {\n    let index = this._mapping.mapToIndex(value);\n\n    // rescale the mapping if needed\n    let rescalingNeeded = false;\n    let high = 0;\n    let low = 0;\n\n    if (buckets.length === 0) {\n      buckets.indexStart = index;\n      buckets.indexEnd = buckets.indexStart;\n      buckets.indexBase = buckets.indexStart;\n    } else if (\n      index < buckets.indexStart &&\n      buckets.indexEnd - index >= this._maxSize\n    ) {\n      rescalingNeeded = true;\n      low = index;\n      high = buckets.indexEnd;\n    } else if (\n      index > buckets.indexEnd &&\n      index - buckets.indexStart >= this._maxSize\n    ) {\n      rescalingNeeded = true;\n      low = buckets.indexStart;\n      high = index;\n    }\n\n    // rescale and compute index at new scale\n    if (rescalingNeeded) {\n      const change = this._changeScale(high, low);\n      this._downscale(change);\n      index = this._mapping.mapToIndex(value);\n    }\n\n    this._incrementIndexBy(buckets, index, increment);\n  }\n\n  /**\n   * _incrementIndexBy increments the count of the bucket specified by `index`.\n   * If the index is outside of the range [buckets.indexStart, buckets.indexEnd]\n   * the boundaries of the backing array will be adjusted and more buckets will\n   * be added if needed.\n   */\n  private _incrementIndexBy(\n    buckets: Buckets,\n    index: number,\n    increment: number\n  ) {\n    if (increment === 0) {\n      // nothing to do for a zero increment, can happen during a merge operation\n      return;\n    }\n\n    if (buckets.length === 0) {\n      buckets.indexStart = buckets.indexEnd = buckets.indexBase = index;\n    }\n\n    if (index < buckets.indexStart) {\n      const span = buckets.indexEnd - index;\n      if (span >= buckets.backing.length) {\n        this._grow(buckets, span + 1);\n      }\n      buckets.indexStart = index;\n    } else if (index > buckets.indexEnd) {\n      const span = index - buckets.indexStart;\n      if (span >= buckets.backing.length) {\n        this._grow(buckets, span + 1);\n      }\n      buckets.indexEnd = index;\n    }\n\n    let bucketIndex = index - buckets.indexBase;\n    if (bucketIndex < 0) {\n      bucketIndex += buckets.backing.length;\n    }\n    buckets.incrementBucket(bucketIndex, increment);\n  }\n\n  /**\n   * grow resizes the backing array by doubling in size up to maxSize.\n   * This extends the array with a bunch of zeros and copies the\n   * existing counts to the same position.\n   */\n  private _grow(buckets: Buckets, needed: number) {\n    const size = buckets.backing.length;\n    const bias = buckets.indexBase - buckets.indexStart;\n    const oldPositiveLimit = size - bias;\n    let newSize = nextGreaterSquare(needed);\n    if (newSize > this._maxSize) {\n      newSize = this._maxSize;\n    }\n    const newPositiveLimit = newSize - bias;\n    buckets.backing.growTo(newSize, oldPositiveLimit, newPositiveLimit);\n  }\n\n  /**\n   * _changeScale computes how much downscaling is needed by shifting the\n   * high and low values until they are separated by no more than size.\n   */\n  private _changeScale(high: number, low: number): number {\n    let change = 0;\n    while (high - low >= this._maxSize) {\n      high >>= 1;\n      low >>= 1;\n      change++;\n    }\n    return change;\n  }\n\n  /**\n   * _downscale subtracts `change` from the current mapping scale.\n   */\n  private _downscale(change: number) {\n    if (change === 0) {\n      return;\n    }\n    if (change < 0) {\n      // Note: this should be impossible. If we get here it's because\n      // there is a bug in the implementation.\n      throw new Error(`impossible change of scale: ${this.scale}`);\n    }\n    const newScale = this._mapping.scale - change;\n\n    this._positive.downscale(change);\n    this._negative.downscale(change);\n\n    this._mapping = getMapping(newScale);\n  }\n\n  /**\n   * _minScale is used by diff and merge to compute an ideal combined scale\n   */\n  private _minScale(other: ExponentialHistogramAccumulation): number {\n    const minScale = Math.min(this.scale, other.scale);\n\n    const highLowPos = HighLow.combine(\n      this._highLowAtScale(this.positive, this.scale, minScale),\n      this._highLowAtScale(other.positive, other.scale, minScale)\n    );\n\n    const highLowNeg = HighLow.combine(\n      this._highLowAtScale(this.negative, this.scale, minScale),\n      this._highLowAtScale(other.negative, other.scale, minScale)\n    );\n\n    return Math.min(\n      minScale - this._changeScale(highLowPos.high, highLowPos.low),\n      minScale - this._changeScale(highLowNeg.high, highLowNeg.low)\n    );\n  }\n\n  /**\n   * _highLowAtScale is used by diff and merge to compute an ideal combined scale.\n   */\n  private _highLowAtScale(\n    buckets: Buckets,\n    currentScale: number,\n    newScale: number\n  ): HighLow {\n    if (buckets.length === 0) {\n      return new HighLow(0, -1);\n    }\n    const shift = currentScale - newScale;\n    return new HighLow(buckets.indexStart >> shift, buckets.indexEnd >> shift);\n  }\n\n  /**\n   * _mergeBuckets translates index values from another histogram and\n   * adds the values into the corresponding buckets of this histogram.\n   */\n  private _mergeBuckets(\n    ours: Buckets,\n    other: ExponentialHistogramAccumulation,\n    theirs: Buckets,\n    scale: number\n  ) {\n    const theirOffset = theirs.offset;\n    const theirChange = other.scale - scale;\n\n    for (let i = 0; i < theirs.length; i++) {\n      this._incrementIndexBy(\n        ours,\n        (theirOffset + i) >> theirChange,\n        theirs.at(i)\n      );\n    }\n  }\n\n  /**\n   * _diffBuckets translates index values from another histogram and\n   * subtracts the values in the corresponding buckets of this histogram.\n   */\n  private _diffBuckets(\n    ours: Buckets,\n    other: ExponentialHistogramAccumulation,\n    theirs: Buckets,\n    scale: number\n  ) {\n    const theirOffset = theirs.offset;\n    const theirChange = other.scale - scale;\n\n    for (let i = 0; i < theirs.length; i++) {\n      const ourIndex = (theirOffset + i) >> theirChange;\n      let bucketIndex = ourIndex - ours.indexBase;\n      if (bucketIndex < 0) {\n        bucketIndex += ours.backing.length;\n      }\n      ours.decrementBucket(bucketIndex, theirs.at(i));\n    }\n\n    ours.trim();\n  }\n}\n\n/**\n * Aggregator for ExponentialHistogramAccumulations\n */\nexport class ExponentialHistogramAggregator\n  implements Aggregator<ExponentialHistogramAccumulation>\n{\n  public kind: AggregatorKind.EXPONENTIAL_HISTOGRAM =\n    AggregatorKind.EXPONENTIAL_HISTOGRAM;\n\n  /**\n   * @param _maxSize Maximum number of buckets for each of the positive\n   *    and negative ranges, exclusive of the zero-bucket.\n   * @param _recordMinMax If set to true, min and max will be recorded.\n   *    Otherwise, min and max will not be recorded.\n   */\n  constructor(\n    readonly _maxSize: number,\n    private readonly _recordMinMax: boolean\n  ) {}\n\n  createAccumulation(startTime: HrTime) {\n    return new ExponentialHistogramAccumulation(\n      startTime,\n      this._maxSize,\n      this._recordMinMax\n    );\n  }\n\n  /**\n   * Return the result of the merge of two exponential histogram accumulations.\n   */\n  merge(\n    previous: ExponentialHistogramAccumulation,\n    delta: ExponentialHistogramAccumulation\n  ): ExponentialHistogramAccumulation {\n    const result = delta.clone();\n    result.merge(previous);\n\n    return result;\n  }\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   */\n  diff(\n    previous: ExponentialHistogramAccumulation,\n    current: ExponentialHistogramAccumulation\n  ): ExponentialHistogramAccumulation {\n    const result = current.clone();\n    result.diff(previous);\n\n    return result;\n  }\n\n  toMetricData(\n    descriptor: MetricDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<ExponentialHistogramAccumulation>[],\n    endTime: HrTime\n  ): Maybe<ExponentialHistogramMetricData> {\n    return {\n      descriptor,\n      aggregationTemporality,\n      dataPointType: DataPointType.EXPONENTIAL_HISTOGRAM,\n      dataPoints: accumulationByAttributes.map(([attributes, accumulation]) => {\n        const pointValue = accumulation.toPointValue();\n\n        // determine if instrument allows negative values.\n        const allowsNegativeValues =\n          descriptor.type === InstrumentType.GAUGE ||\n          descriptor.type === InstrumentType.UP_DOWN_COUNTER ||\n          descriptor.type === InstrumentType.OBSERVABLE_GAUGE ||\n          descriptor.type === InstrumentType.OBSERVABLE_UP_DOWN_COUNTER;\n\n        return {\n          attributes,\n          startTime: accumulation.startTime,\n          endTime,\n          value: {\n            min: pointValue.hasMinMax ? pointValue.min : undefined,\n            max: pointValue.hasMinMax ? pointValue.max : undefined,\n            sum: !allowsNegativeValues ? pointValue.sum : undefined,\n            positive: {\n              offset: pointValue.positive.offset,\n              bucketCounts: pointValue.positive.bucketCounts,\n            },\n            negative: {\n              offset: pointValue.negative.offset,\n              bucketCounts: pointValue.negative.bucketCounts,\n            },\n            count: pointValue.count,\n            scale: pointValue.scale,\n            zeroCount: pointValue.zeroCount,\n          },\n        };\n      }),\n    };\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class Buckets {\n  /**\n   * The term index refers to the number of the exponential histogram bucket\n   * used to determine its boundaries. The lower boundary of a bucket is\n   * determined by base ** index and the upper boundary of a bucket is\n   * determined by base ** (index + 1). index values are signed to account\n   * for values less than or equal to 1.\n   *\n   * indexBase is the index of the 0th position in the\n   * backing array, i.e., backing[0] is the count\n   * in the bucket with index `indexBase`.\n   *\n   * indexStart is the smallest index value represented\n   * in the backing array.\n   *\n   * indexEnd is the largest index value represented in\n   * the backing array.\n   */\n  constructor(\n    public backing = new BucketsBacking(),\n    public indexBase = 0,\n    public indexStart = 0,\n    public indexEnd = 0\n  ) {}\n\n  /**\n   * Offset is the bucket index of the smallest entry in the counts array\n   * @returns {number}\n   */\n  get offset(): number {\n    return this.indexStart;\n  }\n\n  /**\n   * Buckets is a view into the backing array.\n   * @returns {number}\n   */\n  get length(): number {\n    if (this.backing.length === 0) {\n      return 0;\n    }\n\n    if (this.indexEnd === this.indexStart && this.at(0) === 0) {\n      return 0;\n    }\n\n    return this.indexEnd - this.indexStart + 1;\n  }\n\n  /**\n   * An array of counts, where count[i] carries the count\n   * of the bucket at index (offset+i).  count[i] is the count of\n   * values greater than base^(offset+i) and less than or equal to\n   * base^(offset+i+1).\n   * @returns {number} The logical counts based on the backing array\n   */\n  counts(): number[] {\n    return Array.from({ length: this.length }, (_, i) => this.at(i));\n  }\n\n  /**\n   * At returns the count of the bucket at a position in the logical\n   * array of counts.\n   * @param position\n   * @returns {number}\n   */\n  at(position: number): number {\n    const bias = this.indexBase - this.indexStart;\n    if (position < bias) {\n      position += this.backing.length;\n    }\n\n    position -= bias;\n    return this.backing.countAt(position);\n  }\n\n  /**\n   * incrementBucket increments the backing array index by `increment`\n   * @param bucketIndex\n   * @param increment\n   */\n  incrementBucket(bucketIndex: number, increment: number) {\n    this.backing.increment(bucketIndex, increment);\n  }\n\n  /**\n   * decrementBucket decrements the backing array index by `decrement`\n   * if decrement is greater than the current value, it's set to 0.\n   * @param bucketIndex\n   * @param decrement\n   */\n  decrementBucket(bucketIndex: number, decrement: number) {\n    this.backing.decrement(bucketIndex, decrement);\n  }\n\n  /**\n   * trim removes leading and / or trailing zero buckets (which can occur\n   * after diffing two histos) and rotates the backing array so that the\n   * smallest non-zero index is in the 0th position of the backing array\n   */\n  trim() {\n    for (let i = 0; i < this.length; i++) {\n      if (this.at(i) !== 0) {\n        this.indexStart += i;\n        break;\n      } else if (i === this.length - 1) {\n        //the entire array is zeroed out\n        this.indexStart = this.indexEnd = this.indexBase = 0;\n        return;\n      }\n    }\n\n    for (let i = this.length - 1; i >= 0; i--) {\n      if (this.at(i) !== 0) {\n        this.indexEnd -= this.length - i - 1;\n        break;\n      }\n    }\n\n    this._rotate();\n  }\n\n  /**\n   * downscale first rotates, then collapses 2**`by`-to-1 buckets.\n   * @param by\n   */\n  downscale(by: number) {\n    this._rotate();\n\n    const size = 1 + this.indexEnd - this.indexStart;\n    const each = 1 << by;\n    let inpos = 0;\n    let outpos = 0;\n\n    for (let pos = this.indexStart; pos <= this.indexEnd; ) {\n      let mod = pos % each;\n      if (mod < 0) {\n        mod += each;\n      }\n      for (let i = mod; i < each && inpos < size; i++) {\n        this._relocateBucket(outpos, inpos);\n        inpos++;\n        pos++;\n      }\n      outpos++;\n    }\n\n    this.indexStart >>= by;\n    this.indexEnd >>= by;\n    this.indexBase = this.indexStart;\n  }\n\n  /**\n   * Clone returns a deep copy of Buckets\n   * @returns {Buckets}\n   */\n  clone(): Buckets {\n    return new Buckets(\n      this.backing.clone(),\n      this.indexBase,\n      this.indexStart,\n      this.indexEnd\n    );\n  }\n\n  /**\n   * _rotate shifts the backing array contents so that indexStart ==\n   * indexBase to simplify the downscale logic.\n   */\n  private _rotate() {\n    const bias = this.indexBase - this.indexStart;\n\n    if (bias === 0) {\n      return;\n    } else if (bias > 0) {\n      this.backing.reverse(0, this.backing.length);\n      this.backing.reverse(0, bias);\n      this.backing.reverse(bias, this.backing.length);\n    } else {\n      // negative bias, this can happen when diffing two histograms\n      this.backing.reverse(0, this.backing.length);\n      this.backing.reverse(0, this.backing.length + bias);\n    }\n    this.indexBase = this.indexStart;\n  }\n\n  /**\n   * _relocateBucket adds the count in counts[src] to counts[dest] and\n   * resets count[src] to zero.\n   */\n  private _relocateBucket(dest: number, src: number) {\n    if (dest === src) {\n      return;\n    }\n    this.incrementBucket(dest, this.backing.emptyBucket(src));\n  }\n}\n\n/**\n * BucketsBacking holds the raw buckets and some utility methods to\n * manage them.\n */\nclass BucketsBacking {\n  constructor(private _counts = [0]) {}\n\n  /**\n   * length returns the physical size of the backing array, which\n   * is >= buckets.length()\n   */\n  get length(): number {\n    return this._counts.length;\n  }\n\n  /**\n   * countAt returns the count in a specific bucket\n   */\n  countAt(pos: number): number {\n    return this._counts[pos];\n  }\n\n  /**\n   * growTo grows a backing array and copies old entries\n   * into their correct new positions.\n   */\n  growTo(newSize: number, oldPositiveLimit: number, newPositiveLimit: number) {\n    const tmp = new Array<number>(newSize).fill(0);\n    tmp.splice(\n      newPositiveLimit,\n      this._counts.length - oldPositiveLimit,\n      ...this._counts.slice(oldPositiveLimit)\n    );\n    tmp.splice(0, oldPositiveLimit, ...this._counts.slice(0, oldPositiveLimit));\n    this._counts = tmp;\n  }\n\n  /**\n   * reverse the items in the backing array in the range [from, limit).\n   */\n  reverse(from: number, limit: number) {\n    const num = Math.floor((from + limit) / 2) - from;\n    for (let i = 0; i < num; i++) {\n      const tmp = this._counts[from + i];\n      this._counts[from + i] = this._counts[limit - i - 1];\n      this._counts[limit - i - 1] = tmp;\n    }\n  }\n\n  /**\n   * emptyBucket empties the count from a bucket, for\n   * moving into another.\n   */\n  emptyBucket(src: number): number {\n    const tmp = this._counts[src];\n    this._counts[src] = 0;\n    return tmp;\n  }\n\n  /**\n   * increments a bucket by `increment`\n   */\n  increment(bucketIndex: number, increment: number) {\n    this._counts[bucketIndex] += increment;\n  }\n\n  /**\n   * decrements a bucket by `decrement`\n   */\n  decrement(bucketIndex: number, decrement: number) {\n    if (this._counts[bucketIndex] >= decrement) {\n      this._counts[bucketIndex] -= decrement;\n    } else {\n      // this should not happen, but we're being defensive against\n      // negative counts.\n      this._counts[bucketIndex] = 0;\n    }\n  }\n\n  /**\n   * clone returns a deep copy of BucketsBacking\n   */\n  clone(): BucketsBacking {\n    return new BucketsBacking([...this._counts]);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExponentMapping } from './ExponentMapping';\nimport { LogarithmMapping } from './LogarithmMapping';\nimport { MappingError, Mapping } from './types';\n\nconst MIN_SCALE = -10;\nconst MAX_SCALE = 20;\nconst PREBUILT_MAPPINGS = Array.from({ length: 31 }, (_, i) => {\n  if (i > 10) {\n    return new LogarithmMapping(i - 10);\n  }\n  return new ExponentMapping(i - 10);\n});\n\n/**\n * getMapping returns an appropriate mapping for the given scale. For scales -10\n * to 0 the underlying type will be ExponentMapping. For scales 1 to 20 the\n * underlying type will be LogarithmMapping.\n * @param scale a number in the range [-10, 20]\n * @returns {Mapping}\n */\nexport function getMapping(scale: number): Mapping {\n  if (scale > MAX_SCALE || scale < MIN_SCALE) {\n    throw new MappingError(\n      `expected scale >= ${MIN_SCALE} && <= ${MAX_SCALE}, got: ${scale}`\n    );\n  }\n  // mappings are offset by 10. scale -10 is at position 0 and scale 20 is at 30\n  return PREBUILT_MAPPINGS[scale + 10];\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as ieee754 from './ieee754';\nimport * as util from '../util';\nimport { Mapping, MappingError } from './types';\n\n/**\n * ExponentMapping implements exponential mapping functions for\n * scales <=0. For scales > 0 LogarithmMapping should be used.\n */\nexport class ExponentMapping implements Mapping {\n  private readonly _shift: number;\n\n  constructor(scale: number) {\n    this._shift = -scale;\n  }\n\n  /**\n   * Maps positive floating point values to indexes corresponding to scale\n   * @param value\n   * @returns {number} index for provided value at the current scale\n   */\n  mapToIndex(value: number): number {\n    if (value < ieee754.MIN_VALUE) {\n      return this._minNormalLowerBoundaryIndex();\n    }\n\n    const exp = ieee754.getNormalBase2(value);\n\n    // In case the value is an exact power of two, compute a\n    // correction of -1. Note, we are using a custom _rightShift\n    // to accommodate a 52-bit argument, which the native bitwise\n    // operators do not support\n    const correction = this._rightShift(\n      ieee754.getSignificand(value) - 1,\n      ieee754.SIGNIFICAND_WIDTH\n    );\n\n    return (exp + correction) >> this._shift;\n  }\n\n  /**\n   * Returns the lower bucket boundary for the given index for scale\n   *\n   * @param index\n   * @returns {number}\n   */\n  lowerBoundary(index: number): number {\n    const minIndex = this._minNormalLowerBoundaryIndex();\n    if (index < minIndex) {\n      throw new MappingError(\n        `underflow: ${index} is < minimum lower boundary: ${minIndex}`\n      );\n    }\n    const maxIndex = this._maxNormalLowerBoundaryIndex();\n    if (index > maxIndex) {\n      throw new MappingError(\n        `overflow: ${index} is > maximum lower boundary: ${maxIndex}`\n      );\n    }\n\n    return util.ldexp(1, index << this._shift);\n  }\n\n  /**\n   * The scale used by this mapping\n   * @returns {number}\n   */\n  get scale(): number {\n    if (this._shift === 0) {\n      return 0;\n    }\n    return -this._shift;\n  }\n\n  private _minNormalLowerBoundaryIndex(): number {\n    let index = ieee754.MIN_NORMAL_EXPONENT >> this._shift;\n    if (this._shift < 2) {\n      index--;\n    }\n\n    return index;\n  }\n\n  private _maxNormalLowerBoundaryIndex(): number {\n    return ieee754.MAX_NORMAL_EXPONENT >> this._shift;\n  }\n\n  private _rightShift(value: number, shift: number): number {\n    return Math.floor(value * Math.pow(2, -shift));\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The functions and constants in this file allow us to interact\n * with the internal representation of an IEEE 64-bit floating point\n * number. We need to work with all 64-bits, thus, care needs to be\n * taken when working with Javascript's bitwise operators (<<, >>, &,\n * |, etc) as they truncate operands to 32-bits. In order to work around\n * this we work with the 64-bits as two 32-bit halves, perform bitwise\n * operations on them independently, and combine the results (if needed).\n */\n\nexport const SIGNIFICAND_WIDTH = 52;\n\n/**\n * EXPONENT_MASK is set to 1 for the hi 32-bits of an IEEE 754\n * floating point exponent: 0x7ff00000.\n */\nconst EXPONENT_MASK = 0x7ff00000;\n\n/**\n * SIGNIFICAND_MASK is the mask for the significand portion of the hi 32-bits\n * of an IEEE 754 double-precision floating-point value: 0xfffff\n */\nconst SIGNIFICAND_MASK = 0xfffff;\n\n/**\n * EXPONENT_BIAS is the exponent bias specified for encoding\n * the IEEE 754 double-precision floating point exponent: 1023\n */\nconst EXPONENT_BIAS = 1023;\n\n/**\n * MIN_NORMAL_EXPONENT is the minimum exponent of a normalized\n * floating point: -1022.\n */\nexport const MIN_NORMAL_EXPONENT = -EXPONENT_BIAS + 1;\n\n/**\n * MAX_NORMAL_EXPONENT is the maximum exponent of a normalized\n * floating point: 1023.\n */\nexport const MAX_NORMAL_EXPONENT = EXPONENT_BIAS;\n\n/**\n * MIN_VALUE is the smallest normal number\n */\nexport const MIN_VALUE = Math.pow(2, -1022);\n\n/**\n * getNormalBase2 extracts the normalized base-2 fractional exponent.\n * This returns k for the equation f x 2**k where f is\n * in the range [1, 2).  Note that this function is not called for\n * subnormal numbers.\n * @param {number} value - the value to determine normalized base-2 fractional\n *    exponent for\n * @returns {number} the normalized base-2 exponent\n */\nexport function getNormalBase2(value: number): number {\n  const dv = new DataView(new ArrayBuffer(8));\n  dv.setFloat64(0, value);\n  // access the raw 64-bit float as 32-bit uints\n  const hiBits = dv.getUint32(0);\n  const expBits = (hiBits & EXPONENT_MASK) >> 20;\n  return expBits - EXPONENT_BIAS;\n}\n\n/**\n * GetSignificand returns the 52 bit (unsigned) significand as a signed value.\n * @param {number} value - the floating point number to extract the significand from\n * @returns {number} The 52-bit significand\n */\nexport function getSignificand(value: number): number {\n  const dv = new DataView(new ArrayBuffer(8));\n  dv.setFloat64(0, value);\n  // access the raw 64-bit float as two 32-bit uints\n  const hiBits = dv.getUint32(0);\n  const loBits = dv.getUint32(4);\n  // extract the significand bits from the hi bits and left shift 32 places note:\n  // we can't use the native << operator as it will truncate the result to 32-bits\n  const significandHiBits = (hiBits & SIGNIFICAND_MASK) * Math.pow(2, 32);\n  // combine the hi and lo bits and return\n  return significandHiBits + loBits;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Note: other languages provide this as a built in function. This is\n * a naive, but functionally correct implementation. This is used sparingly,\n * when creating a new mapping in a running application.\n *\n * ldexp returns frac × 2**exp. With the following special cases:\n *   ldexp(±0, exp) = ±0\n *   ldexp(±Inf, exp) = ±Inf\n *   ldexp(NaN, exp) = NaN\n * @param frac\n * @param exp\n * @returns {number}\n */\nexport function ldexp(frac: number, exp: number): number {\n  if (\n    frac === 0 ||\n    frac === Number.POSITIVE_INFINITY ||\n    frac === Number.NEGATIVE_INFINITY ||\n    Number.isNaN(frac)\n  ) {\n    return frac;\n  }\n  return frac * Math.pow(2, exp);\n}\n\n/**\n * Computes the next power of two that is greater than or equal to v.\n * This implementation more efficient than, but functionally equivalent\n * to Math.pow(2, Math.ceil(Math.log(x)/Math.log(2))).\n * @param v\n * @returns {number}\n */\nexport function nextGreaterSquare(v: number): number {\n  // The following expression computes the least power-of-two\n  // that is >= v.  There are a number of tricky ways to\n  // do this, see https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2\n  v--;\n  v |= v >> 1;\n  v |= v >> 2;\n  v |= v >> 4;\n  v |= v >> 8;\n  v |= v >> 16;\n  v++;\n  return v;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class MappingError extends Error {}\n\n/**\n * The mapping interface is used by the exponential histogram to determine\n * where to bucket values. The interface is implemented by ExponentMapping,\n * used for scales [-10, 0] and LogarithmMapping, used for scales [1, 20].\n */\nexport interface Mapping {\n  mapToIndex(value: number): number;\n  lowerBoundary(index: number): number;\n  get scale(): number;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as ieee754 from './ieee754';\nimport * as util from '../util';\nimport { Mapping, MappingError } from './types';\n\n/**\n * LogarithmMapping implements exponential mapping functions for scale > 0.\n * For scales <= 0 the exponent mapping should be used.\n */\nexport class LogarithmMapping implements Mapping {\n  private readonly _scale: number;\n  private readonly _scaleFactor: number;\n  private readonly _inverseFactor: number;\n\n  constructor(scale: number) {\n    this._scale = scale;\n    this._scaleFactor = util.ldexp(Math.LOG2E, scale);\n    this._inverseFactor = util.ldexp(Math.LN2, -scale);\n  }\n\n  /**\n   * Maps positive floating point values to indexes corresponding to scale\n   * @param value\n   * @returns {number} index for provided value at the current scale\n   */\n  mapToIndex(value: number): number {\n    if (value <= ieee754.MIN_VALUE) {\n      return this._minNormalLowerBoundaryIndex() - 1;\n    }\n\n    // exact power of two special case\n    if (ieee754.getSignificand(value) === 0) {\n      const exp = ieee754.getNormalBase2(value);\n      return (exp << this._scale) - 1;\n    }\n\n    // non-power of two cases. use Math.floor to round the scaled logarithm\n    const index = Math.floor(Math.log(value) * this._scaleFactor);\n    const maxIndex = this._maxNormalLowerBoundaryIndex();\n    if (index >= maxIndex) {\n      return maxIndex;\n    }\n\n    return index;\n  }\n\n  /**\n   * Returns the lower bucket boundary for the given index for scale\n   *\n   * @param index\n   * @returns {number}\n   */\n  lowerBoundary(index: number): number {\n    const maxIndex = this._maxNormalLowerBoundaryIndex();\n    if (index >= maxIndex) {\n      if (index === maxIndex) {\n        return 2 * Math.exp((index - (1 << this._scale)) / this._scaleFactor);\n      }\n      throw new MappingError(\n        `overflow: ${index} is > maximum lower boundary: ${maxIndex}`\n      );\n    }\n\n    const minIndex = this._minNormalLowerBoundaryIndex();\n    if (index <= minIndex) {\n      if (index === minIndex) {\n        return ieee754.MIN_VALUE;\n      } else if (index === minIndex - 1) {\n        return Math.exp((index + (1 << this._scale)) / this._scaleFactor) / 2;\n      }\n      throw new MappingError(\n        `overflow: ${index} is < minimum lower boundary: ${minIndex}`\n      );\n    }\n\n    return Math.exp(index * this._inverseFactor);\n  }\n\n  /**\n   * The scale used by this mapping\n   * @returns {number}\n   */\n  get scale(): number {\n    return this._scale;\n  }\n\n  private _minNormalLowerBoundaryIndex(): number {\n    return ieee754.MIN_NORMAL_EXPONENT << this._scale;\n  }\n\n  private _maxNormalLowerBoundaryIndex(): number {\n    return ((ieee754.MAX_NORMAL_EXPONENT + 1) << this._scale) - 1;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Accumulation,\n  AccumulationRecord,\n  Aggregator,\n  AggregatorKind,\n  LastValue,\n} from './types';\nimport { HrTime } from '@opentelemetry/api';\nimport { millisToHrTime, hrTimeToMicroseconds } from '@opentelemetry/core';\nimport {\n  DataPointType,\n  GaugeMetricData,\n  MetricDescriptor,\n} from '../export/MetricData';\nimport { Maybe } from '../utils';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\n\nexport class LastValueAccumulation implements Accumulation {\n  constructor(\n    public startTime: HrTime,\n    private _current: number = 0,\n    public sampleTime: HrTime = [0, 0]\n  ) {}\n\n  record(value: number): void {\n    this._current = value;\n    this.sampleTime = millisToHrTime(Date.now());\n  }\n\n  setStartTime(startTime: HrTime): void {\n    this.startTime = startTime;\n  }\n\n  toPointValue(): LastValue {\n    return this._current;\n  }\n}\n\n/** Basic aggregator which calculates a LastValue from individual measurements. */\nexport class LastValueAggregator implements Aggregator<LastValueAccumulation> {\n  public kind: AggregatorKind.LAST_VALUE = AggregatorKind.LAST_VALUE;\n\n  createAccumulation(startTime: HrTime) {\n    return new LastValueAccumulation(startTime);\n  }\n\n  /**\n   * Returns the result of the merge of the given accumulations.\n   *\n   * Return the newly captured (delta) accumulation for LastValueAggregator.\n   */\n  merge(\n    previous: LastValueAccumulation,\n    delta: LastValueAccumulation\n  ): LastValueAccumulation {\n    // nanoseconds may lose precisions.\n    const latestAccumulation =\n      hrTimeToMicroseconds(delta.sampleTime) >=\n      hrTimeToMicroseconds(previous.sampleTime)\n        ? delta\n        : previous;\n    return new LastValueAccumulation(\n      previous.startTime,\n      latestAccumulation.toPointValue(),\n      latestAccumulation.sampleTime\n    );\n  }\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   *\n   * A delta aggregation is not meaningful to LastValueAggregator, just return\n   * the newly captured (delta) accumulation for LastValueAggregator.\n   */\n  diff(\n    previous: LastValueAccumulation,\n    current: LastValueAccumulation\n  ): LastValueAccumulation {\n    // nanoseconds may lose precisions.\n    const latestAccumulation =\n      hrTimeToMicroseconds(current.sampleTime) >=\n      hrTimeToMicroseconds(previous.sampleTime)\n        ? current\n        : previous;\n    return new LastValueAccumulation(\n      current.startTime,\n      latestAccumulation.toPointValue(),\n      latestAccumulation.sampleTime\n    );\n  }\n\n  toMetricData(\n    descriptor: MetricDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<LastValueAccumulation>[],\n    endTime: HrTime\n  ): Maybe<GaugeMetricData> {\n    return {\n      descriptor,\n      aggregationTemporality,\n      dataPointType: DataPointType.GAUGE,\n      dataPoints: accumulationByAttributes.map(([attributes, accumulation]) => {\n        return {\n          attributes,\n          startTime: accumulation.startTime,\n          endTime,\n          value: accumulation.toPointValue(),\n        };\n      }),\n    };\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock, Clock } from './common/anchored-clock';\nexport {\n  isAttributeKey,\n  isAttributeValue,\n  sanitizeAttributes,\n} from './common/attributes';\nexport {\n  globalErrorHandler,\n  setGlobalErrorHandler,\n} from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport {\n  addHrTimes,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMicroseconds,\n  hrTimeToMilliseconds,\n  hrTimeToNanoseconds,\n  hrTimeToTimeStamp,\n  isTimeInput,\n  isTimeInputHrTime,\n  millisToHrTime,\n  timeInputToHrTime,\n} from './common/time';\nexport {\n  ErrorHandler,\n  InstrumentationLibrary,\n  InstrumentationScope,\n  ShimWrapped,\n  TimeOriginLegacy,\n} from './common/types';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResult, ExportResultCode } from './ExportResult';\nimport {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n} from './baggage/utils';\nexport const baggageUtils = {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n};\nexport {\n  RandomIdGenerator,\n  SDK_INFO,\n  _globalThis,\n  getEnv,\n  getEnvWithoutDefaults,\n  hexToBase64,\n  otperformance,\n  unrefTimer,\n} from './platform';\nexport {\n  CompositePropagator,\n  CompositePropagatorConfig,\n} from './propagation/composite';\nexport {\n  TRACE_PARENT_HEADER,\n  TRACE_STATE_HEADER,\n  W3CTraceContextPropagator,\n  parseTraceParent,\n} from './trace/W3CTraceContextPropagator';\nexport { IdGenerator } from './trace/IdGenerator';\nexport {\n  RPCMetadata,\n  RPCType,\n  deleteRPCMetadata,\n  getRPCMetadata,\n  setRPCMetadata,\n} from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport {\n  isTracingSuppressed,\n  suppressTracing,\n  unsuppressTracing,\n} from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  DEFAULT_ENVIRONMENT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS,\n} from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue)\n      ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n      : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Clock {\n  /**\n   * Return the current time in milliseconds from some epoch such as the Unix epoch or process start\n   */\n  now(): number;\n}\n\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nexport class AnchoredClock implements Clock {\n  private _monotonicClock: Clock;\n  private _epochMillis: number;\n  private _performanceMillis: number;\n\n  /**\n   * Create a new AnchoredClock anchored to the current time returned by systemClock.\n   *\n   * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n   * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n   */\n  public constructor(systemClock: Clock, monotonicClock: Clock) {\n    this._monotonicClock = monotonicClock;\n    this._epochMillis = systemClock.now();\n    this._performanceMillis = monotonicClock.now();\n  }\n\n  /**\n   * Returns the current time by adding the number of milliseconds since the\n   * AnchoredClock was created to the creation epoch time\n   */\n  public now(): number {\n    const delta = this._monotonicClock.now() - this._performanceMillis;\n    return this._epochMillis + delta;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substring(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { getEnvWithoutDefaults, getEnv } from './environment';\nexport { _globalThis } from './globalThis';\nexport { hexToBase64 } from './hex-to-base64';\nexport { RandomIdGenerator } from './RandomIdGenerator';\nexport { otperformance } from './performance';\nexport { SDK_INFO } from './sdk-info';\nexport { unrefTimer } from './timer-util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(\n    _globalThis as typeof globalThis & RAW_ENVIRONMENT\n  );\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n\nexport function getEnvWithoutDefaults(): ENVIRONMENT {\n  return parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'] as const;\n\ntype ENVIRONMENT_BOOLEANS = {\n  [K in (typeof ENVIRONMENT_BOOLEAN_KEYS)[number]]?: boolean;\n};\n\nfunction isEnvVarABoolean(key: unknown): key is keyof ENVIRONMENT_BOOLEANS {\n  return (\n    ENVIRONMENT_BOOLEAN_KEYS.indexOf(key as keyof ENVIRONMENT_BOOLEANS) > -1\n  );\n}\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_BLRP_EXPORT_TIMEOUT',\n  'OTEL_BLRP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BLRP_MAX_QUEUE_SIZE',\n  'OTEL_BLRP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_LOGS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in (typeof ENVIRONMENT_NUMBERS_KEYS)[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n  'OTEL_SEMCONV_STABILITY_OPT_IN',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in (typeof ENVIRONMENT_LISTS_KEYS)[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_LOGS_EXPORTER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE?: string;\n} & ENVIRONMENT_BOOLEANS &\n  ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = 128;\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  OTEL_SDK_DISABLED: false,\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_BLRP_EXPORT_TIMEOUT: 30000,\n  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BLRP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  OTEL_TRACES_EXPORTER: '',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_LOGS_EXPORTER: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n  OTEL_SEMCONV_STABILITY_OPT_IN: [],\n};\n\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(\n  key: keyof ENVIRONMENT_BOOLEANS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  if (typeof values[key] === 'undefined') {\n    return;\n  }\n\n  const value = String(values[key]);\n  // support case-insensitive \"true\"\n  environment[key] = value.toLowerCase() === 'true';\n}\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarABoolean(key)) {\n          parseBoolean(key, environment, values);\n        } else if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n      ? self\n      : typeof window === 'object'\n        ? window\n        : typeof global === 'object'\n          ? global\n          : ({} as typeof globalThis);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hexToBinary } from '../../common/hex-to-binary';\n\nexport function hexToBase64(hexStr: string): string {\n  return btoa(String.fromCharCode(...hexToBinary(hexStr)));\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction intValue(charCode: number): number {\n  // 0-9\n  if (charCode >= 48 && charCode <= 57) {\n    return charCode - 48;\n  }\n\n  // a-f\n  if (charCode >= 97 && charCode <= 102) {\n    return charCode - 87;\n  }\n\n  // A-F\n  return charCode - 55;\n}\n\nexport function hexToBinary(hexStr: string): Uint8Array {\n  const buf = new Uint8Array(hexStr.length / 2);\n  let offset = 0;\n\n  for (let i = 0; i < hexStr.length; i += 2) {\n    const hi = intValue(hexStr.charCodeAt(i));\n    const lo = intValue(hexStr.charCodeAt(i + 1));\n    buf[offset++] = (hi << 4) | lo;\n  }\n\n  return buf;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IdGenerator } from '../../trace/IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_PROCESS_RUNTIME_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SEMRESATTRS_TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SEMRESATTRS_PROCESS_RUNTIME_NAME]: 'browser',\n  [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]: TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  [SEMRESATTRS_TELEMETRY_SDK_VERSION]: VERSION,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.29.0';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer: number): void {}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to extract with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey, Span } from '@opentelemetry/api';\n\nconst RPC_METADATA_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key RPC_METADATA'\n);\n\nexport enum RPCType {\n  HTTP = 'http',\n}\n\ntype HTTPMetadata = {\n  type: RPCType.HTTP;\n  route?: string;\n  span: Span;\n};\n\n/**\n * Allows for future rpc metadata to be used with this mechanism\n */\nexport type RPCMetadata = HTTPMetadata;\n\nexport function setRPCMetadata(context: Context, meta: RPCMetadata): Context {\n  return context.setValue(RPC_METADATA_KEY, meta);\n}\n\nexport function deleteRPCMetadata(context: Context): Context {\n  return context.deleteValue(RPC_METADATA_KEY);\n}\n\nexport function getRPCMetadata(context: Context): RPCMetadata | undefined {\n  return context.getValue(RPC_METADATA_KEY) as RPCMetadata | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  Sampler,\n  SamplingResult,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  isValidTraceId,\n} from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<\n    any,\n    ObjectInto[]\n  >();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return (\n    !isPrimitive(value) &&\n    !isArray(value) &&\n    !isFunction(value) &&\n    typeof value === 'object'\n  );\n}\n\nfunction isPrimitive(value: any): boolean {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null\n  );\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function (arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (\n    typeof Ctor == 'function' &&\n    Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString\n  );\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(\n  promise: Promise<T>,\n  timeout: number\n): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(\n    _resolve,\n    reject\n  ) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(\n    result => {\n      clearTimeout(timeoutHandle);\n      return result;\n    },\n    reason => {\n      clearTimeout(timeoutHandle);\n      throw reason;\n    }\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from '../common/types';\n\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport { ExportResult } from '../ExportResult';\nimport { suppressTracing } from '../trace/suppress-tracing';\n\nexport interface Exporter<T> {\n  export(arg: T, resultCallback: (result: ExportResult) => void): void;\n}\n\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppression of Traces.\n */\nexport function _export<T>(\n  exporter: Exporter<T>,\n  arg: T\n): Promise<ExportResult> {\n  return new Promise(resolve => {\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      exporter.export(arg, (result: ExportResult) => {\n        resolve(result);\n      });\n    });\n  });\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sum,\n  AggregatorKind,\n  Aggregator,\n  Accumulation,\n  AccumulationRecord,\n} from './types';\nimport { HrTime } from '@opentelemetry/api';\nimport {\n  DataPointType,\n  MetricDescriptor,\n  SumMetricData,\n} from '../export/MetricData';\nimport { Maybe } from '../utils';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\n\nexport class SumAccumulation implements Accumulation {\n  constructor(\n    public startTime: HrTime,\n    public monotonic: boolean,\n    private _current: number = 0,\n    public reset = false\n  ) {}\n\n  record(value: number): void {\n    if (this.monotonic && value < 0) {\n      return;\n    }\n    this._current += value;\n  }\n\n  setStartTime(startTime: HrTime): void {\n    this.startTime = startTime;\n  }\n\n  toPointValue(): Sum {\n    return this._current;\n  }\n}\n\n/** Basic aggregator which calculates a Sum from individual measurements. */\nexport class SumAggregator implements Aggregator<SumAccumulation> {\n  public kind: AggregatorKind.SUM = AggregatorKind.SUM;\n\n  constructor(public monotonic: boolean) {}\n\n  createAccumulation(startTime: HrTime) {\n    return new SumAccumulation(startTime, this.monotonic);\n  }\n\n  /**\n   * Returns the result of the merge of the given accumulations.\n   */\n  merge(previous: SumAccumulation, delta: SumAccumulation): SumAccumulation {\n    const prevPv = previous.toPointValue();\n    const deltaPv = delta.toPointValue();\n    if (delta.reset) {\n      return new SumAccumulation(\n        delta.startTime,\n        this.monotonic,\n        deltaPv,\n        delta.reset\n      );\n    }\n    return new SumAccumulation(\n      previous.startTime,\n      this.monotonic,\n      prevPv + deltaPv\n    );\n  }\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   */\n  diff(previous: SumAccumulation, current: SumAccumulation): SumAccumulation {\n    const prevPv = previous.toPointValue();\n    const currPv = current.toPointValue();\n    /**\n     * If the SumAggregator is a monotonic one and the previous point value is\n     * greater than the current one, a reset is deemed to be happened.\n     * Return the current point value to prevent the value from been reset.\n     */\n    if (this.monotonic && prevPv > currPv) {\n      return new SumAccumulation(\n        current.startTime,\n        this.monotonic,\n        currPv,\n        true\n      );\n    }\n    return new SumAccumulation(\n      current.startTime,\n      this.monotonic,\n      currPv - prevPv\n    );\n  }\n\n  toMetricData(\n    descriptor: MetricDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<SumAccumulation>[],\n    endTime: HrTime\n  ): Maybe<SumMetricData> {\n    return {\n      descriptor,\n      aggregationTemporality,\n      dataPointType: DataPointType.SUM,\n      dataPoints: accumulationByAttributes.map(([attributes, accumulation]) => {\n        return {\n          attributes,\n          startTime: accumulation.startTime,\n          endTime,\n          value: accumulation.toPointValue(),\n        };\n      }),\n      isMonotonic: this.monotonic,\n    };\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  internal,\n  ExportResultCode,\n  globalErrorHandler,\n  unrefTimer,\n} from '@opentelemetry/core';\nimport { MetricReader } from './MetricReader';\nimport { PushMetricExporter } from './MetricExporter';\nimport { callWithTimeout, TimeoutError } from '../utils';\nimport { MetricProducer } from './MetricProducer';\n\nexport type PeriodicExportingMetricReaderOptions = {\n  /**\n   * The backing exporter for the metric reader.\n   */\n  exporter: PushMetricExporter;\n  /**\n   * An internal milliseconds for the metric reader to initiate metric\n   * collection.\n   */\n  exportIntervalMillis?: number;\n  /**\n   * Milliseconds for the async observable callback to timeout.\n   */\n  exportTimeoutMillis?: number;\n  /**\n   * **Note, this option is experimental**. Additional MetricProducers to use as a source of\n   * aggregated metric data in addition to the SDK's metric data. The resource returned by\n   * these MetricProducers is ignored; the SDK's resource will be used instead.\n   * @experimental\n   */\n  metricProducers?: MetricProducer[];\n};\n\n/**\n * {@link MetricReader} which collects metrics based on a user-configurable time interval, and passes the metrics to\n * the configured {@link PushMetricExporter}\n */\nexport class PeriodicExportingMetricReader extends MetricReader {\n  private _interval?: ReturnType<typeof setInterval>;\n  private _exporter: PushMetricExporter;\n  private readonly _exportInterval: number;\n  private readonly _exportTimeout: number;\n\n  constructor(options: PeriodicExportingMetricReaderOptions) {\n    super({\n      aggregationSelector: options.exporter.selectAggregation?.bind(\n        options.exporter\n      ),\n      aggregationTemporalitySelector:\n        options.exporter.selectAggregationTemporality?.bind(options.exporter),\n      metricProducers: options.metricProducers,\n    });\n\n    if (\n      options.exportIntervalMillis !== undefined &&\n      options.exportIntervalMillis <= 0\n    ) {\n      throw Error('exportIntervalMillis must be greater than 0');\n    }\n\n    if (\n      options.exportTimeoutMillis !== undefined &&\n      options.exportTimeoutMillis <= 0\n    ) {\n      throw Error('exportTimeoutMillis must be greater than 0');\n    }\n\n    if (\n      options.exportTimeoutMillis !== undefined &&\n      options.exportIntervalMillis !== undefined &&\n      options.exportIntervalMillis < options.exportTimeoutMillis\n    ) {\n      throw Error(\n        'exportIntervalMillis must be greater than or equal to exportTimeoutMillis'\n      );\n    }\n\n    this._exportInterval = options.exportIntervalMillis ?? 60000;\n    this._exportTimeout = options.exportTimeoutMillis ?? 30000;\n    this._exporter = options.exporter;\n  }\n\n  private async _runOnce(): Promise<void> {\n    try {\n      await callWithTimeout(this._doRun(), this._exportTimeout);\n    } catch (err) {\n      if (err instanceof TimeoutError) {\n        api.diag.error(\n          'Export took longer than %s milliseconds and timed out.',\n          this._exportTimeout\n        );\n        return;\n      }\n\n      globalErrorHandler(err);\n    }\n  }\n\n  private async _doRun(): Promise<void> {\n    const { resourceMetrics, errors } = await this.collect({\n      timeoutMillis: this._exportTimeout,\n    });\n\n    if (errors.length > 0) {\n      api.diag.error(\n        'PeriodicExportingMetricReader: metrics collection errors',\n        ...errors\n      );\n    }\n\n    if (resourceMetrics.resource.asyncAttributesPending) {\n      try {\n        await resourceMetrics.resource.waitForAsyncAttributes?.();\n      } catch (e) {\n        api.diag.debug('Error while resolving async portion of resource: ', e);\n        globalErrorHandler(e);\n      }\n    }\n\n    const result = await internal._export(this._exporter, resourceMetrics);\n    if (result.code !== ExportResultCode.SUCCESS) {\n      throw new Error(\n        `PeriodicExportingMetricReader: metrics export failed (error ${result.error})`\n      );\n    }\n  }\n\n  protected override onInitialized(): void {\n    // start running the interval as soon as this reader is initialized and keep handle for shutdown.\n    this._interval = setInterval(() => {\n      // this._runOnce never rejects. Using void operator to suppress @typescript-eslint/no-floating-promises.\n      void this._runOnce();\n    }, this._exportInterval);\n    unrefTimer(this._interval);\n  }\n\n  protected async onForceFlush(): Promise<void> {\n    await this._runOnce();\n    await this._exporter.forceFlush();\n  }\n\n  protected async onShutdown(): Promise<void> {\n    if (this._interval) {\n      clearInterval(this._interval);\n    }\n\n    await this._exporter.shutdown();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExportResultCode } from '@opentelemetry/core';\nimport { ExportResult } from '@opentelemetry/core';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { ResourceMetrics } from './MetricData';\nimport { PushMetricExporter } from './MetricExporter';\n\n/**\n * In-memory Metrics Exporter is a Push Metric Exporter\n * which accumulates metrics data in the local memory and\n * allows to inspect it (useful for e.g. unit tests).\n */\nexport class InMemoryMetricExporter implements PushMetricExporter {\n  protected _shutdown = false;\n  protected _aggregationTemporality: AggregationTemporality;\n  private _metrics: ResourceMetrics[] = [];\n\n  constructor(aggregationTemporality: AggregationTemporality) {\n    this._aggregationTemporality = aggregationTemporality;\n  }\n\n  /**\n   * @inheritedDoc\n   */\n  export(\n    metrics: ResourceMetrics,\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    // Avoid storing metrics when exporter is shutdown\n    if (this._shutdown) {\n      setTimeout(() => resultCallback({ code: ExportResultCode.FAILED }), 0);\n      return;\n    }\n\n    this._metrics.push(metrics);\n    setTimeout(() => resultCallback({ code: ExportResultCode.SUCCESS }), 0);\n  }\n\n  /**\n   * Returns all the collected resource metrics\n   * @returns ResourceMetrics[]\n   */\n  public getMetrics(): ResourceMetrics[] {\n    return this._metrics;\n  }\n\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  reset() {\n    this._metrics = [];\n  }\n\n  selectAggregationTemporality(\n    _instrumentType: InstrumentType\n  ): AggregationTemporality {\n    return this._aggregationTemporality;\n  }\n\n  shutdown(): Promise<void> {\n    this._shutdown = true;\n    return Promise.resolve();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResult, ExportResultCode } from '@opentelemetry/core';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { ResourceMetrics } from './MetricData';\nimport { PushMetricExporter } from './MetricExporter';\nimport {\n  AggregationTemporalitySelector,\n  DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR,\n} from './AggregationSelector';\n\ninterface ConsoleMetricExporterOptions {\n  temporalitySelector?: AggregationTemporalitySelector;\n}\n\n/**\n * This is an implementation of {@link PushMetricExporter} that prints metrics to the\n * console. This class can be used for diagnostic purposes.\n *\n * NOTE: This {@link PushMetricExporter} is intended for diagnostics use only, output rendered to the console may change at any time.\n */\n\n/* eslint-disable no-console */\nexport class ConsoleMetricExporter implements PushMetricExporter {\n  protected _shutdown = false;\n  protected _temporalitySelector: AggregationTemporalitySelector;\n\n  constructor(options?: ConsoleMetricExporterOptions) {\n    this._temporalitySelector =\n      options?.temporalitySelector ?? DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR;\n  }\n\n  export(\n    metrics: ResourceMetrics,\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    if (this._shutdown) {\n      // If the exporter is shutting down, by spec, we need to return FAILED as export result\n      setImmediate(resultCallback, { code: ExportResultCode.FAILED });\n      return;\n    }\n\n    return ConsoleMetricExporter._sendMetrics(metrics, resultCallback);\n  }\n\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  selectAggregationTemporality(\n    _instrumentType: InstrumentType\n  ): AggregationTemporality {\n    return this._temporalitySelector(_instrumentType);\n  }\n\n  shutdown(): Promise<void> {\n    this._shutdown = true;\n    return Promise.resolve();\n  }\n\n  private static _sendMetrics(\n    metrics: ResourceMetrics,\n    done: (result: ExportResult) => void\n  ): void {\n    for (const scopeMetrics of metrics.scopeMetrics) {\n      for (const metric of scopeMetrics.metrics) {\n        console.dir(\n          {\n            descriptor: metric.descriptor,\n            dataPointType: metric.dataPointType,\n            dataPoints: metric.dataPoints,\n          },\n          { depth: null }\n        );\n      }\n    }\n\n    done({ code: ExportResultCode.SUCCESS });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  MeterProvider as IMeterProvider,\n  Meter as IMeter,\n  MeterOptions,\n  createNoopMeter,\n} from '@opentelemetry/api';\nimport { IResource, Resource } from '@opentelemetry/resources';\nimport { MetricReader } from './export/MetricReader';\nimport { MeterProviderSharedState } from './state/MeterProviderSharedState';\nimport { MetricCollector } from './state/MetricCollector';\nimport { ForceFlushOptions, ShutdownOptions } from './types';\nimport { View } from './view/View';\n\n/**\n * MeterProviderOptions provides an interface for configuring a MeterProvider.\n */\nexport interface MeterProviderOptions {\n  /** Resource associated with metric telemetry  */\n  resource?: IResource;\n  views?: View[];\n  readers?: MetricReader[];\n  /**\n   * Merge resource with {@link Resource.default()}?\n   * Default: {@code true}\n   */\n  mergeResourceWithDefaults?: boolean;\n}\n\n/**\n * @param mergeWithDefaults\n * @param providedResource\n */\nfunction prepareResource(\n  mergeWithDefaults: boolean,\n  providedResource: Resource | undefined\n) {\n  const resource = providedResource ?? Resource.empty();\n\n  if (mergeWithDefaults) {\n    return Resource.default().merge(resource);\n  }\n  return resource;\n}\n\n/**\n * This class implements the {@link MeterProvider} interface.\n */\nexport class MeterProvider implements IMeterProvider {\n  private _sharedState: MeterProviderSharedState;\n  private _shutdown = false;\n\n  constructor(options?: MeterProviderOptions) {\n    this._sharedState = new MeterProviderSharedState(\n      prepareResource(\n        options?.mergeResourceWithDefaults ?? true,\n        options?.resource\n      )\n    );\n    if (options?.views != null && options.views.length > 0) {\n      for (const view of options.views) {\n        this._sharedState.viewRegistry.addView(view);\n      }\n    }\n\n    if (options?.readers != null && options.readers.length > 0) {\n      for (const metricReader of options.readers) {\n        this.addMetricReader(metricReader);\n      }\n    }\n  }\n\n  /**\n   * Get a meter with the configuration of the MeterProvider.\n   */\n  getMeter(name: string, version = '', options: MeterOptions = {}): IMeter {\n    // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/sdk.md#meter-creation\n    if (this._shutdown) {\n      diag.warn('A shutdown MeterProvider cannot provide a Meter');\n      return createNoopMeter();\n    }\n\n    return this._sharedState.getMeterSharedState({\n      name,\n      version,\n      schemaUrl: options.schemaUrl,\n    }).meter;\n  }\n\n  /**\n   * Register a {@link MetricReader} to the meter provider. After the\n   * registration, the MetricReader can start metrics collection.\n   *\n   * <p> NOTE: {@link MetricReader} instances MUST be added before creating any instruments.\n   * A {@link MetricReader} instance registered later may receive no or incomplete metric data.\n   *\n   * @param metricReader the metric reader to be registered.\n   *\n   * @deprecated This method will be removed in SDK 2.0. Please use\n   * {@link MeterProviderOptions.readers} via the {@link MeterProvider} constructor instead\n   */\n  addMetricReader(metricReader: MetricReader) {\n    const collector = new MetricCollector(this._sharedState, metricReader);\n    metricReader.setMetricProducer(collector);\n    this._sharedState.metricCollectors.push(collector);\n  }\n\n  /**\n   * Flush all buffered data and shut down the MeterProvider and all registered\n   * MetricReaders.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  async shutdown(options?: ShutdownOptions): Promise<void> {\n    if (this._shutdown) {\n      diag.warn('shutdown may only be called once per MeterProvider');\n      return;\n    }\n\n    this._shutdown = true;\n\n    await Promise.all(\n      this._sharedState.metricCollectors.map(collector => {\n        return collector.shutdown(options);\n      })\n    );\n  }\n\n  /**\n   * Notifies all registered MetricReaders to flush any buffered data.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  async forceFlush(options?: ForceFlushOptions): Promise<void> {\n    // do not flush after shutdown\n    if (this._shutdown) {\n      diag.warn('invalid attempt to force flush after MeterProvider shutdown');\n      return;\n    }\n\n    await Promise.all(\n      this._sharedState.metricCollectors.map(collector => {\n        return collector.forceFlush(options);\n      })\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Resource } from './Resource';\nexport { IResource } from './IResource';\nexport { defaultServiceName } from './platform';\nexport { DetectorSync, ResourceAttributes, Detector } from './types';\nexport { ResourceDetectionConfig } from './config';\nexport {\n  browserDetector,\n  browserDetectorSync,\n  envDetector,\n  envDetectorSync,\n  hostDetector,\n  hostDetectorSync,\n  osDetector,\n  osDetectorSync,\n  processDetector,\n  processDetectorSync,\n  serviceInstanceIdDetectorSync,\n} from './detectors';\nexport { detectResourcesSync, detectResources } from './detect-resources';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  SEMRESATTRS_SERVICE_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ResourceAttributes } from './types';\nimport { defaultServiceName } from './platform';\nimport { IResource } from './IResource';\n\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nexport class Resource implements IResource {\n  static readonly EMPTY = new Resource({});\n  private _syncAttributes?: ResourceAttributes;\n  private _asyncAttributesPromise?: Promise<ResourceAttributes>;\n  private _attributes?: ResourceAttributes;\n\n  /**\n   * Check if async attributes have resolved. This is useful to avoid awaiting\n   * waitForAsyncAttributes (which will introduce asynchronous behavior) when not necessary.\n   *\n   * @returns true if the resource \"attributes\" property is not yet settled to its final value\n   */\n  public asyncAttributesPending?: boolean;\n\n  /**\n   * Returns an empty Resource\n   */\n  static empty(): IResource {\n    return Resource.EMPTY;\n  }\n\n  /**\n   * Returns a Resource that identifies the SDK in use.\n   */\n  static default(): IResource {\n    return new Resource({\n      [SEMRESATTRS_SERVICE_NAME]: defaultServiceName(),\n      [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_LANGUAGE],\n      [SEMRESATTRS_TELEMETRY_SDK_NAME]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_NAME],\n      [SEMRESATTRS_TELEMETRY_SDK_VERSION]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_VERSION],\n    });\n  }\n\n  constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes: ResourceAttributes,\n    asyncAttributesPromise?: Promise<ResourceAttributes>\n  ) {\n    this._attributes = attributes;\n    this.asyncAttributesPending = asyncAttributesPromise != null;\n    this._syncAttributes = this._attributes ?? {};\n    this._asyncAttributesPromise = asyncAttributesPromise?.then(\n      asyncAttributes => {\n        this._attributes = Object.assign({}, this._attributes, asyncAttributes);\n        this.asyncAttributesPending = false;\n        return asyncAttributes;\n      },\n      err => {\n        diag.debug(\"a resource's async attributes promise rejected: %s\", err);\n        this.asyncAttributesPending = false;\n        return {};\n      }\n    );\n  }\n\n  get attributes(): ResourceAttributes {\n    if (this.asyncAttributesPending) {\n      diag.error(\n        'Accessing resource attributes before async attributes settled'\n      );\n    }\n\n    return this._attributes ?? {};\n  }\n\n  /**\n   * Returns a promise that will never be rejected. Resolves when all async attributes have finished being added to\n   * this Resource's attributes. This is useful in exporters to block until resource detection\n   * has finished.\n   */\n  async waitForAsyncAttributes?(): Promise<void> {\n    if (this.asyncAttributesPending) {\n      await this._asyncAttributesPromise;\n    }\n  }\n\n  /**\n   * Returns a new, merged {@link Resource} by merging the current Resource\n   * with the other Resource. In case of a collision, other Resource takes\n   * precedence.\n   *\n   * @param other the Resource that will be merged with this.\n   * @returns the newly merged Resource.\n   */\n  merge(other: IResource | null): IResource {\n    if (!other) return this;\n\n    // SpanAttributes from other resource overwrite attributes from this resource.\n    const mergedSyncAttributes = {\n      ...this._syncAttributes,\n      //Support for old resource implementation where _syncAttributes is not defined\n      ...((other as Resource)._syncAttributes ?? other.attributes),\n    };\n\n    if (\n      !this._asyncAttributesPromise &&\n      !(other as Resource)._asyncAttributesPromise\n    ) {\n      return new Resource(mergedSyncAttributes);\n    }\n\n    const mergedAttributesPromise = Promise.all([\n      this._asyncAttributesPromise,\n      (other as Resource)._asyncAttributesPromise,\n    ]).then(([thisAsyncAttributes, otherAsyncAttributes]) => {\n      return {\n        ...this._syncAttributes,\n        ...thisAsyncAttributes,\n        //Support for old resource implementation where _syncAttributes is not defined\n        ...((other as Resource)._syncAttributes ?? other.attributes),\n        ...otherAsyncAttributes,\n      };\n    });\n\n    return new Resource(mergedSyncAttributes, mergedAttributesPromise);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { defaultServiceName } from './default-service-name';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultServiceName(): string {\n  return 'unknown_service';\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport { Aggregation, InstrumentType } from '..';\nimport { instrumentationScopeId } from '../utils';\nimport { ViewRegistry } from '../view/ViewRegistry';\nimport { MeterSharedState } from './MeterSharedState';\nimport { MetricCollector, MetricCollectorHandle } from './MetricCollector';\n\n/**\n * An internal record for shared meter provider states.\n */\nexport class MeterProviderSharedState {\n  viewRegistry = new ViewRegistry();\n\n  metricCollectors: MetricCollector[] = [];\n\n  meterSharedStates: Map<string, MeterSharedState> = new Map();\n\n  constructor(public resource: IResource) {}\n\n  getMeterSharedState(instrumentationScope: InstrumentationScope) {\n    const id = instrumentationScopeId(instrumentationScope);\n    let meterSharedState = this.meterSharedStates.get(id);\n    if (meterSharedState == null) {\n      meterSharedState = new MeterSharedState(this, instrumentationScope);\n      this.meterSharedStates.set(id, meterSharedState);\n    }\n    return meterSharedState;\n  }\n\n  selectAggregations(instrumentType: InstrumentType) {\n    const result: [MetricCollectorHandle, Aggregation][] = [];\n    for (const collector of this.metricCollectors) {\n      result.push([collector, collector.selectAggregation(instrumentType)]);\n    }\n    return result;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { InstrumentSelector } from './InstrumentSelector';\nimport { MeterSelector } from './MeterSelector';\nimport { View } from './View';\n\nexport class ViewRegistry {\n  private _registeredViews: View[] = [];\n\n  addView(view: View) {\n    this._registeredViews.push(view);\n  }\n\n  findViews(\n    instrument: InstrumentDescriptor,\n    meter: InstrumentationScope\n  ): View[] {\n    const views = this._registeredViews.filter(registeredView => {\n      return (\n        this._matchInstrument(registeredView.instrumentSelector, instrument) &&\n        this._matchMeter(registeredView.meterSelector, meter)\n      );\n    });\n\n    return views;\n  }\n\n  private _matchInstrument(\n    selector: InstrumentSelector,\n    instrument: InstrumentDescriptor\n  ): boolean {\n    return (\n      (selector.getType() === undefined ||\n        instrument.type === selector.getType()) &&\n      selector.getNameFilter().match(instrument.name) &&\n      selector.getUnitFilter().match(instrument.unit)\n    );\n  }\n\n  private _matchMeter(\n    selector: MeterSelector,\n    meter: InstrumentationScope\n  ): boolean {\n    return (\n      selector.getNameFilter().match(meter.name) &&\n      (meter.version === undefined ||\n        selector.getVersionFilter().match(meter.version)) &&\n      (meter.schemaUrl === undefined ||\n        selector.getSchemaUrlFilter().match(meter.schemaUrl))\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { MetricCollectOptions } from '../export/MetricProducer';\nimport { ScopeMetrics } from '../export/MetricData';\nimport {\n  createInstrumentDescriptorWithView,\n  InstrumentDescriptor,\n} from '../InstrumentDescriptor';\nimport { Meter } from '../Meter';\nimport { isNotNullish, Maybe } from '../utils';\nimport { AsyncMetricStorage } from './AsyncMetricStorage';\nimport { MeterProviderSharedState } from './MeterProviderSharedState';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { MetricStorageRegistry } from './MetricStorageRegistry';\nimport { MultiMetricStorage } from './MultiWritableMetricStorage';\nimport { ObservableRegistry } from './ObservableRegistry';\nimport { SyncMetricStorage } from './SyncMetricStorage';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\nimport { MetricStorage } from './MetricStorage';\n\n/**\n * An internal record for shared meter provider states.\n */\nexport class MeterSharedState {\n  metricStorageRegistry = new MetricStorageRegistry();\n  observableRegistry = new ObservableRegistry();\n  meter: Meter;\n\n  constructor(\n    private _meterProviderSharedState: MeterProviderSharedState,\n    private _instrumentationScope: InstrumentationScope\n  ) {\n    this.meter = new Meter(this);\n  }\n\n  registerMetricStorage(descriptor: InstrumentDescriptor) {\n    const storages = this._registerMetricStorage(descriptor, SyncMetricStorage);\n\n    if (storages.length === 1) {\n      return storages[0];\n    }\n    return new MultiMetricStorage(storages);\n  }\n\n  registerAsyncMetricStorage(descriptor: InstrumentDescriptor) {\n    const storages = this._registerMetricStorage(\n      descriptor,\n      AsyncMetricStorage\n    );\n\n    return storages;\n  }\n\n  /**\n   * @param collector opaque handle of {@link MetricCollector} which initiated the collection.\n   * @param collectionTime the HrTime at which the collection was initiated.\n   * @param options options for collection.\n   * @returns the list of metric data collected.\n   */\n  async collect(\n    collector: MetricCollectorHandle,\n    collectionTime: HrTime,\n    options?: MetricCollectOptions\n  ): Promise<ScopeMetricsResult | null> {\n    /**\n     * 1. Call all observable callbacks first.\n     * 2. Collect metric result for the collector.\n     */\n    const errors = await this.observableRegistry.observe(\n      collectionTime,\n      options?.timeoutMillis\n    );\n    const storages = this.metricStorageRegistry.getStorages(collector);\n\n    // prevent more allocations if there are no storages.\n    if (storages.length === 0) {\n      return null;\n    }\n\n    const metricDataList = storages\n      .map(metricStorage => {\n        return metricStorage.collect(collector, collectionTime);\n      })\n      .filter(isNotNullish);\n\n    // skip this scope if no data was collected (storage created, but no data observed)\n    if (metricDataList.length === 0) {\n      return { errors };\n    }\n\n    return {\n      scopeMetrics: {\n        scope: this._instrumentationScope,\n        metrics: metricDataList,\n      },\n      errors,\n    };\n  }\n\n  private _registerMetricStorage<\n    MetricStorageType extends MetricStorageConstructor,\n    R extends InstanceType<MetricStorageType>,\n  >(\n    descriptor: InstrumentDescriptor,\n    MetricStorageType: MetricStorageType\n  ): R[] {\n    const views = this._meterProviderSharedState.viewRegistry.findViews(\n      descriptor,\n      this._instrumentationScope\n    );\n    let storages = views.map(view => {\n      const viewDescriptor = createInstrumentDescriptorWithView(\n        view,\n        descriptor\n      );\n      const compatibleStorage =\n        this.metricStorageRegistry.findOrUpdateCompatibleStorage<R>(\n          viewDescriptor\n        );\n      if (compatibleStorage != null) {\n        return compatibleStorage;\n      }\n      const aggregator = view.aggregation.createAggregator(viewDescriptor);\n      const viewStorage = new MetricStorageType(\n        viewDescriptor,\n        aggregator,\n        view.attributesProcessor,\n        this._meterProviderSharedState.metricCollectors,\n        view.aggregationCardinalityLimit\n      ) as R;\n      this.metricStorageRegistry.register(viewStorage);\n      return viewStorage;\n    });\n\n    // Fallback to the per-collector aggregations if no view is configured for the instrument.\n    if (storages.length === 0) {\n      const perCollectorAggregations =\n        this._meterProviderSharedState.selectAggregations(descriptor.type);\n      const collectorStorages = perCollectorAggregations.map(\n        ([collector, aggregation]) => {\n          const compatibleStorage =\n            this.metricStorageRegistry.findOrUpdateCompatibleCollectorStorage<R>(\n              collector,\n              descriptor\n            );\n          if (compatibleStorage != null) {\n            return compatibleStorage;\n          }\n\n          const aggregator = aggregation.createAggregator(descriptor);\n          const cardinalityLimit = collector.selectCardinalityLimit(\n            descriptor.type\n          );\n          const storage = new MetricStorageType(\n            descriptor,\n            aggregator,\n            AttributesProcessor.Noop(),\n            [collector],\n            cardinalityLimit\n          ) as R;\n          this.metricStorageRegistry.registerForCollector(collector, storage);\n          return storage;\n        }\n      );\n      storages = storages.concat(collectorStorages);\n    }\n\n    return storages;\n  }\n}\n\ninterface ScopeMetricsResult {\n  scopeMetrics?: ScopeMetrics;\n  errors: unknown[];\n}\n\ninterface MetricStorageConstructor {\n  new (\n    instrumentDescriptor: InstrumentDescriptor,\n    aggregator: Aggregator<Maybe<Accumulation>>,\n    attributesProcessor: AttributesProcessor,\n    collectors: MetricCollectorHandle[],\n    aggregationCardinalityLimit?: number\n  ): MetricStorage;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Meter as IMeter,\n  MetricOptions,\n  Histogram,\n  Counter,\n  UpDownCounter,\n  ObservableGauge,\n  ObservableCounter,\n  ObservableUpDownCounter,\n  BatchObservableCallback,\n  Observable,\n} from '@opentelemetry/api';\nimport {\n  createInstrumentDescriptor,\n  InstrumentType,\n} from './InstrumentDescriptor';\nimport {\n  CounterInstrument,\n  GaugeInstrument,\n  HistogramInstrument,\n  ObservableCounterInstrument,\n  ObservableGaugeInstrument,\n  ObservableUpDownCounterInstrument,\n  UpDownCounterInstrument,\n} from './Instruments';\nimport { MeterSharedState } from './state/MeterSharedState';\nimport { Gauge } from './types';\n\n/**\n * This class implements the {@link IMeter} interface.\n */\nexport class Meter implements IMeter {\n  constructor(private _meterSharedState: MeterSharedState) {}\n\n  /**\n   * Create a {@link Gauge} instrument.\n   */\n  createGauge(name: string, options?: MetricOptions): Gauge {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.GAUGE,\n      options\n    );\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new GaugeInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link Histogram} instrument.\n   */\n  createHistogram(name: string, options?: MetricOptions): Histogram {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.HISTOGRAM,\n      options\n    );\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new HistogramInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link Counter} instrument.\n   */\n  createCounter(name: string, options?: MetricOptions): Counter {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.COUNTER,\n      options\n    );\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new CounterInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link UpDownCounter} instrument.\n   */\n  createUpDownCounter(name: string, options?: MetricOptions): UpDownCounter {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.UP_DOWN_COUNTER,\n      options\n    );\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new UpDownCounterInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link ObservableGauge} instrument.\n   */\n  createObservableGauge(\n    name: string,\n    options?: MetricOptions\n  ): ObservableGauge {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.OBSERVABLE_GAUGE,\n      options\n    );\n    const storages =\n      this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableGaugeInstrument(\n      descriptor,\n      storages,\n      this._meterSharedState.observableRegistry\n    );\n  }\n\n  /**\n   * Create a {@link ObservableCounter} instrument.\n   */\n  createObservableCounter(\n    name: string,\n    options?: MetricOptions\n  ): ObservableCounter {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.OBSERVABLE_COUNTER,\n      options\n    );\n    const storages =\n      this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableCounterInstrument(\n      descriptor,\n      storages,\n      this._meterSharedState.observableRegistry\n    );\n  }\n\n  /**\n   * Create a {@link ObservableUpDownCounter} instrument.\n   */\n  createObservableUpDownCounter(\n    name: string,\n    options?: MetricOptions\n  ): ObservableUpDownCounter {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.OBSERVABLE_UP_DOWN_COUNTER,\n      options\n    );\n    const storages =\n      this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableUpDownCounterInstrument(\n      descriptor,\n      storages,\n      this._meterSharedState.observableRegistry\n    );\n  }\n\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(\n    callback: BatchObservableCallback,\n    observables: Observable[]\n  ) {\n    this._meterSharedState.observableRegistry.addBatchCallback(\n      callback,\n      observables\n    );\n  }\n\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(\n    callback: BatchObservableCallback,\n    observables: Observable[]\n  ) {\n    this._meterSharedState.observableRegistry.removeBatchCallback(\n      callback,\n      observables\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context as contextApi,\n  diag,\n  Context,\n  Attributes,\n  ValueType,\n  UpDownCounter,\n  Counter,\n  Histogram,\n  Observable,\n  ObservableCallback,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n} from '@opentelemetry/api';\nimport { millisToHrTime } from '@opentelemetry/core';\nimport { InstrumentDescriptor } from './InstrumentDescriptor';\nimport { ObservableRegistry } from './state/ObservableRegistry';\nimport {\n  AsyncWritableMetricStorage,\n  WritableMetricStorage,\n} from './state/WritableMetricStorage';\nimport { Gauge } from './types';\n\nexport class SyncInstrument {\n  constructor(\n    private _writableMetricStorage: WritableMetricStorage,\n    protected _descriptor: InstrumentDescriptor\n  ) {}\n\n  protected _record(\n    value: number,\n    attributes: Attributes = {},\n    context: Context = contextApi.active()\n  ) {\n    if (typeof value !== 'number') {\n      diag.warn(\n        `non-number value provided to metric ${this._descriptor.name}: ${value}`\n      );\n      return;\n    }\n    if (\n      this._descriptor.valueType === ValueType.INT &&\n      !Number.isInteger(value)\n    ) {\n      diag.warn(\n        `INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n      // ignore non-finite values.\n      if (!Number.isInteger(value)) {\n        return;\n      }\n    }\n    this._writableMetricStorage.record(\n      value,\n      attributes,\n      context,\n      millisToHrTime(Date.now())\n    );\n  }\n}\n\n/**\n * The class implements {@link UpDownCounter} interface.\n */\nexport class UpDownCounterInstrument\n  extends SyncInstrument\n  implements UpDownCounter\n{\n  /**\n   * Increment value of counter by the input. Inputs may be negative.\n   */\n  add(value: number, attributes?: Attributes, ctx?: Context): void {\n    this._record(value, attributes, ctx);\n  }\n}\n\n/**\n * The class implements {@link Counter} interface.\n */\nexport class CounterInstrument extends SyncInstrument implements Counter {\n  /**\n   * Increment value of counter by the input. Inputs may not be negative.\n   */\n  add(value: number, attributes?: Attributes, ctx?: Context): void {\n    if (value < 0) {\n      diag.warn(\n        `negative value provided to counter ${this._descriptor.name}: ${value}`\n      );\n      return;\n    }\n\n    this._record(value, attributes, ctx);\n  }\n}\n\n/**\n * The class implements {@link Gauge} interface.\n */\nexport class GaugeInstrument extends SyncInstrument implements Gauge {\n  /**\n   * Records a measurement.\n   */\n  record(value: number, attributes?: Attributes, ctx?: Context): void {\n    this._record(value, attributes, ctx);\n  }\n}\n\n/**\n * The class implements {@link Histogram} interface.\n */\nexport class HistogramInstrument extends SyncInstrument implements Histogram {\n  /**\n   * Records a measurement. Value of the measurement must not be negative.\n   */\n  record(value: number, attributes?: Attributes, ctx?: Context): void {\n    if (value < 0) {\n      diag.warn(\n        `negative value provided to histogram ${this._descriptor.name}: ${value}`\n      );\n      return;\n    }\n    this._record(value, attributes, ctx);\n  }\n}\n\nexport class ObservableInstrument implements Observable {\n  /** @internal */\n  _metricStorages: AsyncWritableMetricStorage[];\n  /** @internal */\n  _descriptor: InstrumentDescriptor;\n\n  constructor(\n    descriptor: InstrumentDescriptor,\n    metricStorages: AsyncWritableMetricStorage[],\n    private _observableRegistry: ObservableRegistry\n  ) {\n    this._descriptor = descriptor;\n    this._metricStorages = metricStorages;\n  }\n\n  /**\n   * @see {Observable.addCallback}\n   */\n  addCallback(callback: ObservableCallback) {\n    this._observableRegistry.addCallback(callback, this);\n  }\n\n  /**\n   * @see {Observable.removeCallback}\n   */\n  removeCallback(callback: ObservableCallback) {\n    this._observableRegistry.removeCallback(callback, this);\n  }\n}\n\nexport class ObservableCounterInstrument\n  extends ObservableInstrument\n  implements ObservableCounter {}\nexport class ObservableGaugeInstrument\n  extends ObservableInstrument\n  implements ObservableGauge {}\nexport class ObservableUpDownCounterInstrument\n  extends ObservableInstrument\n  implements ObservableUpDownCounter {}\n\nexport function isObservableInstrument(\n  it: unknown\n): it is ObservableInstrument {\n  return it instanceof ObservableInstrument;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\nimport { MetricStorage } from './MetricStorage';\nimport { MetricData } from '../export/MetricData';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { AttributeHashMap } from './HashMap';\nimport { AsyncWritableMetricStorage } from './WritableMetricStorage';\n\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for asynchronous instruments.\n */\nexport class AsyncMetricStorage<T extends Maybe<Accumulation>>\n  extends MetricStorage\n  implements AsyncWritableMetricStorage\n{\n  private _deltaMetricStorage: DeltaMetricProcessor<T>;\n  private _temporalMetricStorage: TemporalMetricProcessor<T>;\n\n  constructor(\n    _instrumentDescriptor: InstrumentDescriptor,\n    aggregator: Aggregator<T>,\n    private _attributesProcessor: AttributesProcessor,\n    collectorHandles: MetricCollectorHandle[],\n    private _aggregationCardinalityLimit?: number\n  ) {\n    super(_instrumentDescriptor);\n    this._deltaMetricStorage = new DeltaMetricProcessor(\n      aggregator,\n      this._aggregationCardinalityLimit\n    );\n    this._temporalMetricStorage = new TemporalMetricProcessor(\n      aggregator,\n      collectorHandles\n    );\n  }\n\n  record(measurements: AttributeHashMap<number>, observationTime: HrTime) {\n    const processed = new AttributeHashMap<number>();\n    Array.from(measurements.entries()).forEach(([attributes, value]) => {\n      processed.set(this._attributesProcessor.process(attributes), value);\n    });\n    this._deltaMetricStorage.batchCumulate(processed, observationTime);\n  }\n\n  /**\n   * Collects the metrics from this storage. The ObservableCallback is invoked\n   * during the collection.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  collect(\n    collector: MetricCollectorHandle,\n    collectionTime: HrTime\n  ): Maybe<MetricData> {\n    const accumulations = this._deltaMetricStorage.collect();\n\n    return this._temporalMetricStorage.buildMetrics(\n      collector,\n      this._instrumentDescriptor,\n      accumulations,\n      collectionTime\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { MetricData } from '../export/MetricData';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport {\n  createInstrumentDescriptor,\n  InstrumentDescriptor,\n} from '../InstrumentDescriptor';\n\n/**\n * Internal interface.\n *\n * Represents a storage from which we can collect metrics.\n */\nexport abstract class MetricStorage {\n  constructor(protected _instrumentDescriptor: InstrumentDescriptor) {}\n\n  /**\n   * Collects the metrics from this storage.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  abstract collect(\n    collector: MetricCollectorHandle,\n    collectionTime: HrTime\n  ): Maybe<MetricData>;\n\n  getInstrumentDescriptor(): Readonly<InstrumentDescriptor> {\n    return this._instrumentDescriptor;\n  }\n\n  updateDescription(description: string): void {\n    this._instrumentDescriptor = createInstrumentDescriptor(\n      this._instrumentDescriptor.name,\n      this._instrumentDescriptor.type,\n      {\n        description: description,\n        valueType: this._instrumentDescriptor.valueType,\n        unit: this._instrumentDescriptor.unit,\n        advice: this._instrumentDescriptor.advice,\n      }\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime, Attributes } from '@opentelemetry/api';\nimport { Maybe, hashAttributes } from '../utils';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { AttributeHashMap } from './HashMap';\n\n/**\n * Internal interface.\n *\n * Allows synchronous collection of metrics. This processor should allow\n * allocation of new aggregation cells for metrics and convert cumulative\n * recording to delta data points.\n */\nexport class DeltaMetricProcessor<T extends Maybe<Accumulation>> {\n  private _activeCollectionStorage = new AttributeHashMap<T>();\n  // TODO: find a reasonable mean to clean the memo;\n  // https://github.com/open-telemetry/opentelemetry-specification/pull/2208\n  private _cumulativeMemoStorage = new AttributeHashMap<T>();\n  private _cardinalityLimit: number;\n  private _overflowAttributes = { 'otel.metric.overflow': true };\n  private _overflowHashCode: string;\n\n  constructor(\n    private _aggregator: Aggregator<T>,\n    aggregationCardinalityLimit?: number\n  ) {\n    this._cardinalityLimit = (aggregationCardinalityLimit ?? 2000) - 1;\n    this._overflowHashCode = hashAttributes(this._overflowAttributes);\n  }\n\n  record(\n    value: number,\n    attributes: Attributes,\n    _context: Context,\n    collectionTime: HrTime\n  ) {\n    let accumulation = this._activeCollectionStorage.get(attributes);\n\n    if (!accumulation) {\n      if (this._activeCollectionStorage.size >= this._cardinalityLimit) {\n        const overflowAccumulation = this._activeCollectionStorage.getOrDefault(\n          this._overflowAttributes,\n          () => this._aggregator.createAccumulation(collectionTime)\n        );\n        overflowAccumulation?.record(value);\n        return;\n      }\n\n      accumulation = this._aggregator.createAccumulation(collectionTime);\n      this._activeCollectionStorage.set(attributes, accumulation);\n    }\n\n    accumulation?.record(value);\n  }\n\n  batchCumulate(\n    measurements: AttributeHashMap<number>,\n    collectionTime: HrTime\n  ) {\n    Array.from(measurements.entries()).forEach(\n      ([attributes, value, hashCode]) => {\n        const accumulation =\n          this._aggregator.createAccumulation(collectionTime);\n        accumulation?.record(value);\n        let delta = accumulation;\n        // Diff with recorded cumulative memo.\n        if (this._cumulativeMemoStorage.has(attributes, hashCode)) {\n          // has() returned true, previous is present.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const previous = this._cumulativeMemoStorage.get(\n            attributes,\n            hashCode\n          )!;\n          delta = this._aggregator.diff(previous, accumulation);\n        } else {\n          // If the cardinality limit is reached, we need to change the attributes\n          if (this._cumulativeMemoStorage.size >= this._cardinalityLimit) {\n            attributes = this._overflowAttributes;\n            hashCode = this._overflowHashCode;\n            if (this._cumulativeMemoStorage.has(attributes, hashCode)) {\n              const previous = this._cumulativeMemoStorage.get(\n                attributes,\n                hashCode\n              )!;\n              delta = this._aggregator.diff(previous, accumulation);\n            }\n          }\n        }\n        // Merge with uncollected active delta.\n        if (this._activeCollectionStorage.has(attributes, hashCode)) {\n          // has() returned true, previous is present.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const active = this._activeCollectionStorage.get(\n            attributes,\n            hashCode\n          )!;\n          delta = this._aggregator.merge(active, delta);\n        }\n\n        // Save the current record and the delta record.\n        this._cumulativeMemoStorage.set(attributes, accumulation, hashCode);\n        this._activeCollectionStorage.set(attributes, delta, hashCode);\n      }\n    );\n  }\n\n  /**\n   * Returns a collection of delta metrics. Start time is the when first\n   * time event collected.\n   */\n  collect() {\n    const unreportedDelta = this._activeCollectionStorage;\n    this._activeCollectionStorage = new AttributeHashMap();\n\n    return unreportedDelta;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\nimport { hashAttributes } from '../utils';\n\nexport interface Hash<ValueType, HashCodeType> {\n  (value: ValueType): HashCodeType;\n}\n\nexport class HashMap<KeyType, ValueType, HashCodeType> {\n  private _valueMap = new Map<HashCodeType, ValueType>();\n  private _keyMap = new Map<HashCodeType, KeyType>();\n\n  constructor(private _hash: Hash<KeyType, HashCodeType>) {}\n\n  get(key: KeyType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    return this._valueMap.get(hashCode);\n  }\n\n  getOrDefault(key: KeyType, defaultFactory: () => ValueType) {\n    const hash = this._hash(key);\n    if (this._valueMap.has(hash)) {\n      return this._valueMap.get(hash);\n    }\n    const val = defaultFactory();\n    if (!this._keyMap.has(hash)) {\n      this._keyMap.set(hash, key);\n    }\n    this._valueMap.set(hash, val);\n    return val;\n  }\n\n  set(key: KeyType, value: ValueType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    if (!this._keyMap.has(hashCode)) {\n      this._keyMap.set(hashCode, key);\n    }\n    this._valueMap.set(hashCode, value);\n  }\n\n  has(key: KeyType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    return this._valueMap.has(hashCode);\n  }\n\n  *keys(): IterableIterator<[KeyType, HashCodeType]> {\n    const keyIterator = this._keyMap.entries();\n    let next = keyIterator.next();\n    while (next.done !== true) {\n      yield [next.value[1], next.value[0]];\n      next = keyIterator.next();\n    }\n  }\n\n  *entries(): IterableIterator<[KeyType, ValueType, HashCodeType]> {\n    const valueIterator = this._valueMap.entries();\n    let next = valueIterator.next();\n    while (next.done !== true) {\n      // next.value[0] here can not be undefined\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      yield [this._keyMap.get(next.value[0])!, next.value[1], next.value[0]];\n      next = valueIterator.next();\n    }\n  }\n\n  get size() {\n    return this._valueMap.size;\n  }\n}\n\nexport class AttributeHashMap<ValueType> extends HashMap<\n  Attributes,\n  ValueType,\n  string\n> {\n  constructor() {\n    super(hashAttributes);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport {\n  Accumulation,\n  AccumulationRecord,\n  Aggregator,\n} from '../aggregator/types';\nimport { MetricData } from '../export/MetricData';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { AttributeHashMap } from './HashMap';\n\n/**\n * Remembers what was presented to a specific exporter.\n */\ninterface LastReportedHistory<T extends Maybe<Accumulation>> {\n  /**\n   * The last accumulation of metric data.\n   */\n  accumulations: AttributeHashMap<T>;\n  /**\n   * The timestamp the data was reported.\n   */\n  collectionTime: HrTime;\n  /**\n   * The AggregationTemporality used to aggregate reports.\n   */\n  aggregationTemporality: AggregationTemporality;\n}\n\n/**\n * Internal interface.\n *\n * Provides unique reporting for each collector. Allows synchronous collection\n * of metrics and reports given temporality values.\n */\nexport class TemporalMetricProcessor<T extends Maybe<Accumulation>> {\n  private _unreportedAccumulations = new Map<\n    MetricCollectorHandle,\n    AttributeHashMap<T>[]\n  >();\n  private _reportHistory = new Map<\n    MetricCollectorHandle,\n    LastReportedHistory<T>\n  >();\n\n  constructor(\n    private _aggregator: Aggregator<T>,\n    collectorHandles: MetricCollectorHandle[]\n  ) {\n    collectorHandles.forEach(handle => {\n      this._unreportedAccumulations.set(handle, []);\n    });\n  }\n\n  /**\n   * Builds the {@link MetricData} streams to report against a specific MetricCollector.\n   * @param collector The information of the MetricCollector.\n   * @param collectors The registered collectors.\n   * @param instrumentDescriptor The instrumentation descriptor that these metrics generated with.\n   * @param currentAccumulations The current accumulation of metric data from instruments.\n   * @param collectionTime The current collection timestamp.\n   * @returns The {@link MetricData} points or `null`.\n   */\n  buildMetrics(\n    collector: MetricCollectorHandle,\n    instrumentDescriptor: InstrumentDescriptor,\n    currentAccumulations: AttributeHashMap<T>,\n    collectionTime: HrTime\n  ): Maybe<MetricData> {\n    this._stashAccumulations(currentAccumulations);\n    const unreportedAccumulations =\n      this._getMergedUnreportedAccumulations(collector);\n\n    let result = unreportedAccumulations;\n    let aggregationTemporality: AggregationTemporality;\n    // Check our last report time.\n    if (this._reportHistory.has(collector)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const last = this._reportHistory.get(collector)!;\n      const lastCollectionTime = last.collectionTime;\n      aggregationTemporality = last.aggregationTemporality;\n\n      // Use aggregation temporality + instrument to determine if we do a merge or a diff of\n      // previous. We have the following four scenarios:\n      // 1. Cumulative Aggregation (temporality) + Delta recording (sync instrument).\n      //    Here we merge with our last record to get a cumulative aggregation.\n      // 2. Cumulative Aggregation + Cumulative recording (async instrument).\n      //    Cumulative records are converted to delta recording with DeltaMetricProcessor.\n      //    Here we merge with our last record to get a cumulative aggregation.\n      // 3. Delta Aggregation + Delta recording\n      //    Calibrate the startTime of metric streams to be the reader's lastCollectionTime.\n      // 4. Delta Aggregation + Cumulative recording.\n      //    Cumulative records are converted to delta recording with DeltaMetricProcessor.\n      //    Calibrate the startTime of metric streams to be the reader's lastCollectionTime.\n      if (aggregationTemporality === AggregationTemporality.CUMULATIVE) {\n        // We need to make sure the current delta recording gets merged into the previous cumulative\n        // for the next cumulative recording.\n        result = TemporalMetricProcessor.merge(\n          last.accumulations,\n          unreportedAccumulations,\n          this._aggregator\n        );\n      } else {\n        result = TemporalMetricProcessor.calibrateStartTime(\n          last.accumulations,\n          unreportedAccumulations,\n          lastCollectionTime\n        );\n      }\n    } else {\n      // Call into user code to select aggregation temporality for the instrument.\n      aggregationTemporality = collector.selectAggregationTemporality(\n        instrumentDescriptor.type\n      );\n    }\n\n    // Update last reported (cumulative) accumulation.\n    this._reportHistory.set(collector, {\n      accumulations: result,\n      collectionTime,\n      aggregationTemporality,\n    });\n\n    const accumulationRecords = AttributesMapToAccumulationRecords(result);\n\n    // do not convert to metric data if there is nothing to convert.\n    if (accumulationRecords.length === 0) {\n      return undefined;\n    }\n\n    return this._aggregator.toMetricData(\n      instrumentDescriptor,\n      aggregationTemporality,\n      accumulationRecords,\n      /* endTime */ collectionTime\n    );\n  }\n\n  private _stashAccumulations(currentAccumulation: AttributeHashMap<T>) {\n    const registeredCollectors = this._unreportedAccumulations.keys();\n    for (const collector of registeredCollectors) {\n      let stash = this._unreportedAccumulations.get(collector);\n      if (stash === undefined) {\n        stash = [];\n        this._unreportedAccumulations.set(collector, stash);\n      }\n      stash.push(currentAccumulation);\n    }\n  }\n\n  private _getMergedUnreportedAccumulations(collector: MetricCollectorHandle) {\n    let result = new AttributeHashMap<T>();\n    const unreportedList = this._unreportedAccumulations.get(collector);\n    this._unreportedAccumulations.set(collector, []);\n    if (unreportedList === undefined) {\n      return result;\n    }\n    for (const it of unreportedList) {\n      result = TemporalMetricProcessor.merge(result, it, this._aggregator);\n    }\n    return result;\n  }\n\n  static merge<T extends Maybe<Accumulation>>(\n    last: AttributeHashMap<T>,\n    current: AttributeHashMap<T>,\n    aggregator: Aggregator<T>\n  ) {\n    const result = last;\n    const iterator = current.entries();\n    let next = iterator.next();\n    while (next.done !== true) {\n      const [key, record, hash] = next.value;\n      if (last.has(key, hash)) {\n        const lastAccumulation = last.get(key, hash);\n        // last.has() returned true, lastAccumulation is present.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const accumulation = aggregator.merge(lastAccumulation!, record);\n        result.set(key, accumulation, hash);\n      } else {\n        result.set(key, record, hash);\n      }\n\n      next = iterator.next();\n    }\n    return result;\n  }\n\n  /**\n   * Calibrate the reported metric streams' startTime to lastCollectionTime. Leaves\n   * the new stream to be the initial observation time unchanged.\n   */\n  static calibrateStartTime<T extends Maybe<Accumulation>>(\n    last: AttributeHashMap<T>,\n    current: AttributeHashMap<T>,\n    lastCollectionTime: HrTime\n  ) {\n    for (const [key, hash] of last.keys()) {\n      const currentAccumulation = current.get(key, hash);\n      currentAccumulation?.setStartTime(lastCollectionTime);\n    }\n    return current;\n  }\n}\n\n// TypeScript complains about converting 3 elements tuple to AccumulationRecord<T>.\nfunction AttributesMapToAccumulationRecords<T>(\n  map: AttributeHashMap<T>\n): AccumulationRecord<T>[] {\n  return Array.from(map.entries()) as unknown as AccumulationRecord<T>[];\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricStorage } from './MetricStorage';\nimport {\n  InstrumentDescriptor,\n  isDescriptorCompatibleWith,\n} from '../InstrumentDescriptor';\nimport * as api from '@opentelemetry/api';\nimport {\n  getConflictResolutionRecipe,\n  getIncompatibilityDetails,\n} from '../view/RegistrationConflicts';\nimport { MetricCollectorHandle } from './MetricCollector';\n\ntype StorageMap = Map<string, MetricStorage[]>;\n\n/**\n * Internal class for storing {@link MetricStorage}\n */\nexport class MetricStorageRegistry {\n  private readonly _sharedRegistry: StorageMap = new Map();\n  private readonly _perCollectorRegistry = new Map<\n    MetricCollectorHandle,\n    StorageMap\n  >();\n\n  static create() {\n    return new MetricStorageRegistry();\n  }\n\n  getStorages(collector: MetricCollectorHandle): MetricStorage[] {\n    let storages: MetricStorage[] = [];\n    for (const metricStorages of this._sharedRegistry.values()) {\n      storages = storages.concat(metricStorages);\n    }\n\n    const perCollectorStorages = this._perCollectorRegistry.get(collector);\n    if (perCollectorStorages != null) {\n      for (const metricStorages of perCollectorStorages.values()) {\n        storages = storages.concat(metricStorages);\n      }\n    }\n\n    return storages;\n  }\n\n  register(storage: MetricStorage) {\n    this._registerStorage(storage, this._sharedRegistry);\n  }\n\n  registerForCollector(\n    collector: MetricCollectorHandle,\n    storage: MetricStorage\n  ) {\n    let storageMap = this._perCollectorRegistry.get(collector);\n    if (storageMap == null) {\n      storageMap = new Map();\n      this._perCollectorRegistry.set(collector, storageMap);\n    }\n    this._registerStorage(storage, storageMap);\n  }\n\n  findOrUpdateCompatibleStorage<T extends MetricStorage>(\n    expectedDescriptor: InstrumentDescriptor\n  ): T | null {\n    const storages = this._sharedRegistry.get(expectedDescriptor.name);\n    if (storages === undefined) {\n      return null;\n    }\n\n    // If the descriptor is compatible, the type of their metric storage\n    // (either SyncMetricStorage or AsyncMetricStorage) must be compatible.\n    return this._findOrUpdateCompatibleStorage<T>(expectedDescriptor, storages);\n  }\n\n  findOrUpdateCompatibleCollectorStorage<T extends MetricStorage>(\n    collector: MetricCollectorHandle,\n    expectedDescriptor: InstrumentDescriptor\n  ): T | null {\n    const storageMap = this._perCollectorRegistry.get(collector);\n    if (storageMap === undefined) {\n      return null;\n    }\n\n    const storages = storageMap.get(expectedDescriptor.name);\n    if (storages === undefined) {\n      return null;\n    }\n\n    // If the descriptor is compatible, the type of their metric storage\n    // (either SyncMetricStorage or AsyncMetricStorage) must be compatible.\n    return this._findOrUpdateCompatibleStorage<T>(expectedDescriptor, storages);\n  }\n\n  private _registerStorage(storage: MetricStorage, storageMap: StorageMap) {\n    const descriptor = storage.getInstrumentDescriptor();\n    const storages = storageMap.get(descriptor.name);\n\n    if (storages === undefined) {\n      storageMap.set(descriptor.name, [storage]);\n      return;\n    }\n\n    storages.push(storage);\n  }\n\n  private _findOrUpdateCompatibleStorage<T extends MetricStorage>(\n    expectedDescriptor: InstrumentDescriptor,\n    existingStorages: MetricStorage[]\n  ): T | null {\n    let compatibleStorage = null;\n\n    for (const existingStorage of existingStorages) {\n      const existingDescriptor = existingStorage.getInstrumentDescriptor();\n\n      if (isDescriptorCompatibleWith(existingDescriptor, expectedDescriptor)) {\n        // Use the longer description if it does not match.\n        if (existingDescriptor.description !== expectedDescriptor.description) {\n          if (\n            expectedDescriptor.description.length >\n            existingDescriptor.description.length\n          ) {\n            existingStorage.updateDescription(expectedDescriptor.description);\n          }\n\n          api.diag.warn(\n            'A view or instrument with the name ',\n            expectedDescriptor.name,\n            ' has already been registered, but has a different description and is incompatible with another registered view.\\n',\n            'Details:\\n',\n            getIncompatibilityDetails(existingDescriptor, expectedDescriptor),\n            'The longer description will be used.\\nTo resolve the conflict:',\n            getConflictResolutionRecipe(existingDescriptor, expectedDescriptor)\n          );\n        }\n        // Storage is fully compatible. There will never be more than one pre-existing fully compatible storage.\n        compatibleStorage = existingStorage as T;\n      } else {\n        // The implementation SHOULD warn about duplicate instrument registration\n        // conflicts after applying View configuration.\n        api.diag.warn(\n          'A view or instrument with the name ',\n          expectedDescriptor.name,\n          ' has already been registered and is incompatible with another registered view.\\n',\n          'Details:\\n',\n          getIncompatibilityDetails(existingDescriptor, expectedDescriptor),\n          'To resolve the conflict:\\n',\n          getConflictResolutionRecipe(existingDescriptor, expectedDescriptor)\n        );\n      }\n    }\n\n    return compatibleStorage;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentSelectorCriteria } from './InstrumentSelector';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\n\nexport function getIncompatibilityDetails(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  let incompatibility = '';\n  if (existing.unit !== otherDescriptor.unit) {\n    incompatibility += `\\t- Unit '${existing.unit}' does not match '${otherDescriptor.unit}'\\n`;\n  }\n  if (existing.type !== otherDescriptor.type) {\n    incompatibility += `\\t- Type '${existing.type}' does not match '${otherDescriptor.type}'\\n`;\n  }\n  if (existing.valueType !== otherDescriptor.valueType) {\n    incompatibility += `\\t- Value Type '${existing.valueType}' does not match '${otherDescriptor.valueType}'\\n`;\n  }\n  if (existing.description !== otherDescriptor.description) {\n    incompatibility += `\\t- Description '${existing.description}' does not match '${otherDescriptor.description}'\\n`;\n  }\n\n  return incompatibility;\n}\n\nexport function getValueTypeConflictResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  return `\\t- use valueType '${existing.valueType}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`;\n}\n\nexport function getUnitConflictResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  return `\\t- use unit '${existing.unit}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`;\n}\n\nexport function getTypeConflictResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  const selector: InstrumentSelectorCriteria = {\n    name: otherDescriptor.name,\n    type: otherDescriptor.type,\n    unit: otherDescriptor.unit,\n  };\n\n  const selectorString = JSON.stringify(selector);\n\n  return `\\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'`;\n}\n\nexport function getDescriptionResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n): string {\n  const selector: InstrumentSelectorCriteria = {\n    name: otherDescriptor.name,\n    type: otherDescriptor.type,\n    unit: otherDescriptor.unit,\n  };\n\n  const selectorString = JSON.stringify(selector);\n\n  return `\\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'\n    \\t- OR - create a new view with the name ${existing.name} and description '${existing.description}' and InstrumentSelector ${selectorString}\n    \\t- OR - create a new view with the name ${otherDescriptor.name} and description '${existing.description}' and InstrumentSelector ${selectorString}`;\n}\n\nexport function getConflictResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n): string {\n  // Conflicts that cannot be solved via views.\n  if (existing.valueType !== otherDescriptor.valueType) {\n    return getValueTypeConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  if (existing.unit !== otherDescriptor.unit) {\n    return getUnitConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  // Conflicts that can be solved via views.\n  if (existing.type !== otherDescriptor.type) {\n    // this will automatically solve possible description conflicts.\n    return getTypeConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  if (existing.description !== otherDescriptor.description) {\n    return getDescriptionResolutionRecipe(existing, otherDescriptor);\n  }\n\n  return '';\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime, Attributes } from '@opentelemetry/api';\nimport { WritableMetricStorage } from './WritableMetricStorage';\n\n/**\n * Internal interface.\n */\nexport class MultiMetricStorage implements WritableMetricStorage {\n  constructor(private readonly _backingStorages: WritableMetricStorage[]) {}\n\n  record(\n    value: number,\n    attributes: Attributes,\n    context: Context,\n    recordTime: HrTime\n  ) {\n    this._backingStorages.forEach(it => {\n      it.record(value, attributes, context, recordTime);\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  HrTime,\n  BatchObservableCallback,\n  Observable,\n  ObservableCallback,\n} from '@opentelemetry/api';\nimport { isObservableInstrument, ObservableInstrument } from '../Instruments';\nimport {\n  BatchObservableResultImpl,\n  ObservableResultImpl,\n} from '../ObservableResult';\nimport {\n  callWithTimeout,\n  PromiseAllSettled,\n  isPromiseAllSettledRejectionResult,\n  setEquals,\n} from '../utils';\n\n/**\n * Records for single instrument observable callback.\n */\ninterface ObservableCallbackRecord {\n  callback: ObservableCallback;\n  instrument: ObservableInstrument;\n}\n\n/**\n * Records for multiple instruments observable callback.\n */\ninterface BatchObservableCallbackRecord {\n  callback: BatchObservableCallback;\n  instruments: Set<ObservableInstrument>;\n}\n\n/**\n * An internal interface for managing ObservableCallbacks.\n *\n * Every registered callback associated with a set of instruments are be evaluated\n * exactly once during collection prior to reading data for that instrument.\n */\nexport class ObservableRegistry {\n  private _callbacks: ObservableCallbackRecord[] = [];\n  private _batchCallbacks: BatchObservableCallbackRecord[] = [];\n\n  addCallback(callback: ObservableCallback, instrument: ObservableInstrument) {\n    const idx = this._findCallback(callback, instrument);\n    if (idx >= 0) {\n      return;\n    }\n    this._callbacks.push({ callback, instrument });\n  }\n\n  removeCallback(\n    callback: ObservableCallback,\n    instrument: ObservableInstrument\n  ) {\n    const idx = this._findCallback(callback, instrument);\n    if (idx < 0) {\n      return;\n    }\n    this._callbacks.splice(idx, 1);\n  }\n\n  addBatchCallback(\n    callback: BatchObservableCallback,\n    instruments: Observable[]\n  ) {\n    // Create a set of unique instruments.\n    const observableInstruments = new Set(\n      instruments.filter(isObservableInstrument)\n    );\n    if (observableInstruments.size === 0) {\n      diag.error(\n        'BatchObservableCallback is not associated with valid instruments',\n        instruments\n      );\n      return;\n    }\n    const idx = this._findBatchCallback(callback, observableInstruments);\n    if (idx >= 0) {\n      return;\n    }\n    this._batchCallbacks.push({ callback, instruments: observableInstruments });\n  }\n\n  removeBatchCallback(\n    callback: BatchObservableCallback,\n    instruments: Observable[]\n  ) {\n    // Create a set of unique instruments.\n    const observableInstruments = new Set(\n      instruments.filter(isObservableInstrument)\n    );\n    const idx = this._findBatchCallback(callback, observableInstruments);\n    if (idx < 0) {\n      return;\n    }\n    this._batchCallbacks.splice(idx, 1);\n  }\n\n  /**\n   * @returns a promise of rejected reasons for invoking callbacks.\n   */\n  async observe(\n    collectionTime: HrTime,\n    timeoutMillis?: number\n  ): Promise<unknown[]> {\n    const callbackFutures = this._observeCallbacks(\n      collectionTime,\n      timeoutMillis\n    );\n    const batchCallbackFutures = this._observeBatchCallbacks(\n      collectionTime,\n      timeoutMillis\n    );\n\n    const results = await PromiseAllSettled([\n      ...callbackFutures,\n      ...batchCallbackFutures,\n    ]);\n\n    const rejections = results\n      .filter(isPromiseAllSettledRejectionResult)\n      .map(it => it.reason);\n    return rejections;\n  }\n\n  private _observeCallbacks(observationTime: HrTime, timeoutMillis?: number) {\n    return this._callbacks.map(async ({ callback, instrument }) => {\n      const observableResult = new ObservableResultImpl(\n        instrument._descriptor.name,\n        instrument._descriptor.valueType\n      );\n      let callPromise: Promise<void> = Promise.resolve(\n        callback(observableResult)\n      );\n      if (timeoutMillis != null) {\n        callPromise = callWithTimeout(callPromise, timeoutMillis);\n      }\n      await callPromise;\n      instrument._metricStorages.forEach(metricStorage => {\n        metricStorage.record(observableResult._buffer, observationTime);\n      });\n    });\n  }\n\n  private _observeBatchCallbacks(\n    observationTime: HrTime,\n    timeoutMillis?: number\n  ) {\n    return this._batchCallbacks.map(async ({ callback, instruments }) => {\n      const observableResult = new BatchObservableResultImpl();\n      let callPromise: Promise<void> = Promise.resolve(\n        callback(observableResult)\n      );\n      if (timeoutMillis != null) {\n        callPromise = callWithTimeout(callPromise, timeoutMillis);\n      }\n      await callPromise;\n      instruments.forEach(instrument => {\n        const buffer = observableResult._buffer.get(instrument);\n        if (buffer == null) {\n          return;\n        }\n        instrument._metricStorages.forEach(metricStorage => {\n          metricStorage.record(buffer, observationTime);\n        });\n      });\n    });\n  }\n\n  private _findCallback(\n    callback: ObservableCallback,\n    instrument: ObservableInstrument\n  ) {\n    return this._callbacks.findIndex(record => {\n      return record.callback === callback && record.instrument === instrument;\n    });\n  }\n\n  private _findBatchCallback(\n    callback: BatchObservableCallback,\n    instruments: Set<ObservableInstrument>\n  ) {\n    return this._batchCallbacks.findIndex(record => {\n      return (\n        record.callback === callback &&\n        setEquals(record.instruments, instruments)\n      );\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  ObservableResult,\n  Attributes,\n  ValueType,\n  BatchObservableResult,\n  Observable,\n} from '@opentelemetry/api';\nimport { AttributeHashMap } from './state/HashMap';\nimport { isObservableInstrument, ObservableInstrument } from './Instruments';\n\n/**\n * The class implements {@link ObservableResult} interface.\n */\nexport class ObservableResultImpl implements ObservableResult {\n  /**\n   * @internal\n   */\n  _buffer = new AttributeHashMap<number>();\n\n  constructor(\n    private _instrumentName: string,\n    private _valueType: ValueType\n  ) {}\n\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   */\n  observe(value: number, attributes: Attributes = {}): void {\n    if (typeof value !== 'number') {\n      diag.warn(\n        `non-number value provided to metric ${this._instrumentName}: ${value}`\n      );\n      return;\n    }\n    if (this._valueType === ValueType.INT && !Number.isInteger(value)) {\n      diag.warn(\n        `INT value type cannot accept a floating-point value for ${this._instrumentName}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n      // ignore non-finite values.\n      if (!Number.isInteger(value)) {\n        return;\n      }\n    }\n    this._buffer.set(attributes, value);\n  }\n}\n\n/**\n * The class implements {@link BatchObservableCallback} interface.\n */\nexport class BatchObservableResultImpl implements BatchObservableResult {\n  /**\n   * @internal\n   */\n  _buffer: Map<ObservableInstrument, AttributeHashMap<number>> = new Map();\n\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   */\n  observe(\n    metric: Observable,\n    value: number,\n    attributes: Attributes = {}\n  ): void {\n    if (!isObservableInstrument(metric)) {\n      return;\n    }\n    let map = this._buffer.get(metric);\n    if (map == null) {\n      map = new AttributeHashMap();\n      this._buffer.set(metric, map);\n    }\n    if (typeof value !== 'number') {\n      diag.warn(\n        `non-number value provided to metric ${metric._descriptor.name}: ${value}`\n      );\n      return;\n    }\n    if (\n      metric._descriptor.valueType === ValueType.INT &&\n      !Number.isInteger(value)\n    ) {\n      diag.warn(\n        `INT value type cannot accept a floating-point value for ${metric._descriptor.name}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n      // ignore non-finite values.\n      if (!Number.isInteger(value)) {\n        return;\n      }\n    }\n    map.set(attributes, value);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime, Attributes } from '@opentelemetry/api';\nimport { WritableMetricStorage } from './WritableMetricStorage';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\nimport { MetricStorage } from './MetricStorage';\nimport { MetricData } from '../export/MetricData';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\n\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for synchronous instruments.\n */\nexport class SyncMetricStorage<T extends Maybe<Accumulation>>\n  extends MetricStorage\n  implements WritableMetricStorage\n{\n  private _deltaMetricStorage: DeltaMetricProcessor<T>;\n  private _temporalMetricStorage: TemporalMetricProcessor<T>;\n\n  constructor(\n    instrumentDescriptor: InstrumentDescriptor,\n    aggregator: Aggregator<T>,\n    private _attributesProcessor: AttributesProcessor,\n    collectorHandles: MetricCollectorHandle[],\n    private _aggregationCardinalityLimit?: number\n  ) {\n    super(instrumentDescriptor);\n    this._deltaMetricStorage = new DeltaMetricProcessor(\n      aggregator,\n      this._aggregationCardinalityLimit\n    );\n    this._temporalMetricStorage = new TemporalMetricProcessor(\n      aggregator,\n      collectorHandles\n    );\n  }\n\n  record(\n    value: number,\n    attributes: Attributes,\n    context: Context,\n    recordTime: HrTime\n  ) {\n    attributes = this._attributesProcessor.process(attributes, context);\n    this._deltaMetricStorage.record(value, attributes, context, recordTime);\n  }\n\n  /**\n   * Collects the metrics from this storage.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  collect(\n    collector: MetricCollectorHandle,\n    collectionTime: HrTime\n  ): Maybe<MetricData> {\n    const accumulations = this._deltaMetricStorage.collect();\n\n    return this._temporalMetricStorage.buildMetrics(\n      collector,\n      this._instrumentDescriptor,\n      accumulations,\n      collectionTime\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, MetricAttributes } from '@opentelemetry/api';\n\n/**\n * The {@link AttributesProcessor} is responsible for customizing which\n * attribute(s) are to be reported as metrics dimension(s) and adding\n * additional dimension(s) from the {@link Context}.\n */\nexport abstract class AttributesProcessor {\n  /**\n   * Process the metric instrument attributes.\n   *\n   * @param incoming The metric instrument attributes.\n   * @param context The active context when the instrument is synchronous.\n   * `undefined` otherwise.\n   */\n  abstract process(\n    incoming: MetricAttributes,\n    context?: Context\n  ): MetricAttributes;\n\n  static Noop() {\n    return NOOP;\n  }\n}\n\nexport class NoopAttributesProcessor extends AttributesProcessor {\n  process(incoming: MetricAttributes, _context?: Context) {\n    return incoming;\n  }\n}\n\n/**\n * {@link AttributesProcessor} that filters by allowed attribute names and drops any names that are not in the\n * allow list.\n */\nexport class FilteringAttributesProcessor extends AttributesProcessor {\n  constructor(private _allowedAttributeNames: string[]) {\n    super();\n  }\n\n  process(incoming: MetricAttributes, _context: Context): MetricAttributes {\n    const filteredAttributes: MetricAttributes = {};\n    Object.keys(incoming)\n      .filter(attributeName =>\n        this._allowedAttributeNames.includes(attributeName)\n      )\n      .forEach(\n        attributeName =>\n          (filteredAttributes[attributeName] = incoming[attributeName])\n      );\n    return filteredAttributes;\n  }\n}\n\nconst NOOP = new NoopAttributesProcessor();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { millisToHrTime } from '@opentelemetry/core';\nimport { AggregationTemporalitySelector } from '../export/AggregationSelector';\nimport { CollectionResult, ScopeMetrics } from '../export/MetricData';\nimport { MetricProducer, MetricCollectOptions } from '../export/MetricProducer';\nimport { MetricReader } from '../export/MetricReader';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { ForceFlushOptions, ShutdownOptions } from '../types';\nimport { MeterProviderSharedState } from './MeterProviderSharedState';\n\n/**\n * An internal opaque interface that the MetricReader receives as\n * MetricProducer. It acts as the storage key to the internal metric stream\n * state for each MetricReader.\n */\nexport class MetricCollector implements MetricProducer {\n  constructor(\n    private _sharedState: MeterProviderSharedState,\n    private _metricReader: MetricReader\n  ) {}\n\n  async collect(options?: MetricCollectOptions): Promise<CollectionResult> {\n    const collectionTime = millisToHrTime(Date.now());\n    const scopeMetrics: ScopeMetrics[] = [];\n    const errors: unknown[] = [];\n\n    const meterCollectionPromises = Array.from(\n      this._sharedState.meterSharedStates.values()\n    ).map(async meterSharedState => {\n      const current = await meterSharedState.collect(\n        this,\n        collectionTime,\n        options\n      );\n\n      // only add scope metrics if available\n      if (current?.scopeMetrics != null) {\n        scopeMetrics.push(current.scopeMetrics);\n      }\n\n      // only add errors if available\n      if (current?.errors != null) {\n        errors.push(...current.errors);\n      }\n    });\n    await Promise.all(meterCollectionPromises);\n\n    return {\n      resourceMetrics: {\n        resource: this._sharedState.resource,\n        scopeMetrics: scopeMetrics,\n      },\n      errors: errors,\n    };\n  }\n\n  /**\n   * Delegates for MetricReader.forceFlush.\n   */\n  async forceFlush(options?: ForceFlushOptions): Promise<void> {\n    await this._metricReader.forceFlush(options);\n  }\n\n  /**\n   * Delegates for MetricReader.shutdown.\n   */\n  async shutdown(options?: ShutdownOptions): Promise<void> {\n    await this._metricReader.shutdown(options);\n  }\n\n  selectAggregationTemporality(instrumentType: InstrumentType) {\n    return this._metricReader.selectAggregationTemporality(instrumentType);\n  }\n\n  selectAggregation(instrumentType: InstrumentType) {\n    return this._metricReader.selectAggregation(instrumentType);\n  }\n\n  /**\n   * Select the cardinality limit for the given {@link InstrumentType} for this\n   * collector.\n   */\n  selectCardinalityLimit(instrumentType: InstrumentType): number {\n    return this._metricReader.selectCardinalityLimit?.(instrumentType) ?? 2000;\n  }\n}\n\n/**\n * An internal interface for MetricCollector. Exposes the necessary\n * information for metric collection.\n */\nexport interface MetricCollectorHandle {\n  selectAggregationTemporality: AggregationTemporalitySelector;\n  selectCardinalityLimit(instrumentType: InstrumentType): number;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PatternPredicate } from './Predicate';\nimport {\n  AttributesProcessor,\n  FilteringAttributesProcessor,\n} from './AttributesProcessor';\nimport { InstrumentSelector } from './InstrumentSelector';\nimport { MeterSelector } from './MeterSelector';\nimport { Aggregation } from './Aggregation';\nimport { InstrumentType } from '../InstrumentDescriptor';\n\nexport type ViewOptions = {\n  /**\n   *  Alters the metric stream:\n   *  This will be used as the name of the metrics stream.\n   *  If not provided, the original Instrument name will be used.\n   */\n  name?: string;\n  /**\n   * Alters the metric stream:\n   * This will be used as the description of the metrics stream.\n   * If not provided, the original Instrument description will be used by default.\n   *\n   * @example <caption>changes the description of all selected instruments to 'sample description'</caption>\n   * description: 'sample description'\n   */\n  description?: string;\n  /**\n   * Alters the metric stream:\n   * If provided, the attributes that are not in the list will be ignored.\n   * If not provided, all attribute keys will be used by default.\n   *\n   * @example <caption>drops all attributes with top-level keys except for 'myAttr' and 'myOtherAttr'</caption>\n   * attributeKeys: ['myAttr', 'myOtherAttr']\n   * @example <caption>drops all attributes</caption>\n   * attributeKeys: []\n   */\n  attributeKeys?: string[];\n  /**\n   * Alters the metric stream:\n   * Alters the {@link Aggregation} of the metric stream.\n   *\n   * @example <caption>changes the aggregation of the selected instrument(s) to ExplicitBucketHistogramAggregation</caption>\n   * aggregation: new ExplicitBucketHistogramAggregation([1, 10, 100])\n   * @example <caption>changes the aggregation of the selected instrument(s) to LastValueAggregation</caption>\n   * aggregation: new LastValueAggregation()\n   */\n  aggregation?: Aggregation;\n  /**\n   * Alters the metric stream:\n   * Sets a limit on the number of unique attribute combinations (cardinality) that can be aggregated.\n   * If not provided, the default limit will be used.\n   *\n   * @example <caption>sets the cardinality limit to 1000</caption>\n   * aggregationCardinalityLimit: 1000\n   */\n  aggregationCardinalityLimit?: number;\n  /**\n   * Instrument selection criteria:\n   * The original type of the Instrument(s).\n   *\n   * @example <caption>selects all counters</caption>\n   * instrumentType: InstrumentType.COUNTER\n   * @example <caption>selects all histograms</caption>\n   * instrumentType: InstrumentType.HISTOGRAM\n   */\n  instrumentType?: InstrumentType;\n  /**\n   * Instrument selection criteria:\n   * Original name of the Instrument(s) with wildcard support.\n   *\n   * @example <caption>select all instruments</caption>\n   * instrumentName: '*'\n   * @example <caption>select all instruments starting with 'my.instruments.'</caption>\n   * instrumentName: 'my.instruments.*'\n   * @example <caption>select all instruments named 'my.instrument.requests' exactly</caption>\n   * instrumentName: 'my.instruments.requests'\n   */\n  instrumentName?: string;\n  /**\n   * Instrument selection criteria:\n   * The unit of the Instrument(s).\n   *\n   * @example <caption>select all instruments with unit 'ms'</caption>\n   * instrumentUnit: 'ms'\n   */\n  instrumentUnit?: string;\n  /**\n   * Instrument selection criteria:\n   * The name of the Meter. No wildcard support, name must match the meter exactly.\n   *\n   * @example <caption>select all meters named 'example.component.app' exactly</caption>\n   * meterName: 'example.component.app'\n   */\n  meterName?: string;\n  /**\n   * Instrument selection criteria:\n   * The version of the Meter. No wildcard support, version must match exactly.\n   *\n   * @example\n   * meterVersion: '1.0.1'\n   */\n  meterVersion?: string;\n  /**\n   * Instrument selection criteria:\n   * The schema URL of the Meter. No wildcard support, schema URL must match exactly.\n   *\n   * @example <caption>Select all meters with schema URL 'https://example.com/schema' exactly.</caption>\n   * meterSchemaUrl: 'https://example.com/schema'\n   */\n  meterSchemaUrl?: string;\n};\n\nfunction isSelectorNotProvided(options: ViewOptions): boolean {\n  return (\n    options.instrumentName == null &&\n    options.instrumentType == null &&\n    options.instrumentUnit == null &&\n    options.meterName == null &&\n    options.meterVersion == null &&\n    options.meterSchemaUrl == null\n  );\n}\n\n/**\n * Can be passed to a {@link MeterProvider} to select instruments and alter their metric stream.\n */\nexport class View {\n  readonly name?: string;\n  readonly description?: string;\n  readonly aggregation: Aggregation;\n  readonly attributesProcessor: AttributesProcessor;\n  readonly instrumentSelector: InstrumentSelector;\n  readonly meterSelector: MeterSelector;\n  readonly aggregationCardinalityLimit?: number;\n\n  /**\n   * Create a new {@link View} instance.\n   *\n   * Parameters can be categorized as two types:\n   *  Instrument selection criteria: Used to describe the instrument(s) this view will be applied to.\n   *  Will be treated as additive (the Instrument has to meet all the provided criteria to be selected).\n   *\n   *  Metric stream altering: Alter the metric stream of instruments selected by instrument selection criteria.\n   *\n   * @param viewOptions {@link ViewOptions} for altering the metric stream and instrument selection.\n   * @param viewOptions.name\n   * Alters the metric stream:\n   *  This will be used as the name of the metrics stream.\n   *  If not provided, the original Instrument name will be used.\n   * @param viewOptions.description\n   * Alters the metric stream:\n   *  This will be used as the description of the metrics stream.\n   *  If not provided, the original Instrument description will be used by default.\n   * @param viewOptions.attributeKeys\n   * Alters the metric stream:\n   *  If provided, the attributes that are not in the list will be ignored.\n   *  If not provided, all attribute keys will be used by default.\n   * @param viewOptions.aggregationCardinalityLimit\n   * Alters the metric stream:\n   *  Sets a limit on the number of unique attribute combinations (cardinality) that can be aggregated.\n   *  If not provided, the default limit of 2000 will be used.\n   * @param viewOptions.aggregation\n   * Alters the metric stream:\n   *  Alters the {@link Aggregation} of the metric stream.\n   * @param viewOptions.instrumentName\n   * Instrument selection criteria:\n   *  Original name of the Instrument(s) with wildcard support.\n   * @param viewOptions.instrumentType\n   * Instrument selection criteria:\n   *  The original type of the Instrument(s).\n   * @param viewOptions.instrumentUnit\n   * Instrument selection criteria:\n   *  The unit of the Instrument(s).\n   * @param viewOptions.meterName\n   * Instrument selection criteria:\n   *  The name of the Meter. No wildcard support, name must match the meter exactly.\n   * @param viewOptions.meterVersion\n   * Instrument selection criteria:\n   *  The version of the Meter. No wildcard support, version must match exactly.\n   * @param viewOptions.meterSchemaUrl\n   * Instrument selection criteria:\n   *  The schema URL of the Meter. No wildcard support, schema URL must match exactly.\n   *\n   * @example\n   * // Create a view that changes the Instrument 'my.instrument' to use to an\n   * // ExplicitBucketHistogramAggregation with the boundaries [20, 30, 40]\n   * new View({\n   *   aggregation: new ExplicitBucketHistogramAggregation([20, 30, 40]),\n   *   instrumentName: 'my.instrument'\n   * })\n   */\n  constructor(viewOptions: ViewOptions) {\n    // If no criteria is provided, the SDK SHOULD treat it as an error.\n    // It is recommended that the SDK implementations fail fast.\n    if (isSelectorNotProvided(viewOptions)) {\n      throw new Error('Cannot create view with no selector arguments supplied');\n    }\n\n    // the SDK SHOULD NOT allow Views with a specified name to be declared with instrument selectors that\n    // may select more than one instrument (e.g. wild card instrument name) in the same Meter.\n    if (\n      viewOptions.name != null &&\n      (viewOptions?.instrumentName == null ||\n        PatternPredicate.hasWildcard(viewOptions.instrumentName))\n    ) {\n      throw new Error(\n        'Views with a specified name must be declared with an instrument selector that selects at most one instrument per meter.'\n      );\n    }\n\n    // Create AttributesProcessor if attributeKeys are defined set.\n    if (viewOptions.attributeKeys != null) {\n      this.attributesProcessor = new FilteringAttributesProcessor(\n        viewOptions.attributeKeys\n      );\n    } else {\n      this.attributesProcessor = AttributesProcessor.Noop();\n    }\n\n    this.name = viewOptions.name;\n    this.description = viewOptions.description;\n    this.aggregation = viewOptions.aggregation ?? Aggregation.Default();\n    this.instrumentSelector = new InstrumentSelector({\n      name: viewOptions.instrumentName,\n      type: viewOptions.instrumentType,\n      unit: viewOptions.instrumentUnit,\n    });\n    this.meterSelector = new MeterSelector({\n      name: viewOptions.meterName,\n      version: viewOptions.meterVersion,\n      schemaUrl: viewOptions.meterSchemaUrl,\n    });\n    this.aggregationCardinalityLimit = viewOptions.aggregationCardinalityLimit;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://tc39.es/proposal-regex-escaping\n// escape ^ $ \\ .  + ? ( ) [ ] { } |\n// do not need to escape * as we interpret it as wildcard\nconst ESCAPE = /[\\^$\\\\.+?()[\\]{}|]/g;\n\nexport interface Predicate {\n  match(str: string): boolean;\n}\n\n/**\n * Wildcard pattern predicate, supports patterns like `*`, `foo*`, `*bar`.\n */\nexport class PatternPredicate implements Predicate {\n  private _matchAll: boolean;\n  private _regexp: RegExp;\n\n  constructor(pattern: string) {\n    if (pattern === '*') {\n      this._matchAll = true;\n      this._regexp = /.*/;\n    } else {\n      this._matchAll = false;\n      this._regexp = new RegExp(PatternPredicate.escapePattern(pattern));\n    }\n  }\n\n  match(str: string): boolean {\n    if (this._matchAll) {\n      return true;\n    }\n\n    return this._regexp.test(str);\n  }\n\n  static escapePattern(pattern: string): string {\n    return `^${pattern.replace(ESCAPE, '\\\\$&').replace('*', '.*')}$`;\n  }\n\n  static hasWildcard(pattern: string): boolean {\n    return pattern.includes('*');\n  }\n}\n\nexport class ExactPredicate implements Predicate {\n  private _matchAll: boolean;\n  private _pattern?: string;\n\n  constructor(pattern?: string) {\n    this._matchAll = pattern === undefined;\n    this._pattern = pattern;\n  }\n\n  match(str: string): boolean {\n    if (this._matchAll) {\n      return true;\n    }\n    if (str === this._pattern) {\n      return true;\n    }\n    return false;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { ExactPredicate, PatternPredicate, Predicate } from './Predicate';\n\nexport interface InstrumentSelectorCriteria {\n  name?: string;\n  type?: InstrumentType;\n  unit?: string;\n}\n\nexport class InstrumentSelector {\n  private _nameFilter: Predicate;\n  private _type?: InstrumentType;\n  private _unitFilter: Predicate;\n\n  constructor(criteria?: InstrumentSelectorCriteria) {\n    this._nameFilter = new PatternPredicate(criteria?.name ?? '*');\n    this._type = criteria?.type;\n    this._unitFilter = new ExactPredicate(criteria?.unit);\n  }\n\n  getType() {\n    return this._type;\n  }\n\n  getNameFilter() {\n    return this._nameFilter;\n  }\n\n  getUnitFilter() {\n    return this._unitFilter;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExactPredicate, Predicate } from './Predicate';\n\nexport interface MeterSelectorCriteria {\n  name?: string;\n  version?: string;\n  schemaUrl?: string;\n}\n\nexport class MeterSelector {\n  private _nameFilter: Predicate;\n  private _versionFilter: Predicate;\n  private _schemaUrlFilter: Predicate;\n\n  constructor(criteria?: MeterSelectorCriteria) {\n    this._nameFilter = new ExactPredicate(criteria?.name);\n    this._versionFilter = new ExactPredicate(criteria?.version);\n    this._schemaUrlFilter = new ExactPredicate(criteria?.schemaUrl);\n  }\n\n  getNameFilter() {\n    return this._nameFilter;\n  }\n\n  /**\n   * TODO: semver filter? no spec yet.\n   */\n  getVersionFilter() {\n    return this._versionFilter;\n  }\n\n  getSchemaUrlFilter() {\n    return this._schemaUrlFilter;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { PrometheusExporter } from './PrometheusExporter';\nexport { PrometheusSerializer } from './PrometheusSerializer';\nexport { ExporterConfig } from './export/types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport {\n  Aggregation,\n  AggregationTemporality,\n  MetricReader,\n} from '@opentelemetry/sdk-metrics';\nimport { createServer, IncomingMessage, Server, ServerResponse } from 'http';\nimport { ExporterConfig } from './export/types';\nimport { PrometheusSerializer } from './PrometheusSerializer';\n/** Node.js v8.x compat */\nimport { URL } from 'url';\n\nexport class PrometheusExporter extends MetricReader {\n  static readonly DEFAULT_OPTIONS = {\n    host: undefined,\n    port: 9464,\n    endpoint: '/metrics',\n    prefix: '',\n    appendTimestamp: false,\n  };\n\n  private readonly _host?: string;\n  private readonly _port: number;\n  private readonly _baseUrl: string;\n  private readonly _endpoint: string;\n  private readonly _server: Server;\n  private readonly _prefix?: string;\n  private readonly _appendTimestamp: boolean;\n  private _serializer: PrometheusSerializer;\n  private _startServerPromise: Promise<void> | undefined;\n\n  // This will be required when histogram is implemented. Leaving here so it is not forgotten\n  // Histogram cannot have a attribute named 'le'\n  // private static readonly RESERVED_HISTOGRAM_LABEL = 'le';\n\n  /**\n   * Constructor\n   * @param config Exporter configuration\n   * @param callback Callback to be called after a server was started\n   */\n  constructor(\n    config: ExporterConfig = {},\n    callback: (error: Error | void) => void = () => {}\n  ) {\n    super({\n      aggregationSelector: _instrumentType => Aggregation.Default(),\n      aggregationTemporalitySelector: _instrumentType =>\n        AggregationTemporality.CUMULATIVE,\n      metricProducers: config.metricProducers,\n    });\n    this._host =\n      config.host ||\n      process.env.OTEL_EXPORTER_PROMETHEUS_HOST ||\n      PrometheusExporter.DEFAULT_OPTIONS.host;\n    this._port =\n      config.port ||\n      Number(process.env.OTEL_EXPORTER_PROMETHEUS_PORT) ||\n      PrometheusExporter.DEFAULT_OPTIONS.port;\n    this._prefix = config.prefix || PrometheusExporter.DEFAULT_OPTIONS.prefix;\n    this._appendTimestamp =\n      typeof config.appendTimestamp === 'boolean'\n        ? config.appendTimestamp\n        : PrometheusExporter.DEFAULT_OPTIONS.appendTimestamp;\n    // unref to prevent prometheus exporter from holding the process open on exit\n    this._server = createServer(this._requestHandler).unref();\n    this._serializer = new PrometheusSerializer(\n      this._prefix,\n      this._appendTimestamp\n    );\n\n    this._baseUrl = `http://${this._host}:${this._port}/`;\n    this._endpoint = (\n      config.endpoint || PrometheusExporter.DEFAULT_OPTIONS.endpoint\n    ).replace(/^([^/])/, '/$1');\n\n    if (config.preventServerStart !== true) {\n      this.startServer().then(callback, err => {\n        diag.error(err);\n        callback(err);\n      });\n    } else if (callback) {\n      // Do not invoke callback immediately to avoid zalgo problem.\n      queueMicrotask(callback);\n    }\n  }\n\n  override async onForceFlush(): Promise<void> {\n    /** do nothing */\n  }\n\n  /**\n   * Shuts down the export server and clears the registry\n   */\n  override onShutdown(): Promise<void> {\n    return this.stopServer();\n  }\n\n  /**\n   * Stops the Prometheus export server\n   */\n  stopServer(): Promise<void> {\n    if (!this._server) {\n      diag.debug(\n        'Prometheus stopServer() was called but server was never started.'\n      );\n      return Promise.resolve();\n    } else {\n      return new Promise(resolve => {\n        this._server.close(err => {\n          if (!err) {\n            diag.debug('Prometheus exporter was stopped');\n          } else {\n            if (\n              (err as unknown as { code: string }).code !==\n              'ERR_SERVER_NOT_RUNNING'\n            ) {\n              globalErrorHandler(err);\n            }\n          }\n          resolve();\n        });\n      });\n    }\n  }\n\n  /**\n   * Starts the Prometheus export server\n   */\n  startServer(): Promise<void> {\n    this._startServerPromise ??= new Promise((resolve, reject) => {\n      this._server.once('error', reject);\n      this._server.listen(\n        {\n          port: this._port,\n          host: this._host,\n        },\n        () => {\n          diag.debug(\n            `Prometheus exporter server started: ${this._host}:${this._port}/${this._endpoint}`\n          );\n          resolve();\n        }\n      );\n    });\n\n    return this._startServerPromise;\n  }\n\n  /**\n   * Request handler that responds with the current state of metrics\n   * @param _request Incoming HTTP request of server instance\n   * @param response HTTP response object used to response to request\n   */\n  public getMetricsRequestHandler(\n    _request: IncomingMessage,\n    response: ServerResponse\n  ): void {\n    this._exportMetrics(response);\n  }\n\n  /**\n   * Request handler used by http library to respond to incoming requests\n   * for the current state of metrics by the Prometheus backend.\n   *\n   * @param request Incoming HTTP request to export server\n   * @param response HTTP response object used to respond to request\n   */\n  private _requestHandler = (\n    request: IncomingMessage,\n    response: ServerResponse\n  ) => {\n    if (\n      request.url != null &&\n      new URL(request.url, this._baseUrl).pathname === this._endpoint\n    ) {\n      this._exportMetrics(response);\n    } else {\n      this._notFound(response);\n    }\n  };\n\n  /**\n   * Responds to incoming message with current state of all metrics.\n   */\n  private _exportMetrics = (response: ServerResponse) => {\n    response.statusCode = 200;\n    response.setHeader('content-type', 'text/plain');\n    this.collect().then(\n      collectionResult => {\n        const { resourceMetrics, errors } = collectionResult;\n        if (errors.length) {\n          diag.error(\n            'PrometheusExporter: metrics collection errors',\n            ...errors\n          );\n        }\n        response.end(this._serializer.serialize(resourceMetrics));\n      },\n      err => {\n        response.end(`# failed to export metrics: ${err}`);\n      }\n    );\n  };\n\n  /**\n   * Responds with 404 status code to all requests that do not match the configured endpoint.\n   */\n  private _notFound = (response: ServerResponse) => {\n    response.statusCode = 404;\n    response.end();\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock, Clock } from './common/anchored-clock';\nexport {\n  isAttributeKey,\n  isAttributeValue,\n  sanitizeAttributes,\n} from './common/attributes';\nexport {\n  globalErrorHandler,\n  setGlobalErrorHandler,\n} from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport {\n  addHrTimes,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMicroseconds,\n  hrTimeToMilliseconds,\n  hrTimeToNanoseconds,\n  hrTimeToTimeStamp,\n  isTimeInput,\n  isTimeInputHrTime,\n  millisToHrTime,\n  timeInputToHrTime,\n} from './common/time';\nexport {\n  ErrorHandler,\n  InstrumentationLibrary,\n  InstrumentationScope,\n  ShimWrapped,\n  TimeOriginLegacy,\n} from './common/types';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResult, ExportResultCode } from './ExportResult';\nimport {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n} from './baggage/utils';\nexport const baggageUtils = {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n};\nexport {\n  RandomIdGenerator,\n  SDK_INFO,\n  _globalThis,\n  getEnv,\n  getEnvWithoutDefaults,\n  hexToBase64,\n  otperformance,\n  unrefTimer,\n} from './platform';\nexport {\n  CompositePropagator,\n  CompositePropagatorConfig,\n} from './propagation/composite';\nexport {\n  TRACE_PARENT_HEADER,\n  TRACE_STATE_HEADER,\n  W3CTraceContextPropagator,\n  parseTraceParent,\n} from './trace/W3CTraceContextPropagator';\nexport { IdGenerator } from './trace/IdGenerator';\nexport {\n  RPCMetadata,\n  RPCType,\n  deleteRPCMetadata,\n  getRPCMetadata,\n  setRPCMetadata,\n} from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport {\n  isTracingSuppressed,\n  suppressTracing,\n  unsuppressTracing,\n} from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  DEFAULT_ENVIRONMENT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS,\n} from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue)\n      ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n      : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Clock {\n  /**\n   * Return the current time in milliseconds from some epoch such as the Unix epoch or process start\n   */\n  now(): number;\n}\n\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nexport class AnchoredClock implements Clock {\n  private _monotonicClock: Clock;\n  private _epochMillis: number;\n  private _performanceMillis: number;\n\n  /**\n   * Create a new AnchoredClock anchored to the current time returned by systemClock.\n   *\n   * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n   * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n   */\n  public constructor(systemClock: Clock, monotonicClock: Clock) {\n    this._monotonicClock = monotonicClock;\n    this._epochMillis = systemClock.now();\n    this._performanceMillis = monotonicClock.now();\n  }\n\n  /**\n   * Returns the current time by adding the number of milliseconds since the\n   * AnchoredClock was created to the creation epoch time\n   */\n  public now(): number {\n    const delta = this._monotonicClock.now() - this._performanceMillis;\n    return this._epochMillis + delta;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substring(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { getEnvWithoutDefaults, getEnv } from './environment';\nexport { _globalThis } from './globalThis';\nexport { hexToBase64 } from './hex-to-base64';\nexport { RandomIdGenerator } from './RandomIdGenerator';\nexport { otperformance } from './performance';\nexport { SDK_INFO } from './sdk-info';\nexport { unrefTimer } from './timer-util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(\n    _globalThis as typeof globalThis & RAW_ENVIRONMENT\n  );\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n\nexport function getEnvWithoutDefaults(): ENVIRONMENT {\n  return parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'] as const;\n\ntype ENVIRONMENT_BOOLEANS = {\n  [K in (typeof ENVIRONMENT_BOOLEAN_KEYS)[number]]?: boolean;\n};\n\nfunction isEnvVarABoolean(key: unknown): key is keyof ENVIRONMENT_BOOLEANS {\n  return (\n    ENVIRONMENT_BOOLEAN_KEYS.indexOf(key as keyof ENVIRONMENT_BOOLEANS) > -1\n  );\n}\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_BLRP_EXPORT_TIMEOUT',\n  'OTEL_BLRP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BLRP_MAX_QUEUE_SIZE',\n  'OTEL_BLRP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_LOGS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in (typeof ENVIRONMENT_NUMBERS_KEYS)[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n  'OTEL_SEMCONV_STABILITY_OPT_IN',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in (typeof ENVIRONMENT_LISTS_KEYS)[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_LOGS_EXPORTER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE?: string;\n} & ENVIRONMENT_BOOLEANS &\n  ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = 128;\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  OTEL_SDK_DISABLED: false,\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_BLRP_EXPORT_TIMEOUT: 30000,\n  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BLRP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  OTEL_TRACES_EXPORTER: '',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_LOGS_EXPORTER: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n  OTEL_SEMCONV_STABILITY_OPT_IN: [],\n};\n\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(\n  key: keyof ENVIRONMENT_BOOLEANS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  if (typeof values[key] === 'undefined') {\n    return;\n  }\n\n  const value = String(values[key]);\n  // support case-insensitive \"true\"\n  environment[key] = value.toLowerCase() === 'true';\n}\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarABoolean(key)) {\n          parseBoolean(key, environment, values);\n        } else if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n      ? self\n      : typeof window === 'object'\n        ? window\n        : typeof global === 'object'\n          ? global\n          : ({} as typeof globalThis);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hexToBinary } from '../../common/hex-to-binary';\n\nexport function hexToBase64(hexStr: string): string {\n  return btoa(String.fromCharCode(...hexToBinary(hexStr)));\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction intValue(charCode: number): number {\n  // 0-9\n  if (charCode >= 48 && charCode <= 57) {\n    return charCode - 48;\n  }\n\n  // a-f\n  if (charCode >= 97 && charCode <= 102) {\n    return charCode - 87;\n  }\n\n  // A-F\n  return charCode - 55;\n}\n\nexport function hexToBinary(hexStr: string): Uint8Array {\n  const buf = new Uint8Array(hexStr.length / 2);\n  let offset = 0;\n\n  for (let i = 0; i < hexStr.length; i += 2) {\n    const hi = intValue(hexStr.charCodeAt(i));\n    const lo = intValue(hexStr.charCodeAt(i + 1));\n    buf[offset++] = (hi << 4) | lo;\n  }\n\n  return buf;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IdGenerator } from '../../trace/IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_PROCESS_RUNTIME_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SEMRESATTRS_TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SEMRESATTRS_PROCESS_RUNTIME_NAME]: 'browser',\n  [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]: TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  [SEMRESATTRS_TELEMETRY_SDK_VERSION]: VERSION,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.29.0';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer: number): void {}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to extract with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey, Span } from '@opentelemetry/api';\n\nconst RPC_METADATA_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key RPC_METADATA'\n);\n\nexport enum RPCType {\n  HTTP = 'http',\n}\n\ntype HTTPMetadata = {\n  type: RPCType.HTTP;\n  route?: string;\n  span: Span;\n};\n\n/**\n * Allows for future rpc metadata to be used with this mechanism\n */\nexport type RPCMetadata = HTTPMetadata;\n\nexport function setRPCMetadata(context: Context, meta: RPCMetadata): Context {\n  return context.setValue(RPC_METADATA_KEY, meta);\n}\n\nexport function deleteRPCMetadata(context: Context): Context {\n  return context.deleteValue(RPC_METADATA_KEY);\n}\n\nexport function getRPCMetadata(context: Context): RPCMetadata | undefined {\n  return context.getValue(RPC_METADATA_KEY) as RPCMetadata | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  Sampler,\n  SamplingResult,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  isValidTraceId,\n} from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<\n    any,\n    ObjectInto[]\n  >();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return (\n    !isPrimitive(value) &&\n    !isArray(value) &&\n    !isFunction(value) &&\n    typeof value === 'object'\n  );\n}\n\nfunction isPrimitive(value: any): boolean {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null\n  );\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function (arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (\n    typeof Ctor == 'function' &&\n    Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString\n  );\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(\n  promise: Promise<T>,\n  timeout: number\n): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(\n    _resolve,\n    reject\n  ) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(\n    result => {\n      clearTimeout(timeoutHandle);\n      return result;\n    },\n    reason => {\n      clearTimeout(timeoutHandle);\n      throw reason;\n    }\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from '../common/types';\n\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport { ExportResult } from '../ExportResult';\nimport { suppressTracing } from '../trace/suppress-tracing';\n\nexport interface Exporter<T> {\n  export(arg: T, resultCallback: (result: ExportResult) => void): void;\n}\n\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppression of Traces.\n */\nexport function _export<T>(\n  exporter: Exporter<T>,\n  arg: T\n): Promise<ExportResult> {\n  return new Promise(resolve => {\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      exporter.export(arg, (result: ExportResult) => {\n        resolve(result);\n      });\n    });\n  });\n}\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","module.exports = require('events').EventEmitter;\n","\"use strict\";","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode/');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    filter: void undefined,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && key && typeof key.value !== 'undefined'\n            ? key.value\n            : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\\./g, '%2E') : String(key);\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (options.skipNulls && value === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            value,\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('.').listGetNode} */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\tfor (; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('.').listGet} */\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('.').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('.').listHas} */\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @type {WeakMap<object, unknown>} */ var $wm;\n\t/** @type {Map<object, unknown>} */ var $m;\n\t/** @type {import('.').RootNode<unknown>} */ var $o;\n\n\t/** @type {import('.').Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar test = {\n\t__proto__: null,\n\tfoo: {}\n};\n\n// @ts-expect-error: TS errors on an inherited property for some reason\nvar result = { __proto__: test }.foo === test.foo\n\t&& !(test instanceof Object);\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n\treturn result;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = require('es-errors/type');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = require('es-define-property');\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Attributes, AttributeValue } from '@opentelemetry/api';\nimport {\n  ResourceMetrics,\n  InstrumentType,\n  DataPointType,\n  ScopeMetrics,\n  MetricData,\n  DataPoint,\n  Histogram,\n} from '@opentelemetry/sdk-metrics';\nimport { hrTimeToMilliseconds } from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\n\ntype PrometheusDataTypeLiteral =\n  | 'counter'\n  | 'gauge'\n  | 'histogram'\n  | 'summary'\n  | 'untyped';\n\nfunction escapeString(str: string) {\n  return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\n/g, '\\\\n');\n}\n\n/**\n * String Attribute values are converted directly to Prometheus attribute values.\n * Non-string values are represented as JSON-encoded strings.\n *\n * `undefined` is converted to an empty string.\n */\nfunction escapeAttributeValue(str: AttributeValue = '') {\n  if (typeof str !== 'string') {\n    str = JSON.stringify(str);\n  }\n  return escapeString(str).replace(/\"/g, '\\\\\"');\n}\n\nconst invalidCharacterRegex = /[^a-z0-9_]/gi;\nconst multipleUnderscoreRegex = /_{2,}/g;\n\n/**\n * Ensures metric names are valid Prometheus metric names by removing\n * characters allowed by OpenTelemetry but disallowed by Prometheus.\n *\n * https://prometheus.io/docs/concepts/data_model/#metric-names-and-attributes\n *\n * 1. Names must match `[a-zA-Z_:][a-zA-Z0-9_:]*`\n *\n * 2. Colons are reserved for user defined recording rules.\n * They should not be used by exporters or direct instrumentation.\n *\n * OpenTelemetry metric names are already validated in the Meter when they are created,\n * and they match the format `[a-zA-Z][a-zA-Z0-9_.\\-]*` which is very close to a valid\n * prometheus metric name, so we only need to strip characters valid in OpenTelemetry\n * but not valid in prometheus and replace them with '_'.\n *\n * @param name name to be sanitized\n */\nfunction sanitizePrometheusMetricName(name: string): string {\n  // replace all invalid characters with '_'\n  return name\n    .replace(invalidCharacterRegex, '_')\n    .replace(multipleUnderscoreRegex, '_');\n}\n\n/**\n * @private\n *\n * Helper method which assists in enforcing the naming conventions for metric\n * names in Prometheus\n * @param name the name of the metric\n * @param type the kind of metric\n * @returns string\n */\nfunction enforcePrometheusNamingConvention(\n  name: string,\n  type: InstrumentType\n): string {\n  // Prometheus requires that metrics of the Counter kind have \"_total\" suffix\n  if (!name.endsWith('_total') && type === InstrumentType.COUNTER) {\n    name = name + '_total';\n  }\n\n  return name;\n}\n\nfunction valueString(value: number) {\n  if (Number.isNaN(value)) {\n    return 'NaN';\n  } else if (!Number.isFinite(value)) {\n    if (value < 0) {\n      return '-Inf';\n    } else {\n      return '+Inf';\n    }\n  } else {\n    return `${value}`;\n  }\n}\n\nfunction toPrometheusType(metricData: MetricData): PrometheusDataTypeLiteral {\n  switch (metricData.dataPointType) {\n    case DataPointType.SUM:\n      if (metricData.isMonotonic) {\n        return 'counter';\n      }\n      return 'gauge';\n    case DataPointType.GAUGE:\n      return 'gauge';\n    case DataPointType.HISTOGRAM:\n      return 'histogram';\n    default:\n      return 'untyped';\n  }\n}\n\nfunction stringify(\n  metricName: string,\n  attributes: Attributes,\n  value: number,\n  timestamp?: number,\n  additionalAttributes?: Attributes\n) {\n  let hasAttribute = false;\n  let attributesStr = '';\n\n  for (const [key, val] of Object.entries(attributes)) {\n    const sanitizedAttributeName = sanitizePrometheusMetricName(key);\n    hasAttribute = true;\n    attributesStr += `${\n      attributesStr.length > 0 ? ',' : ''\n    }${sanitizedAttributeName}=\"${escapeAttributeValue(val)}\"`;\n  }\n  if (additionalAttributes) {\n    for (const [key, val] of Object.entries(additionalAttributes)) {\n      const sanitizedAttributeName = sanitizePrometheusMetricName(key);\n      hasAttribute = true;\n      attributesStr += `${\n        attributesStr.length > 0 ? ',' : ''\n      }${sanitizedAttributeName}=\"${escapeAttributeValue(val)}\"`;\n    }\n  }\n\n  if (hasAttribute) {\n    metricName += `{${attributesStr}}`;\n  }\n\n  return `${metricName} ${valueString(value)}${\n    timestamp !== undefined ? ' ' + String(timestamp) : ''\n  }\\n`;\n}\n\nconst NO_REGISTERED_METRICS = '# no registered metrics';\n\nexport class PrometheusSerializer {\n  private _prefix: string | undefined;\n  private _appendTimestamp: boolean;\n\n  constructor(prefix?: string, appendTimestamp = false) {\n    if (prefix) {\n      this._prefix = prefix + '_';\n    }\n    this._appendTimestamp = appendTimestamp;\n  }\n\n  serialize(resourceMetrics: ResourceMetrics): string {\n    let str = '';\n\n    for (const scopeMetrics of resourceMetrics.scopeMetrics) {\n      str += this._serializeScopeMetrics(scopeMetrics);\n    }\n\n    if (str === '') {\n      str += NO_REGISTERED_METRICS;\n    }\n\n    return this._serializeResource(resourceMetrics.resource) + str;\n  }\n\n  private _serializeScopeMetrics(scopeMetrics: ScopeMetrics) {\n    let str = '';\n    for (const metric of scopeMetrics.metrics) {\n      str += this._serializeMetricData(metric) + '\\n';\n    }\n    return str;\n  }\n\n  private _serializeMetricData(metricData: MetricData) {\n    let name = sanitizePrometheusMetricName(\n      escapeString(metricData.descriptor.name)\n    );\n    if (this._prefix) {\n      name = `${this._prefix}${name}`;\n    }\n    const dataPointType = metricData.dataPointType;\n\n    name = enforcePrometheusNamingConvention(name, metricData.descriptor.type);\n\n    const help = `# HELP ${name} ${escapeString(\n      metricData.descriptor.description || 'description missing'\n    )}`;\n    const unit = metricData.descriptor.unit\n      ? `\\n# UNIT ${name} ${escapeString(metricData.descriptor.unit)}`\n      : '';\n    const type = `# TYPE ${name} ${toPrometheusType(metricData)}`;\n\n    let results = '';\n    switch (dataPointType) {\n      case DataPointType.SUM:\n      case DataPointType.GAUGE: {\n        results = metricData.dataPoints\n          .map(it =>\n            this._serializeSingularDataPoint(\n              name,\n              metricData.descriptor.type,\n              it\n            )\n          )\n          .join('');\n        break;\n      }\n      case DataPointType.HISTOGRAM: {\n        results = metricData.dataPoints\n          .map(it =>\n            this._serializeHistogramDataPoint(\n              name,\n              metricData.descriptor.type,\n              it\n            )\n          )\n          .join('');\n        break;\n      }\n      default: {\n        diag.error(\n          `Unrecognizable DataPointType: ${dataPointType} for metric \"${name}\"`\n        );\n      }\n    }\n\n    return `${help}${unit}\\n${type}\\n${results}`.trim();\n  }\n\n  private _serializeSingularDataPoint(\n    name: string,\n    type: InstrumentType,\n    dataPoint: DataPoint<number>\n  ): string {\n    let results = '';\n\n    name = enforcePrometheusNamingConvention(name, type);\n    const { value, attributes } = dataPoint;\n    const timestamp = hrTimeToMilliseconds(dataPoint.endTime);\n    results += stringify(\n      name,\n      attributes,\n      value,\n      this._appendTimestamp ? timestamp : undefined,\n      undefined\n    );\n    return results;\n  }\n\n  private _serializeHistogramDataPoint(\n    name: string,\n    type: InstrumentType,\n    dataPoint: DataPoint<Histogram>\n  ): string {\n    let results = '';\n\n    name = enforcePrometheusNamingConvention(name, type);\n    const attributes = dataPoint.attributes;\n    const histogram = dataPoint.value;\n    const timestamp = hrTimeToMilliseconds(dataPoint.endTime);\n    /** Histogram[\"bucket\"] is not typed with `number` */\n    for (const key of ['count', 'sum'] as ('count' | 'sum')[]) {\n      const value = histogram[key];\n      if (value != null)\n        results += stringify(\n          name + '_' + key,\n          attributes,\n          value,\n          this._appendTimestamp ? timestamp : undefined,\n          undefined\n        );\n    }\n\n    let cumulativeSum = 0;\n    const countEntries = histogram.buckets.counts.entries();\n    let infiniteBoundaryDefined = false;\n    for (const [idx, val] of countEntries) {\n      cumulativeSum += val;\n      const upperBound = histogram.buckets.boundaries[idx];\n      /** HistogramAggregator is producing different boundary output -\n       * in one case not including infinity values, in other -\n       * full, e.g. [0, 100] and [0, 100, Infinity]\n       * we should consider that in export, if Infinity is defined, use it\n       * as boundary\n       */\n      if (upperBound === undefined && infiniteBoundaryDefined) {\n        break;\n      }\n      if (upperBound === Infinity) {\n        infiniteBoundaryDefined = true;\n      }\n      results += stringify(\n        name + '_bucket',\n        attributes,\n        cumulativeSum,\n        this._appendTimestamp ? timestamp : undefined,\n        {\n          le:\n            upperBound === undefined || upperBound === Infinity\n              ? '+Inf'\n              : String(upperBound),\n        }\n      );\n    }\n\n    return results;\n  }\n\n  protected _serializeResource(resource: IResource): string {\n    const name = 'target_info';\n    const help = `# HELP ${name} Target metadata`;\n    const type = `# TYPE ${name} gauge`;\n\n    const results = stringify(name, resource.attributes, 1).trim();\n    return `${help}\\n${type}\\n${results}\\n`;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  XHRCustomAttributeFunction,\n  XMLHttpRequestInstrumentation,\n  XMLHttpRequestInstrumentationConfig,\n} from './xhr';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationConfig,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { hrTime, isUrlIgnored, otperformance } from '@opentelemetry/core';\nimport {\n  SEMATTRS_HTTP_HOST,\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_SCHEME,\n  SEMATTRS_HTTP_STATUS_CODE,\n  SEMATTRS_HTTP_URL,\n  SEMATTRS_HTTP_USER_AGENT,\n  SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  addSpanNetworkEvents,\n  getResource,\n  PerformanceTimingNames as PTN,\n  shouldPropagateTraceHeaders,\n  parseUrl,\n} from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nimport {\n  OpenFunction,\n  PropagateTraceHeaderCorsUrls,\n  SendFunction,\n  XhrMem,\n} from './types';\nimport { getXHRBodyLength } from './utils';\nimport { VERSION } from './version';\nimport { AttributeNames } from './enums/AttributeNames';\n\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\n\nexport type XHRCustomAttributeFunction = (\n  span: api.Span,\n  xhr: XMLHttpRequest\n) => void;\n\n/**\n * XMLHttpRequest config\n */\nexport interface XMLHttpRequestInstrumentationConfig\n  extends InstrumentationConfig {\n  /**\n   * The number of timing resources is limited, after the limit\n   * (chrome 250, safari 150) the information is not collected anymore.\n   * The only way to prevent that is to regularly clean the resources\n   * whenever it is possible. This is needed only when PerformanceObserver\n   * is not available\n   */\n  clearTimingResources?: boolean;\n  /** URLs which should include trace headers when origin doesn't match */\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls;\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  ignoreUrls?: Array<string | RegExp>;\n  /** Function for adding custom attributes on the span */\n  applyCustomAttributesOnSpan?: XHRCustomAttributeFunction;\n  /** Ignore adding network events as span events */\n  ignoreNetworkEvents?: boolean;\n  /** Measure outgoing request size */\n  measureRequestSize?: boolean;\n}\n\n/**\n * This class represents a XMLHttpRequest plugin for auto instrumentation\n */\nexport class XMLHttpRequestInstrumentation extends InstrumentationBase<XMLHttpRequestInstrumentationConfig> {\n  readonly component: string = 'xml-http-request';\n  readonly version: string = VERSION;\n  moduleName = this.component;\n\n  private _tasksCount = 0;\n  private _xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n  private _usedResources = new WeakSet<PerformanceResourceTiming>();\n\n  constructor(config: XMLHttpRequestInstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-xml-http-request', VERSION, config);\n  }\n\n  init() {}\n\n  /**\n   * Adds custom headers to XMLHttpRequest\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  private _addHeaders(xhr: XMLHttpRequest, spanUrl: string) {\n    const url = parseUrl(spanUrl).href;\n    if (\n      !shouldPropagateTraceHeaders(\n        url,\n        this.getConfig().propagateTraceHeaderCorsUrls\n      )\n    ) {\n      const headers: Partial<Record<string, unknown>> = {};\n      api.propagation.inject(api.context.active(), headers);\n      if (Object.keys(headers).length > 0) {\n        this._diag.debug('headers inject skipped due to CORS policy');\n      }\n      return;\n    }\n    const headers: { [key: string]: unknown } = {};\n    api.propagation.inject(api.context.active(), headers);\n    Object.keys(headers).forEach(key => {\n      xhr.setRequestHeader(key, String(headers[key]));\n    });\n  }\n\n  /**\n   * Add cors pre flight child span\n   * @param span\n   * @param corsPreFlightRequest\n   * @private\n   */\n  private _addChildSpan(\n    span: api.Span,\n    corsPreFlightRequest: PerformanceResourceTiming\n  ): void {\n    api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n      const childSpan = this.tracer.startSpan('CORS Preflight', {\n        startTime: corsPreFlightRequest[PTN.FETCH_START],\n      });\n      if (!this.getConfig().ignoreNetworkEvents) {\n        addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n      }\n      childSpan.end(corsPreFlightRequest[PTN.RESPONSE_END]);\n    });\n  }\n\n  /**\n   * Add attributes when span is going to end\n   * @param span\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  _addFinalSpanAttributes(span: api.Span, xhrMem: XhrMem, spanUrl?: string) {\n    if (typeof spanUrl === 'string') {\n      const parsedUrl = parseUrl(spanUrl);\n      if (xhrMem.status !== undefined) {\n        span.setAttribute(SEMATTRS_HTTP_STATUS_CODE, xhrMem.status);\n      }\n      if (xhrMem.statusText !== undefined) {\n        span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, xhrMem.statusText);\n      }\n      span.setAttribute(SEMATTRS_HTTP_HOST, parsedUrl.host);\n      span.setAttribute(\n        SEMATTRS_HTTP_SCHEME,\n        parsedUrl.protocol.replace(':', '')\n      );\n\n      // @TODO do we want to collect this or it will be collected earlier once only or\n      //    maybe when parent span is not available ?\n      span.setAttribute(SEMATTRS_HTTP_USER_AGENT, navigator.userAgent);\n    }\n  }\n\n  private _applyAttributesAfterXHR(span: api.Span, xhr: XMLHttpRequest) {\n    const applyCustomAttributesOnSpan =\n      this.getConfig().applyCustomAttributesOnSpan;\n    if (typeof applyCustomAttributesOnSpan === 'function') {\n      safeExecuteInTheMiddle(\n        () => applyCustomAttributesOnSpan(span, xhr),\n        error => {\n          if (!error) {\n            return;\n          }\n\n          this._diag.error('applyCustomAttributesOnSpan', error);\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * will collect information about all resources created\n   * between \"send\" and \"end\" with additional waiting for main resource\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  private _addResourceObserver(xhr: XMLHttpRequest, spanUrl: string) {\n    const xhrMem = this._xhrMem.get(xhr);\n    if (\n      !xhrMem ||\n      typeof PerformanceObserver !== 'function' ||\n      typeof PerformanceResourceTiming !== 'function'\n    ) {\n      return;\n    }\n    xhrMem.createdResources = {\n      observer: new PerformanceObserver(list => {\n        const entries = list.getEntries() as PerformanceResourceTiming[];\n        const parsedUrl = parseUrl(spanUrl);\n\n        entries.forEach(entry => {\n          if (\n            entry.initiatorType === 'xmlhttprequest' &&\n            entry.name === parsedUrl.href\n          ) {\n            if (xhrMem.createdResources) {\n              xhrMem.createdResources.entries.push(entry);\n            }\n          }\n        });\n      }),\n      entries: [],\n    };\n    xhrMem.createdResources.observer.observe({\n      entryTypes: ['resource'],\n    });\n  }\n\n  /**\n   * Clears the resource timings and all resources assigned with spans\n   *     when {@link XMLHttpRequestInstrumentationConfig.clearTimingResources} is\n   *     set to true (default false)\n   * @private\n   */\n  private _clearResources() {\n    if (this._tasksCount === 0 && this.getConfig().clearTimingResources) {\n      (otperformance as unknown as Performance).clearResourceTimings();\n      this._xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n      this._usedResources = new WeakSet<PerformanceResourceTiming>();\n    }\n  }\n\n  /**\n   * Finds appropriate resource and add network events to the span\n   * @param span\n   */\n  private _findResourceAndAddNetworkEvents(\n    xhrMem: XhrMem,\n    span: api.Span,\n    spanUrl?: string,\n    startTime?: api.HrTime,\n    endTime?: api.HrTime\n  ): void {\n    if (!spanUrl || !startTime || !endTime || !xhrMem.createdResources) {\n      return;\n    }\n\n    let resources: PerformanceResourceTiming[] =\n      xhrMem.createdResources.entries;\n\n    if (!resources || !resources.length) {\n      // fallback - either Observer is not available or it took longer\n      // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n      // information\n      // ts thinks this is the perf_hooks module, but it is the browser performance api\n      resources = (otperformance as unknown as Performance).getEntriesByType(\n        'resource'\n      ) as PerformanceResourceTiming[];\n    }\n\n    const resource = getResource(\n      parseUrl(spanUrl).href,\n      startTime,\n      endTime,\n      resources,\n      this._usedResources\n    );\n\n    if (resource.mainRequest) {\n      const mainRequest = resource.mainRequest;\n      this._markResourceAsUsed(mainRequest);\n\n      const corsPreFlightRequest = resource.corsPreFlightRequest;\n      if (corsPreFlightRequest) {\n        this._addChildSpan(span, corsPreFlightRequest);\n        this._markResourceAsUsed(corsPreFlightRequest);\n      }\n      if (!this.getConfig().ignoreNetworkEvents) {\n        addSpanNetworkEvents(span, mainRequest);\n      }\n    }\n  }\n\n  /**\n   * Removes the previous information about span.\n   * This might happened when the same xhr is used again.\n   * @param xhr\n   * @private\n   */\n  private _cleanPreviousSpanInformation(xhr: XMLHttpRequest) {\n    const xhrMem = this._xhrMem.get(xhr);\n    if (xhrMem) {\n      const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n      if (callbackToRemoveEvents) {\n        callbackToRemoveEvents();\n      }\n      this._xhrMem.delete(xhr);\n    }\n  }\n\n  /**\n   * Creates a new span when method \"open\" is called\n   * @param xhr\n   * @param url\n   * @param method\n   * @private\n   */\n  private _createSpan(\n    xhr: XMLHttpRequest,\n    url: string,\n    method: string\n  ): api.Span | undefined {\n    if (isUrlIgnored(url, this.getConfig().ignoreUrls)) {\n      this._diag.debug('ignoring span as url matches ignored url');\n      return;\n    }\n    const spanName = method.toUpperCase();\n\n    const currentSpan = this.tracer.startSpan(spanName, {\n      kind: api.SpanKind.CLIENT,\n      attributes: {\n        [SEMATTRS_HTTP_METHOD]: method,\n        [SEMATTRS_HTTP_URL]: parseUrl(url).toString(),\n      },\n    });\n\n    currentSpan.addEvent(EventNames.METHOD_OPEN);\n\n    this._cleanPreviousSpanInformation(xhr);\n\n    this._xhrMem.set(xhr, {\n      span: currentSpan,\n      spanUrl: url,\n    });\n\n    return currentSpan;\n  }\n\n  /**\n   * Marks certain [resource]{@link PerformanceResourceTiming} when information\n   * from this is used to add events to span.\n   * This is done to avoid reusing the same resource again for next span\n   * @param resource\n   * @private\n   */\n  private _markResourceAsUsed(resource: PerformanceResourceTiming) {\n    this._usedResources.add(resource);\n  }\n\n  /**\n   * Patches the method open\n   * @private\n   */\n  protected _patchOpen() {\n    return (original: OpenFunction): OpenFunction => {\n      const plugin = this;\n      return function patchOpen(this: XMLHttpRequest, ...args): void {\n        const method: string = args[0];\n        const url: string = args[1];\n        plugin._createSpan(this, url, method);\n\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  /**\n   * Patches the method send\n   * @private\n   */\n  protected _patchSend() {\n    const plugin = this;\n\n    function endSpanTimeout(\n      eventName: string,\n      xhrMem: XhrMem,\n      performanceEndTime: api.HrTime,\n      endTime: number\n    ) {\n      const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n\n      if (typeof callbackToRemoveEvents === 'function') {\n        callbackToRemoveEvents();\n      }\n\n      const { span, spanUrl, sendStartTime } = xhrMem;\n\n      if (span) {\n        plugin._findResourceAndAddNetworkEvents(\n          xhrMem,\n          span,\n          spanUrl,\n          sendStartTime,\n          performanceEndTime\n        );\n        span.addEvent(eventName, endTime);\n        plugin._addFinalSpanAttributes(span, xhrMem, spanUrl);\n        span.end(endTime);\n        plugin._tasksCount--;\n      }\n      plugin._clearResources();\n    }\n\n    function endSpan(eventName: string, xhr: XMLHttpRequest) {\n      const xhrMem = plugin._xhrMem.get(xhr);\n      if (!xhrMem) {\n        return;\n      }\n      xhrMem.status = xhr.status;\n      xhrMem.statusText = xhr.statusText;\n      plugin._xhrMem.delete(xhr);\n\n      if (xhrMem.span) {\n        plugin._applyAttributesAfterXHR(xhrMem.span, xhr);\n      }\n      const performanceEndTime = hrTime();\n      const endTime = Date.now();\n\n      // the timeout is needed as observer doesn't have yet information\n      // when event \"load\" is called. Also the time may differ depends on\n      // browser and speed of computer\n      setTimeout(() => {\n        endSpanTimeout(eventName, xhrMem, performanceEndTime, endTime);\n      }, OBSERVER_WAIT_TIME_MS);\n    }\n\n    function onError(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_ERROR, this);\n    }\n\n    function onAbort(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_ABORT, this);\n    }\n\n    function onTimeout(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_TIMEOUT, this);\n    }\n\n    function onLoad(this: XMLHttpRequest) {\n      if (this.status < 299) {\n        endSpan(EventNames.EVENT_LOAD, this);\n      } else {\n        endSpan(EventNames.EVENT_ERROR, this);\n      }\n    }\n\n    function unregister(xhr: XMLHttpRequest) {\n      xhr.removeEventListener('abort', onAbort);\n      xhr.removeEventListener('error', onError);\n      xhr.removeEventListener('load', onLoad);\n      xhr.removeEventListener('timeout', onTimeout);\n      const xhrMem = plugin._xhrMem.get(xhr);\n      if (xhrMem) {\n        xhrMem.callbackToRemoveEvents = undefined;\n      }\n    }\n\n    return (original: SendFunction): SendFunction => {\n      return function patchSend(this: XMLHttpRequest, ...args): void {\n        const xhrMem = plugin._xhrMem.get(this);\n        if (!xhrMem) {\n          return original.apply(this, args);\n        }\n        const currentSpan = xhrMem.span;\n        const spanUrl = xhrMem.spanUrl;\n\n        if (currentSpan && spanUrl) {\n          if (plugin.getConfig().measureRequestSize && args?.[0]) {\n            const body = args[0];\n            const bodyLength = getXHRBodyLength(body);\n            if (bodyLength !== undefined) {\n              currentSpan.setAttribute(\n                SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n                bodyLength\n              );\n            }\n          }\n\n          api.context.with(\n            api.trace.setSpan(api.context.active(), currentSpan),\n            () => {\n              plugin._tasksCount++;\n              xhrMem.sendStartTime = hrTime();\n              currentSpan.addEvent(EventNames.METHOD_SEND);\n\n              this.addEventListener('abort', onAbort);\n              this.addEventListener('error', onError);\n              this.addEventListener('load', onLoad);\n              this.addEventListener('timeout', onTimeout);\n\n              xhrMem.callbackToRemoveEvents = () => {\n                unregister(this);\n                if (xhrMem.createdResources) {\n                  xhrMem.createdResources.observer.disconnect();\n                }\n              };\n              plugin._addHeaders(this, spanUrl);\n              plugin._addResourceObserver(this, spanUrl);\n            }\n          );\n        }\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  /**\n   * implements enable function\n   */\n  override enable() {\n    this._diag.debug('applying patch to', this.moduleName, this.version);\n\n    if (isWrapped(XMLHttpRequest.prototype.open)) {\n      this._unwrap(XMLHttpRequest.prototype, 'open');\n      this._diag.debug('removing previous patch from method open');\n    }\n\n    if (isWrapped(XMLHttpRequest.prototype.send)) {\n      this._unwrap(XMLHttpRequest.prototype, 'send');\n      this._diag.debug('removing previous patch from method send');\n    }\n\n    this._wrap(XMLHttpRequest.prototype, 'open', this._patchOpen());\n    this._wrap(XMLHttpRequest.prototype, 'send', this._patchSend());\n  }\n\n  /**\n   * implements disable function\n   */\n  override disable() {\n    this._diag.debug('removing patch from', this.moduleName, this.version);\n\n    this._unwrap(XMLHttpRequest.prototype, 'open');\n    this._unwrap(XMLHttpRequest.prototype, 'send');\n\n    this._tasksCount = 0;\n    this._xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n    this._usedResources = new WeakSet<PerformanceResourceTiming>();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { registerInstrumentations } from './autoLoader';\nexport { InstrumentationBase } from './platform/index';\nexport { InstrumentationNodeModuleDefinition } from './instrumentationNodeModuleDefinition';\nexport { InstrumentationNodeModuleFile } from './instrumentationNodeModuleFile';\nexport {\n  Instrumentation,\n  InstrumentationConfig,\n  InstrumentationModuleDefinition,\n  InstrumentationModuleFile,\n  ShimWrapped,\n  SpanCustomizationHook,\n} from './types';\nexport { AutoLoaderOptions, AutoLoaderResult } from './types_internal';\nexport {\n  isWrapped,\n  safeExecuteInTheMiddle,\n  safeExecuteInTheMiddleAsync,\n} from './utils';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { InstrumentationBase } from './instrumentation';\nexport { normalize } from './noop-normalize';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationAbstract } from '../../instrumentation';\nimport * as types from '../../types';\nimport { InstrumentationConfig } from '../../types';\n\n/**\n * Base abstract class for instrumenting web plugins\n */\nexport abstract class InstrumentationBase<\n    ConfigType extends InstrumentationConfig = InstrumentationConfig,\n  >\n  extends InstrumentationAbstract<ConfigType>\n  implements types.Instrumentation<ConfigType>\n{\n  constructor(\n    instrumentationName: string,\n    instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    super(instrumentationName, instrumentationVersion, config);\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  DiagLogger,\n  metrics,\n  Meter,\n  MeterProvider,\n  trace,\n  Tracer,\n  TracerProvider,\n  Span,\n} from '@opentelemetry/api';\nimport { Logger, LoggerProvider, logs } from '@opentelemetry/api-logs';\nimport * as shimmer from 'shimmer';\nimport {\n  InstrumentationModuleDefinition,\n  Instrumentation,\n  InstrumentationConfig,\n  SpanCustomizationHook,\n} from './types';\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nexport abstract class InstrumentationAbstract<\n  ConfigType extends InstrumentationConfig = InstrumentationConfig,\n> implements Instrumentation<ConfigType>\n{\n  protected _config: ConfigType = {} as ConfigType;\n\n  private _tracer: Tracer;\n  private _meter: Meter;\n  private _logger: Logger;\n  protected _diag: DiagLogger;\n\n  constructor(\n    public readonly instrumentationName: string,\n    public readonly instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    this.setConfig(config);\n\n    this._diag = diag.createComponentLogger({\n      namespace: instrumentationName,\n    });\n\n    this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n    this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n    this._logger = logs.getLogger(instrumentationName, instrumentationVersion);\n    this._updateMetricInstruments();\n  }\n\n  /* Api to wrap instrumented method */\n  protected _wrap = shimmer.wrap;\n  /* Api to unwrap instrumented methods */\n  protected _unwrap = shimmer.unwrap;\n  /* Api to mass wrap instrumented method */\n  protected _massWrap = shimmer.massWrap;\n  /* Api to mass unwrap instrumented methods */\n  protected _massUnwrap = shimmer.massUnwrap;\n\n  /* Returns meter */\n  protected get meter(): Meter {\n    return this._meter;\n  }\n\n  /**\n   * Sets MeterProvider to this plugin\n   * @param meterProvider\n   */\n  public setMeterProvider(meterProvider: MeterProvider): void {\n    this._meter = meterProvider.getMeter(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n\n    this._updateMetricInstruments();\n  }\n\n  /* Returns logger */\n  protected get logger(): Logger {\n    return this._logger;\n  }\n\n  /**\n   * Sets LoggerProvider to this plugin\n   * @param loggerProvider\n   */\n  public setLoggerProvider(loggerProvider: LoggerProvider): void {\n    this._logger = loggerProvider.getLogger(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /**\n   * @experimental\n   *\n   * Get module definitions defined by {@link init}.\n   * This can be used for experimental compile-time instrumentation.\n   *\n   * @returns an array of {@link InstrumentationModuleDefinition}\n   */\n  public getModuleDefinitions(): InstrumentationModuleDefinition[] {\n    const initResult = this.init() ?? [];\n    if (!Array.isArray(initResult)) {\n      return [initResult];\n    }\n\n    return initResult;\n  }\n\n  /**\n   * Sets the new metric instruments with the current Meter.\n   */\n  protected _updateMetricInstruments(): void {\n    return;\n  }\n\n  /* Returns InstrumentationConfig */\n  public getConfig(): ConfigType {\n    return this._config;\n  }\n\n  /**\n   * Sets InstrumentationConfig to this plugin\n   * @param config\n   */\n  public setConfig(config: ConfigType): void {\n    // copy config first level properties to ensure they are immutable.\n    // nested properties are not copied, thus are mutable from the outside.\n    this._config = {\n      enabled: true,\n      ...config,\n    };\n  }\n\n  /**\n   * Sets TraceProvider to this plugin\n   * @param tracerProvider\n   */\n  public setTracerProvider(tracerProvider: TracerProvider): void {\n    this._tracer = tracerProvider.getTracer(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /* Returns tracer */\n  protected get tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /* Enable plugin */\n  public abstract enable(): void;\n\n  /* Disable plugin */\n  public abstract disable(): void;\n\n  /**\n   * Init method in which plugin should define _modules and patches for\n   * methods.\n   */\n  protected abstract init():\n    | InstrumentationModuleDefinition\n    | InstrumentationModuleDefinition[]\n    | void;\n\n  /**\n   * Execute span customization hook, if configured, and log any errors.\n   * Any semantics of the trigger and info are defined by the specific instrumentation.\n   * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n   * @param triggerName The name of the trigger for executing the hook for logging purposes\n   * @param span The span to which the hook should be applied\n   * @param info The info object to be passed to the hook, with useful data the hook may use\n   */\n  protected _runSpanCustomizationHook<SpanCustomizationInfoType>(\n    hookHandler: SpanCustomizationHook<SpanCustomizationInfoType> | undefined,\n    triggerName: string,\n    span: Span,\n    info: SpanCustomizationInfoType\n  ) {\n    if (!hookHandler) {\n      return;\n    }\n\n    try {\n      hookHandler(span, info);\n    } catch (e) {\n      this._diag.error(\n        `Error running span customization hook due to exception in handler`,\n        { triggerName },\n        e\n      );\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Logger } from './types/Logger';\nexport { LoggerProvider } from './types/LoggerProvider';\nexport {\n  LogAttributes,\n  LogBody,\n  LogRecord,\n  SeverityNumber,\n} from './types/LogRecord';\nexport { LoggerOptions } from './types/LoggerOptions';\nexport { AnyValue, AnyValueMap } from './types/AnyValue';\nexport { NOOP_LOGGER, NoopLogger } from './NoopLogger';\nexport { NOOP_LOGGER_PROVIDER, NoopLoggerProvider } from './NoopLoggerProvider';\nexport { ProxyLogger } from './ProxyLogger';\nexport { ProxyLoggerProvider } from './ProxyLoggerProvider';\n\nimport { LogsAPI } from './api/logs';\nexport const logs = LogsAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './types/Logger';\nimport { LogRecord } from './types/LogRecord';\n\nexport class NoopLogger implements Logger {\n  emit(_logRecord: LogRecord): void {}\n}\n\nexport const NOOP_LOGGER = new NoopLogger();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NoopLogger } from './NoopLogger';\n\nexport class NoopLoggerProvider implements LoggerProvider {\n  getLogger(\n    _name: string,\n    _version?: string | undefined,\n    _options?: LoggerOptions | undefined\n  ): Logger {\n    return new NoopLogger();\n  }\n}\n\nexport const NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NOOP_LOGGER } from './NoopLogger';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { LogRecord } from './types/LogRecord';\n\nexport class ProxyLogger implements Logger {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Logger;\n\n  constructor(\n    private _provider: LoggerDelegator,\n    public readonly name: string,\n    public readonly version?: string | undefined,\n    public readonly options?: LoggerOptions | undefined\n  ) {}\n\n  /**\n   * Emit a log record. This method should only be used by log appenders.\n   *\n   * @param logRecord\n   */\n  emit(logRecord: LogRecord): void {\n    this._getLogger().emit(logRecord);\n  }\n\n  /**\n   * Try to get a logger from the proxy logger provider.\n   * If the proxy logger provider has no delegate, return a noop logger.\n   */\n  private _getLogger() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n    const logger = this._provider.getDelegateLogger(\n      this.name,\n      this.version,\n      this.options\n    );\n    if (!logger) {\n      return NOOP_LOGGER;\n    }\n    this._delegate = logger;\n    return this._delegate;\n  }\n}\n\nexport interface LoggerDelegator {\n  getDelegateLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NOOP_LOGGER_PROVIDER } from './NoopLoggerProvider';\nimport { ProxyLogger } from './ProxyLogger';\n\nexport class ProxyLoggerProvider implements LoggerProvider {\n  private _delegate?: LoggerProvider;\n\n  getLogger(\n    name: string,\n    version?: string | undefined,\n    options?: LoggerOptions | undefined\n  ): Logger {\n    return (\n      this.getDelegateLogger(name, version, options) ??\n      new ProxyLogger(this, name, version, options)\n    );\n  }\n\n  getDelegate(): LoggerProvider {\n    return this._delegate ?? NOOP_LOGGER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate logger provider\n   */\n  setDelegate(delegate: LoggerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateLogger(\n    name: string,\n    version?: string | undefined,\n    options?: LoggerOptions | undefined\n  ): Logger | undefined {\n    return this._delegate?.getLogger(name, version, options);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_LOGS_API_KEY,\n  _global,\n  makeGetter,\n} from '../internal/global-utils';\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { Logger } from '../types/Logger';\nimport { LoggerOptions } from '../types/LoggerOptions';\nimport { ProxyLoggerProvider } from '../ProxyLoggerProvider';\n\nexport class LogsAPI {\n  private static _instance?: LogsAPI;\n\n  private _proxyLoggerProvider = new ProxyLoggerProvider();\n\n  private constructor() {}\n\n  public static getInstance(): LogsAPI {\n    if (!this._instance) {\n      this._instance = new LogsAPI();\n    }\n\n    return this._instance;\n  }\n\n  public setGlobalLoggerProvider(provider: LoggerProvider): LoggerProvider {\n    if (_global[GLOBAL_LOGS_API_KEY]) {\n      return this.getLoggerProvider();\n    }\n\n    _global[GLOBAL_LOGS_API_KEY] = makeGetter<LoggerProvider>(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_LOGGER_PROVIDER\n    );\n    this._proxyLoggerProvider.setDelegate(provider);\n\n    return provider;\n  }\n\n  /**\n   * Returns the global logger provider.\n   *\n   * @returns LoggerProvider\n   */\n  public getLoggerProvider(): LoggerProvider {\n    return (\n      _global[GLOBAL_LOGS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      this._proxyLoggerProvider\n    );\n  }\n\n  /**\n   * Returns a logger from the global logger provider.\n   *\n   * @returns Logger\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger {\n    return this.getLoggerProvider().getLogger(name, version, options);\n  }\n\n  /** Remove the global logger provider */\n  public disable(): void {\n    delete _global[GLOBAL_LOGS_API_KEY];\n    this._proxyLoggerProvider = new ProxyLoggerProvider();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_LOGS_API_KEY]: Get<LoggerProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { _globalThis } from './globalThis';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n      ? self\n      : typeof window === 'object'\n        ? window\n        : typeof global === 'object'\n          ? global\n          : ({} as typeof globalThis);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from './types';\n\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): T {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport async function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock, Clock } from './common/anchored-clock';\nexport {\n  isAttributeKey,\n  isAttributeValue,\n  sanitizeAttributes,\n} from './common/attributes';\nexport {\n  globalErrorHandler,\n  setGlobalErrorHandler,\n} from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport {\n  addHrTimes,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMicroseconds,\n  hrTimeToMilliseconds,\n  hrTimeToNanoseconds,\n  hrTimeToTimeStamp,\n  isTimeInput,\n  isTimeInputHrTime,\n  millisToHrTime,\n  timeInputToHrTime,\n} from './common/time';\nexport {\n  ErrorHandler,\n  InstrumentationLibrary,\n  InstrumentationScope,\n  ShimWrapped,\n  TimeOriginLegacy,\n} from './common/types';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResult, ExportResultCode } from './ExportResult';\nimport {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n} from './baggage/utils';\nexport const baggageUtils = {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n};\nexport {\n  RandomIdGenerator,\n  SDK_INFO,\n  _globalThis,\n  getEnv,\n  getEnvWithoutDefaults,\n  hexToBase64,\n  otperformance,\n  unrefTimer,\n} from './platform';\nexport {\n  CompositePropagator,\n  CompositePropagatorConfig,\n} from './propagation/composite';\nexport {\n  TRACE_PARENT_HEADER,\n  TRACE_STATE_HEADER,\n  W3CTraceContextPropagator,\n  parseTraceParent,\n} from './trace/W3CTraceContextPropagator';\nexport { IdGenerator } from './trace/IdGenerator';\nexport {\n  RPCMetadata,\n  RPCType,\n  deleteRPCMetadata,\n  getRPCMetadata,\n  setRPCMetadata,\n} from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport {\n  isTracingSuppressed,\n  suppressTracing,\n  unsuppressTracing,\n} from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  DEFAULT_ENVIRONMENT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substring(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { getEnvWithoutDefaults, getEnv } from './environment';\nexport { _globalThis } from './globalThis';\nexport { hexToBase64 } from './hex-to-base64';\nexport { RandomIdGenerator } from './RandomIdGenerator';\nexport { otperformance } from './performance';\nexport { SDK_INFO } from './sdk-info';\nexport { unrefTimer } from './timer-util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum EventNames {\n  METHOD_OPEN = 'open',\n  METHOD_SEND = 'send',\n  EVENT_ABORT = 'abort',\n  EVENT_ERROR = 'error',\n  EVENT_LOAD = 'loaded',\n  EVENT_TIMEOUT = 'timeout',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Much of the logic here overlaps with the same utils file in opentelemetry-instrumentation-fetch\n// These may be unified in the future.\n\nimport * as api from '@opentelemetry/api';\n\nconst DIAG_LOGGER = api.diag.createComponentLogger({\n  namespace:\n    '@opentelemetry/opentelemetry-instrumentation-xml-http-request/utils',\n});\n\n/**\n * Helper function to determine payload content length for XHR requests\n * @param body\n * @returns content length\n */\nexport function getXHRBodyLength(\n  body: Document | XMLHttpRequestBodyInit\n): number | undefined {\n  if (typeof Document !== 'undefined' && body instanceof Document) {\n    return new XMLSerializer().serializeToString(document).length;\n  }\n  // XMLHttpRequestBodyInit expands to the following:\n  if (body instanceof Blob) {\n    return body.size;\n  }\n\n  // ArrayBuffer | ArrayBufferView\n  if ((body as any).byteLength !== undefined) {\n    return (body as any).byteLength as number;\n  }\n\n  if (body instanceof FormData) {\n    return getFormDataSize(body);\n  }\n\n  if (body instanceof URLSearchParams) {\n    return getByteLength(body.toString());\n  }\n\n  if (typeof body === 'string') {\n    return getByteLength(body);\n  }\n\n  DIAG_LOGGER.warn('unknown body type');\n  return undefined;\n}\n\nconst TEXT_ENCODER = new TextEncoder();\nfunction getByteLength(s: string): number {\n  return TEXT_ENCODER.encode(s).byteLength;\n}\n\nfunction getFormDataSize(formData: FormData): number {\n  let size = 0;\n  for (const [key, value] of formData.entries()) {\n    size += key.length;\n    if (value instanceof Blob) {\n      size += value.size;\n    } else {\n      size += value.length;\n    }\n  }\n  return size;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.56.0';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport enum AttributeNames {\n  HTTP_STATUS_TEXT = 'http.status_text',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\nexport * from './types';\nexport * from './enums/AttributeNames';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/// <reference types=\"zone.js\" />\n\nimport { isWrapped, InstrumentationBase } from '@opentelemetry/instrumentation';\n\nimport * as api from '@opentelemetry/api';\nimport { hrTime } from '@opentelemetry/core';\nimport { getElementXPath } from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\nimport {\n  EventName,\n  ShouldPreventSpanCreation,\n  UserInteractionInstrumentationConfig,\n} from './types';\nimport {\n  AsyncTask,\n  RunTaskFunction,\n  SpanData,\n  WindowWithZone,\n  ZoneTypeWithPrototype,\n} from './internal-types';\n/** @knipignore */\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\nconst ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\nconst EVENT_NAVIGATION_NAME = 'Navigation:';\nconst DEFAULT_EVENT_NAMES: EventName[] = ['click'];\n\nfunction defaultShouldPreventSpanCreation() {\n  return false;\n}\n\n/**\n * This class represents a UserInteraction plugin for auto instrumentation.\n * If zone.js is available then it patches the zone otherwise it patches\n * addEventListener of HTMLElement\n */\nexport class UserInteractionInstrumentation extends InstrumentationBase<UserInteractionInstrumentationConfig> {\n  readonly version = PACKAGE_VERSION;\n  readonly moduleName: string = 'user-interaction';\n  private _spansData = new WeakMap<api.Span, SpanData>();\n  private _zonePatched?: boolean;\n  // for addEventListener/removeEventListener state\n  private _wrappedListeners = new WeakMap<\n    Function | EventListenerObject,\n    Map<string, Map<HTMLElement, Function>>\n  >();\n  // for event bubbling\n  private _eventsSpanMap: WeakMap<Event, api.Span> = new WeakMap<\n    Event,\n    api.Span\n  >();\n  private _eventNames: Set<EventName>;\n  private _shouldPreventSpanCreation: ShouldPreventSpanCreation;\n\n  constructor(config: UserInteractionInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n    this._eventNames = new Set(config?.eventNames ?? DEFAULT_EVENT_NAMES);\n    this._shouldPreventSpanCreation =\n      typeof config?.shouldPreventSpanCreation === 'function'\n        ? config.shouldPreventSpanCreation\n        : defaultShouldPreventSpanCreation;\n  }\n\n  init() {}\n\n  /**\n   * This will check if last task was timeout and will save the time to\n   * fix the user interaction when nothing happens\n   * This timeout comes from xhr plugin which is needed to collect information\n   * about last xhr main request from observer\n   * @param task\n   * @param span\n   */\n  private _checkForTimeout(task: AsyncTask, span: api.Span) {\n    const spanData = this._spansData.get(span);\n    if (spanData) {\n      if (task.source === 'setTimeout') {\n        spanData.hrTimeLastTimeout = hrTime();\n      } else if (\n        task.source !== 'Promise.then' &&\n        task.source !== 'setTimeout'\n      ) {\n        spanData.hrTimeLastTimeout = undefined;\n      }\n    }\n  }\n\n  /**\n   * Controls whether or not to create a span, based on the event type.\n   */\n  protected _allowEventName(eventName: EventName): boolean {\n    return this._eventNames.has(eventName);\n  }\n\n  /**\n   * Creates a new span\n   * @param element\n   * @param eventName\n   * @param parentSpan\n   */\n  private _createSpan(\n    element: EventTarget | null | undefined,\n    eventName: EventName,\n    parentSpan?: api.Span\n  ): api.Span | undefined {\n    if (!(element instanceof HTMLElement)) {\n      return undefined;\n    }\n    if (!element.getAttribute) {\n      return undefined;\n    }\n    if (element.hasAttribute('disabled')) {\n      return undefined;\n    }\n    if (!this._allowEventName(eventName)) {\n      return undefined;\n    }\n    const xpath = getElementXPath(element, true);\n    try {\n      const span = this.tracer.startSpan(\n        eventName,\n        {\n          attributes: {\n            [AttributeNames.EVENT_TYPE]: eventName,\n            [AttributeNames.TARGET_ELEMENT]: element.tagName,\n            [AttributeNames.TARGET_XPATH]: xpath,\n            [AttributeNames.HTTP_URL]: window.location.href,\n          },\n        },\n        parentSpan\n          ? api.trace.setSpan(api.context.active(), parentSpan)\n          : undefined\n      );\n\n      if (this._shouldPreventSpanCreation(eventName, element, span) === true) {\n        return undefined;\n      }\n\n      this._spansData.set(span, {\n        taskCount: 0,\n      });\n\n      return span;\n    } catch (e) {\n      this._diag.error('failed to start create new user interaction span', e);\n    }\n    return undefined;\n  }\n\n  /**\n   * Decrement number of tasks that left in zone,\n   * This is needed to be able to end span when no more tasks left\n   * @param span\n   */\n  private _decrementTask(span: api.Span) {\n    const spanData = this._spansData.get(span);\n    if (spanData) {\n      spanData.taskCount--;\n      if (spanData.taskCount === 0) {\n        this._tryToEndSpan(span, spanData.hrTimeLastTimeout);\n      }\n    }\n  }\n\n  /**\n   * Return the current span\n   * @param zone\n   * @private\n   */\n  private _getCurrentSpan(zone: Zone): api.Span | undefined {\n    const context: api.Context | undefined = zone.get(ZONE_CONTEXT_KEY);\n    if (context) {\n      return api.trace.getSpan(context);\n    }\n    return context;\n  }\n\n  /**\n   * Increment number of tasks that are run within the same zone.\n   *     This is needed to be able to end span when no more tasks left\n   * @param span\n   */\n  private _incrementTask(span: api.Span) {\n    const spanData = this._spansData.get(span);\n    if (spanData) {\n      spanData.taskCount++;\n    }\n  }\n\n  /**\n   * Returns true iff we should use the patched callback; false if it's already been patched\n   */\n  private addPatchedListener(\n    on: HTMLElement,\n    type: string,\n    listener: Function | EventListenerObject,\n    wrappedListener: Function\n  ): boolean {\n    let listener2Type = this._wrappedListeners.get(listener);\n    if (!listener2Type) {\n      listener2Type = new Map();\n      this._wrappedListeners.set(listener, listener2Type);\n    }\n    let element2patched = listener2Type.get(type);\n    if (!element2patched) {\n      element2patched = new Map();\n      listener2Type.set(type, element2patched);\n    }\n    if (element2patched.has(on)) {\n      return false;\n    }\n    element2patched.set(on, wrappedListener);\n    return true;\n  }\n\n  /**\n   * Returns the patched version of the callback (or undefined)\n   */\n  private removePatchedListener(\n    on: HTMLElement,\n    type: string,\n    listener: Function | EventListenerObject\n  ): Function | undefined {\n    const listener2Type = this._wrappedListeners.get(listener);\n    if (!listener2Type) {\n      return undefined;\n    }\n    const element2patched = listener2Type.get(type);\n    if (!element2patched) {\n      return undefined;\n    }\n    const patched = element2patched.get(on);\n    if (patched) {\n      element2patched.delete(on);\n      if (element2patched.size === 0) {\n        listener2Type.delete(type);\n        if (listener2Type.size === 0) {\n          this._wrappedListeners.delete(listener);\n        }\n      }\n    }\n    return patched;\n  }\n\n  // utility method to deal with the Function|EventListener nature of addEventListener\n  private _invokeListener(\n    listener: Function | EventListenerObject,\n    target: any,\n    args: any[]\n  ): any {\n    if (typeof listener === 'function') {\n      return listener.apply(target, args);\n    } else {\n      return listener.handleEvent(args[0]);\n    }\n  }\n\n  /**\n   * This patches the addEventListener of HTMLElement to be able to\n   * auto instrument the click events\n   * This is done when zone is not available\n   */\n  private _patchAddEventListener() {\n    const plugin = this;\n    return (original: EventTarget['addEventListener']) => {\n      return function addEventListenerPatched(\n        this: HTMLElement,\n        type: keyof HTMLElementEventMap,\n        listener: EventListenerOrEventListenerObject | null,\n        useCapture?: boolean | AddEventListenerOptions\n      ) {\n        // Forward calls with listener = null\n        if (!listener) {\n          return original.call(this, type, listener, useCapture);\n        }\n\n        // filter out null (typeof null === 'object')\n        const once =\n          useCapture && typeof useCapture === 'object' && useCapture.once;\n        const patchedListener = function (this: HTMLElement, ...args: any[]) {\n          let parentSpan: api.Span | undefined;\n          const event: Event | undefined = args[0];\n          const target = event?.target;\n          if (event) {\n            parentSpan = plugin._eventsSpanMap.get(event);\n          }\n          if (once) {\n            plugin.removePatchedListener(this, type, listener);\n          }\n          const span = plugin._createSpan(target, type, parentSpan);\n          if (span) {\n            if (event) {\n              plugin._eventsSpanMap.set(event, span);\n            }\n            return api.context.with(\n              api.trace.setSpan(api.context.active(), span),\n              () => {\n                const result = plugin._invokeListener(listener, this, args);\n                // no zone so end span immediately\n                span.end();\n                return result;\n              }\n            );\n          } else {\n            return plugin._invokeListener(listener, this, args);\n          }\n        };\n        if (plugin.addPatchedListener(this, type, listener, patchedListener)) {\n          return original.call(this, type, patchedListener, useCapture);\n        }\n      };\n    };\n  }\n\n  /**\n   * This patches the removeEventListener of HTMLElement to handle the fact that\n   * we patched the original callbacks\n   * This is done when zone is not available\n   */\n  private _patchRemoveEventListener() {\n    const plugin = this;\n    return (original: Function) => {\n      return function removeEventListenerPatched(\n        this: HTMLElement,\n        type: any,\n        listener: any,\n        useCapture: any\n      ) {\n        const wrappedListener = plugin.removePatchedListener(\n          this,\n          type,\n          listener\n        );\n        if (wrappedListener) {\n          return original.call(this, type, wrappedListener, useCapture);\n        } else {\n          return original.call(this, type, listener, useCapture);\n        }\n      };\n    };\n  }\n\n  /**\n   * Most browser provide event listener api via EventTarget in prototype chain.\n   * Exception to this is IE 11 which has it on the prototypes closest to EventTarget:\n   *\n   * * - has addEventListener in IE\n   * ** - has addEventListener in all other browsers\n   * ! - missing in IE\n   *\n   * HTMLElement -> Element -> Node * -> EventTarget **! -> Object\n   * Document -> Node * -> EventTarget **! -> Object\n   * Window * -> WindowProperties ! -> EventTarget **! -> Object\n   */\n  private _getPatchableEventTargets(): EventTarget[] {\n    return window.EventTarget\n      ? [EventTarget.prototype]\n      : [Node.prototype, Window.prototype];\n  }\n\n  /**\n   * Patches the history api\n   */\n  _patchHistoryApi() {\n    this._unpatchHistoryApi();\n\n    this._wrap(history, 'replaceState', this._patchHistoryMethod());\n    this._wrap(history, 'pushState', this._patchHistoryMethod());\n    this._wrap(history, 'back', this._patchHistoryMethod());\n    this._wrap(history, 'forward', this._patchHistoryMethod());\n    this._wrap(history, 'go', this._patchHistoryMethod());\n  }\n\n  /**\n   * Patches the certain history api method\n   */\n  _patchHistoryMethod() {\n    const plugin = this;\n    return (original: any) => {\n      return function patchHistoryMethod(this: History, ...args: unknown[]) {\n        const url = `${location.pathname}${location.hash}${location.search}`;\n        const result = original.apply(this, args);\n        const urlAfter = `${location.pathname}${location.hash}${location.search}`;\n        if (url !== urlAfter) {\n          plugin._updateInteractionName(urlAfter);\n        }\n        return result;\n      };\n    };\n  }\n\n  /**\n   * unpatch the history api methods\n   */\n  _unpatchHistoryApi() {\n    if (isWrapped(history.replaceState)) this._unwrap(history, 'replaceState');\n    if (isWrapped(history.pushState)) this._unwrap(history, 'pushState');\n    if (isWrapped(history.back)) this._unwrap(history, 'back');\n    if (isWrapped(history.forward)) this._unwrap(history, 'forward');\n    if (isWrapped(history.go)) this._unwrap(history, 'go');\n  }\n\n  /**\n   * Updates interaction span name\n   * @param url\n   */\n  _updateInteractionName(url: string) {\n    const span: api.Span | undefined = api.trace.getSpan(api.context.active());\n    if (span && typeof span.updateName === 'function') {\n      span.updateName(`${EVENT_NAVIGATION_NAME} ${url}`);\n    }\n  }\n\n  /**\n   * Patches zone cancel task - this is done to be able to correctly\n   * decrement the number of remaining tasks\n   */\n  private _patchZoneCancelTask() {\n    const plugin = this;\n    return (original: any) => {\n      return function patchCancelTask<T extends Task>(\n        this: Zone,\n        task: AsyncTask\n      ) {\n        const currentZone = Zone.current;\n        const currentSpan = plugin._getCurrentSpan(currentZone);\n        if (currentSpan && plugin._shouldCountTask(task, currentZone)) {\n          plugin._decrementTask(currentSpan);\n        }\n        return original.call(this, task) as T;\n      };\n    };\n  }\n\n  /**\n   * Patches zone schedule task - this is done to be able to correctly\n   * increment the number of tasks running within current zone but also to\n   * save time in case of timeout running from xhr plugin when waiting for\n   * main request from PerformanceResourceTiming\n   */\n  private _patchZoneScheduleTask() {\n    const plugin = this;\n    return (original: any) => {\n      return function patchScheduleTask<T extends Task>(\n        this: Zone,\n        task: AsyncTask\n      ) {\n        const currentZone = Zone.current;\n        const currentSpan = plugin._getCurrentSpan(currentZone);\n        if (currentSpan && plugin._shouldCountTask(task, currentZone)) {\n          plugin._incrementTask(currentSpan);\n          plugin._checkForTimeout(task, currentSpan);\n        }\n        return original.call(this, task) as T;\n      };\n    };\n  }\n\n  /**\n   * Patches zone run task - this is done to be able to create a span when\n   * user interaction starts\n   * @private\n   */\n  private _patchZoneRunTask() {\n    const plugin = this;\n    return (original: RunTaskFunction): RunTaskFunction => {\n      return function patchRunTask(\n        this: Zone,\n        task: AsyncTask,\n        applyThis?: any,\n        applyArgs?: any\n      ): Zone {\n        const event =\n          Array.isArray(applyArgs) && applyArgs[0] instanceof Event\n            ? applyArgs[0]\n            : undefined;\n        const target = event?.target;\n        let span: api.Span | undefined;\n        const activeZone = this;\n        if (target) {\n          span = plugin._createSpan(target, task.eventName);\n          if (span) {\n            plugin._incrementTask(span);\n            return activeZone.run(() => {\n              try {\n                return api.context.with(\n                  api.trace.setSpan(api.context.active(), span!),\n                  () => {\n                    const currentZone = Zone.current;\n                    task._zone = currentZone;\n                    return original.call(\n                      currentZone,\n                      task,\n                      applyThis,\n                      applyArgs\n                    );\n                  }\n                );\n              } finally {\n                plugin._decrementTask(span as api.Span);\n              }\n            });\n          }\n        } else {\n          span = plugin._getCurrentSpan(activeZone);\n        }\n\n        try {\n          return original.call(activeZone, task, applyThis, applyArgs);\n        } finally {\n          if (span && plugin._shouldCountTask(task, activeZone)) {\n            plugin._decrementTask(span);\n          }\n        }\n      };\n    };\n  }\n\n  /**\n   * Decides if task should be counted.\n   * @param task\n   * @param currentZone\n   * @private\n   */\n  private _shouldCountTask(task: AsyncTask, currentZone: Zone): boolean {\n    if (task._zone) {\n      currentZone = task._zone;\n    }\n    if (!currentZone || !task.data || task.data.isPeriodic) {\n      return false;\n    }\n    const currentSpan = this._getCurrentSpan(currentZone);\n    if (!currentSpan) {\n      return false;\n    }\n    if (!this._spansData.get(currentSpan)) {\n      return false;\n    }\n    return task.type === 'macroTask' || task.type === 'microTask';\n  }\n\n  /**\n   * Will try to end span when such span still exists.\n   * @param span\n   * @param endTime\n   * @private\n   */\n  private _tryToEndSpan(span: api.Span, endTime?: api.HrTime) {\n    if (span) {\n      const spanData = this._spansData.get(span);\n      if (spanData) {\n        span.end(endTime);\n        this._spansData.delete(span);\n      }\n    }\n  }\n\n  /**\n   * implements enable function\n   */\n  override enable() {\n    const ZoneWithPrototype = this.getZoneWithPrototype();\n    this._diag.debug(\n      'applying patch to',\n      this.moduleName,\n      this.version,\n      'zone:',\n      !!ZoneWithPrototype\n    );\n    if (ZoneWithPrototype) {\n      if (isWrapped(ZoneWithPrototype.prototype.runTask)) {\n        this._unwrap(ZoneWithPrototype.prototype, 'runTask');\n        this._diag.debug('removing previous patch from method runTask');\n      }\n      if (isWrapped(ZoneWithPrototype.prototype.scheduleTask)) {\n        this._unwrap(ZoneWithPrototype.prototype, 'scheduleTask');\n        this._diag.debug('removing previous patch from method scheduleTask');\n      }\n      if (isWrapped(ZoneWithPrototype.prototype.cancelTask)) {\n        this._unwrap(ZoneWithPrototype.prototype, 'cancelTask');\n        this._diag.debug('removing previous patch from method cancelTask');\n      }\n\n      this._zonePatched = true;\n      this._wrap(\n        ZoneWithPrototype.prototype,\n        'runTask',\n        this._patchZoneRunTask()\n      );\n      this._wrap(\n        ZoneWithPrototype.prototype,\n        'scheduleTask',\n        this._patchZoneScheduleTask()\n      );\n      this._wrap(\n        ZoneWithPrototype.prototype,\n        'cancelTask',\n        this._patchZoneCancelTask()\n      );\n    } else {\n      this._zonePatched = false;\n      const targets = this._getPatchableEventTargets();\n      targets.forEach(target => {\n        if (isWrapped(target.addEventListener)) {\n          this._unwrap(target, 'addEventListener');\n          this._diag.debug(\n            'removing previous patch from method addEventListener'\n          );\n        }\n        if (isWrapped(target.removeEventListener)) {\n          this._unwrap(target, 'removeEventListener');\n          this._diag.debug(\n            'removing previous patch from method removeEventListener'\n          );\n        }\n        this._wrap(target, 'addEventListener', this._patchAddEventListener());\n        this._wrap(\n          target,\n          'removeEventListener',\n          this._patchRemoveEventListener()\n        );\n      });\n    }\n\n    this._patchHistoryApi();\n  }\n\n  /**\n   * implements unpatch function\n   */\n  override disable() {\n    const ZoneWithPrototype = this.getZoneWithPrototype();\n    this._diag.debug(\n      'removing patch from',\n      this.moduleName,\n      this.version,\n      'zone:',\n      !!ZoneWithPrototype\n    );\n    if (ZoneWithPrototype && this._zonePatched) {\n      if (isWrapped(ZoneWithPrototype.prototype.runTask)) {\n        this._unwrap(ZoneWithPrototype.prototype, 'runTask');\n      }\n      if (isWrapped(ZoneWithPrototype.prototype.scheduleTask)) {\n        this._unwrap(ZoneWithPrototype.prototype, 'scheduleTask');\n      }\n      if (isWrapped(ZoneWithPrototype.prototype.cancelTask)) {\n        this._unwrap(ZoneWithPrototype.prototype, 'cancelTask');\n      }\n    } else {\n      const targets = this._getPatchableEventTargets();\n      targets.forEach(target => {\n        if (isWrapped(target.addEventListener)) {\n          this._unwrap(target, 'addEventListener');\n        }\n        if (isWrapped(target.removeEventListener)) {\n          this._unwrap(target, 'removeEventListener');\n        }\n      });\n    }\n    this._unpatchHistoryApi();\n  }\n\n  /**\n   * returns Zone\n   */\n  getZoneWithPrototype(): ZoneTypeWithPrototype | undefined {\n    const _window: WindowWithZone = window as unknown as WindowWithZone;\n    return _window.Zone;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { registerInstrumentations } from './autoLoader';\nexport { InstrumentationBase } from './platform/index';\nexport { InstrumentationNodeModuleDefinition } from './instrumentationNodeModuleDefinition';\nexport { InstrumentationNodeModuleFile } from './instrumentationNodeModuleFile';\nexport {\n  Instrumentation,\n  InstrumentationConfig,\n  InstrumentationModuleDefinition,\n  InstrumentationModuleFile,\n  ShimWrapped,\n  SpanCustomizationHook,\n} from './types';\nexport { AutoLoaderOptions, AutoLoaderResult } from './types_internal';\nexport {\n  isWrapped,\n  safeExecuteInTheMiddle,\n  safeExecuteInTheMiddleAsync,\n} from './utils';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { InstrumentationBase } from './instrumentation';\nexport { normalize } from './noop-normalize';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationAbstract } from '../../instrumentation';\nimport * as types from '../../types';\nimport { InstrumentationConfig } from '../../types';\n\n/**\n * Base abstract class for instrumenting web plugins\n */\nexport abstract class InstrumentationBase<\n    ConfigType extends InstrumentationConfig = InstrumentationConfig,\n  >\n  extends InstrumentationAbstract<ConfigType>\n  implements types.Instrumentation<ConfigType>\n{\n  constructor(\n    instrumentationName: string,\n    instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    super(instrumentationName, instrumentationVersion, config);\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  DiagLogger,\n  metrics,\n  Meter,\n  MeterProvider,\n  trace,\n  Tracer,\n  TracerProvider,\n  Span,\n} from '@opentelemetry/api';\nimport { Logger, LoggerProvider, logs } from '@opentelemetry/api-logs';\nimport * as shimmer from 'shimmer';\nimport {\n  InstrumentationModuleDefinition,\n  Instrumentation,\n  InstrumentationConfig,\n  SpanCustomizationHook,\n} from './types';\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nexport abstract class InstrumentationAbstract<\n  ConfigType extends InstrumentationConfig = InstrumentationConfig,\n> implements Instrumentation<ConfigType>\n{\n  protected _config: ConfigType = {} as ConfigType;\n\n  private _tracer: Tracer;\n  private _meter: Meter;\n  private _logger: Logger;\n  protected _diag: DiagLogger;\n\n  constructor(\n    public readonly instrumentationName: string,\n    public readonly instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    this.setConfig(config);\n\n    this._diag = diag.createComponentLogger({\n      namespace: instrumentationName,\n    });\n\n    this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n    this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n    this._logger = logs.getLogger(instrumentationName, instrumentationVersion);\n    this._updateMetricInstruments();\n  }\n\n  /* Api to wrap instrumented method */\n  protected _wrap = shimmer.wrap;\n  /* Api to unwrap instrumented methods */\n  protected _unwrap = shimmer.unwrap;\n  /* Api to mass wrap instrumented method */\n  protected _massWrap = shimmer.massWrap;\n  /* Api to mass unwrap instrumented methods */\n  protected _massUnwrap = shimmer.massUnwrap;\n\n  /* Returns meter */\n  protected get meter(): Meter {\n    return this._meter;\n  }\n\n  /**\n   * Sets MeterProvider to this plugin\n   * @param meterProvider\n   */\n  public setMeterProvider(meterProvider: MeterProvider): void {\n    this._meter = meterProvider.getMeter(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n\n    this._updateMetricInstruments();\n  }\n\n  /* Returns logger */\n  protected get logger(): Logger {\n    return this._logger;\n  }\n\n  /**\n   * Sets LoggerProvider to this plugin\n   * @param loggerProvider\n   */\n  public setLoggerProvider(loggerProvider: LoggerProvider): void {\n    this._logger = loggerProvider.getLogger(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /**\n   * @experimental\n   *\n   * Get module definitions defined by {@link init}.\n   * This can be used for experimental compile-time instrumentation.\n   *\n   * @returns an array of {@link InstrumentationModuleDefinition}\n   */\n  public getModuleDefinitions(): InstrumentationModuleDefinition[] {\n    const initResult = this.init() ?? [];\n    if (!Array.isArray(initResult)) {\n      return [initResult];\n    }\n\n    return initResult;\n  }\n\n  /**\n   * Sets the new metric instruments with the current Meter.\n   */\n  protected _updateMetricInstruments(): void {\n    return;\n  }\n\n  /* Returns InstrumentationConfig */\n  public getConfig(): ConfigType {\n    return this._config;\n  }\n\n  /**\n   * Sets InstrumentationConfig to this plugin\n   * @param config\n   */\n  public setConfig(config: ConfigType): void {\n    // copy config first level properties to ensure they are immutable.\n    // nested properties are not copied, thus are mutable from the outside.\n    this._config = {\n      enabled: true,\n      ...config,\n    };\n  }\n\n  /**\n   * Sets TraceProvider to this plugin\n   * @param tracerProvider\n   */\n  public setTracerProvider(tracerProvider: TracerProvider): void {\n    this._tracer = tracerProvider.getTracer(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /* Returns tracer */\n  protected get tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /* Enable plugin */\n  public abstract enable(): void;\n\n  /* Disable plugin */\n  public abstract disable(): void;\n\n  /**\n   * Init method in which plugin should define _modules and patches for\n   * methods.\n   */\n  protected abstract init():\n    | InstrumentationModuleDefinition\n    | InstrumentationModuleDefinition[]\n    | void;\n\n  /**\n   * Execute span customization hook, if configured, and log any errors.\n   * Any semantics of the trigger and info are defined by the specific instrumentation.\n   * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n   * @param triggerName The name of the trigger for executing the hook for logging purposes\n   * @param span The span to which the hook should be applied\n   * @param info The info object to be passed to the hook, with useful data the hook may use\n   */\n  protected _runSpanCustomizationHook<SpanCustomizationInfoType>(\n    hookHandler: SpanCustomizationHook<SpanCustomizationInfoType> | undefined,\n    triggerName: string,\n    span: Span,\n    info: SpanCustomizationInfoType\n  ) {\n    if (!hookHandler) {\n      return;\n    }\n\n    try {\n      hookHandler(span, info);\n    } catch (e) {\n      this._diag.error(\n        `Error running span customization hook due to exception in handler`,\n        { triggerName },\n        e\n      );\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Logger } from './types/Logger';\nexport { LoggerProvider } from './types/LoggerProvider';\nexport {\n  LogAttributes,\n  LogBody,\n  LogRecord,\n  SeverityNumber,\n} from './types/LogRecord';\nexport { LoggerOptions } from './types/LoggerOptions';\nexport { AnyValue, AnyValueMap } from './types/AnyValue';\nexport { NOOP_LOGGER, NoopLogger } from './NoopLogger';\nexport { NOOP_LOGGER_PROVIDER, NoopLoggerProvider } from './NoopLoggerProvider';\nexport { ProxyLogger } from './ProxyLogger';\nexport { ProxyLoggerProvider } from './ProxyLoggerProvider';\n\nimport { LogsAPI } from './api/logs';\nexport const logs = LogsAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './types/Logger';\nimport { LogRecord } from './types/LogRecord';\n\nexport class NoopLogger implements Logger {\n  emit(_logRecord: LogRecord): void {}\n}\n\nexport const NOOP_LOGGER = new NoopLogger();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NoopLogger } from './NoopLogger';\n\nexport class NoopLoggerProvider implements LoggerProvider {\n  getLogger(\n    _name: string,\n    _version?: string | undefined,\n    _options?: LoggerOptions | undefined\n  ): Logger {\n    return new NoopLogger();\n  }\n}\n\nexport const NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NOOP_LOGGER } from './NoopLogger';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { LogRecord } from './types/LogRecord';\n\nexport class ProxyLogger implements Logger {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Logger;\n\n  constructor(\n    private _provider: LoggerDelegator,\n    public readonly name: string,\n    public readonly version?: string | undefined,\n    public readonly options?: LoggerOptions | undefined\n  ) {}\n\n  /**\n   * Emit a log record. This method should only be used by log appenders.\n   *\n   * @param logRecord\n   */\n  emit(logRecord: LogRecord): void {\n    this._getLogger().emit(logRecord);\n  }\n\n  /**\n   * Try to get a logger from the proxy logger provider.\n   * If the proxy logger provider has no delegate, return a noop logger.\n   */\n  private _getLogger() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n    const logger = this._provider.getDelegateLogger(\n      this.name,\n      this.version,\n      this.options\n    );\n    if (!logger) {\n      return NOOP_LOGGER;\n    }\n    this._delegate = logger;\n    return this._delegate;\n  }\n}\n\nexport interface LoggerDelegator {\n  getDelegateLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NOOP_LOGGER_PROVIDER } from './NoopLoggerProvider';\nimport { ProxyLogger } from './ProxyLogger';\n\nexport class ProxyLoggerProvider implements LoggerProvider {\n  private _delegate?: LoggerProvider;\n\n  getLogger(\n    name: string,\n    version?: string | undefined,\n    options?: LoggerOptions | undefined\n  ): Logger {\n    return (\n      this.getDelegateLogger(name, version, options) ??\n      new ProxyLogger(this, name, version, options)\n    );\n  }\n\n  getDelegate(): LoggerProvider {\n    return this._delegate ?? NOOP_LOGGER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate logger provider\n   */\n  setDelegate(delegate: LoggerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateLogger(\n    name: string,\n    version?: string | undefined,\n    options?: LoggerOptions | undefined\n  ): Logger | undefined {\n    return this._delegate?.getLogger(name, version, options);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_LOGS_API_KEY,\n  _global,\n  makeGetter,\n} from '../internal/global-utils';\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { Logger } from '../types/Logger';\nimport { LoggerOptions } from '../types/LoggerOptions';\nimport { ProxyLoggerProvider } from '../ProxyLoggerProvider';\n\nexport class LogsAPI {\n  private static _instance?: LogsAPI;\n\n  private _proxyLoggerProvider = new ProxyLoggerProvider();\n\n  private constructor() {}\n\n  public static getInstance(): LogsAPI {\n    if (!this._instance) {\n      this._instance = new LogsAPI();\n    }\n\n    return this._instance;\n  }\n\n  public setGlobalLoggerProvider(provider: LoggerProvider): LoggerProvider {\n    if (_global[GLOBAL_LOGS_API_KEY]) {\n      return this.getLoggerProvider();\n    }\n\n    _global[GLOBAL_LOGS_API_KEY] = makeGetter<LoggerProvider>(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_LOGGER_PROVIDER\n    );\n    this._proxyLoggerProvider.setDelegate(provider);\n\n    return provider;\n  }\n\n  /**\n   * Returns the global logger provider.\n   *\n   * @returns LoggerProvider\n   */\n  public getLoggerProvider(): LoggerProvider {\n    return (\n      _global[GLOBAL_LOGS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      this._proxyLoggerProvider\n    );\n  }\n\n  /**\n   * Returns a logger from the global logger provider.\n   *\n   * @returns Logger\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger {\n    return this.getLoggerProvider().getLogger(name, version, options);\n  }\n\n  /** Remove the global logger provider */\n  public disable(): void {\n    delete _global[GLOBAL_LOGS_API_KEY];\n    this._proxyLoggerProvider = new ProxyLoggerProvider();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_LOGS_API_KEY]: Get<LoggerProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { _globalThis } from './globalThis';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n      ? self\n      : typeof window === 'object'\n        ? window\n        : typeof global === 'object'\n          ? global\n          : ({} as typeof globalThis);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from './types';\n\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): T {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport async function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  EVENT_TYPE = 'event_type',\n  TARGET_ELEMENT = 'target_element',\n  TARGET_XPATH = 'target_xpath',\n  HTTP_URL = 'http.url',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.43.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-user-interaction';\n"],"names":[],"version":3,"file":"index.af4559fd.js.map","sourceRoot":"/__parcel_source_root/"}